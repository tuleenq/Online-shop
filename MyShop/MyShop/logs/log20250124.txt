2025-01-24 22:18:15.811 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-24 22:18:16.173 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-24 22:18:16.177 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-24 22:18:16.267 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-24 22:18:16.270 +03:00 [INF] Hosting environment: Development
2025-01-24 22:18:16.271 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-24 22:18:17.574 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-24 22:18:17.848 +03:00 [INF] [Request] GET /

2025-01-24 22:18:17.896 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-24 22:18:17.929 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-24 22:18:17.960 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-24 22:18:18.055 +03:00 [INF] Executed ViewResult - view Index executed in 102.5686ms.
2025-01-24 22:18:18.059 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 126.869ms
2025-01-24 22:18:18.060 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-24 22:18:18.062 +03:00 [INF] [Response] 200 - 223ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Home - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
    

 <style>
    .instrument-name {
        margin-top: 10px; /* Add space between the image and the text */
        font-size: 16px; /* Adjust the text size */
        font-weight: bold; /* Bold text */
        text-align: center; /* Center the text */
    }
  </style>

<section class="category-section py-4">
    <div class="category-section">
        <h3 style="text-align: center; margin-bottom: 20px;">Start Shopping Here</h3>
        <div class="row">
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Guitars'">
                <img src="/Images/pavlo-t-5rEyYBPLN-w-unsplash.jpg" alt="Guitars" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Guitars</p>
            </div>
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Keyboards & Pianos'">
                <img src="/Images/pexels-mikhail-nilov-7570112.jpg" alt="Keyboards & Pianos" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Keyboards & Pianos</p>
            </div>
            <!-- Drums & Percussion -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Drums & Percussion'">
                <img src="/Images/pexels-reneterp-1327430.jpg" alt="Drums & Percussion" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Drums & Percussion</p>
            </div>
            <!-- Pro Audio -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Pro Audio'">
                <img src="/Images/pexels-everson-mayer-478307-1481312.jpg" alt="Pro Audio" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Pro Audio</p>
            </div>
            <!-- Band & Orchestra -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Band & Orchestra'">
                <img src="/Images/pexels-shottrotter-752535.jpg" alt="Band & Orchestra" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Band & Orchestra</p>
            </div>
            <!-- Accessories -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Accessories'">
                <img src="/Images/pexels-rombo-1510555-5280438.jpg" alt="Accessories" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Accessories</p>
            </div>
        </div>
    </div>
</section>


    <section class="membership-section text-center bg-dark text-white py-5">
    <div class="membership-section">
        <h2>Have no clue what to buy ?</h2>
        <p>Check out our professional guide to get the perfect suited instrument !</p>
        <form class="d-inline-flex mt-2" action="/Home/Guide" method="get">
            
            <button class="btn btn-danger" type="submit">professional Guide</button>
        </form>
        </div>
    </section>

    <section class="features-section py-5 bg-light">
            <div class="container">
            <div class="row text-center">
                <div class="col-md-3">
                    <img src="/Images/box.png" alt="Same Day Delivery" class="mb-sm-1" style="width: 40px; height: 40px;">
                    <h5>Same Day/Next Day Delivery</h5>
                    <p>Next day delivery on most orders in Jordan - Same day available</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/shopping-cart.png" alt="Biggest Selection" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Biggest Selection</h5>
                    <p>Largest collection of any store in MENA</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/user-talking-with-speech-bubble.png" alt="Top-notch Support" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Top-notch Support</h5>
                    <p>We are always happy to help in any way we can</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/secure-payment.png" alt="Secure Payments" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Secure Payments</h5>
                    <p>Cash on Delivery available</p>
                </div>
            </div>
            </div>
     </section>


    

    <!-- JavaScript to Toggle Forms -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.js"></script>


        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="#">About Us</a></li>
                    <li><a href="#">Contact Us</a></li>
                    <li><a href="#">Terms & Conditions</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-24 22:18:18.121 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 558.3493ms
2025-01-24 22:18:18.139 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/audio-waves.png - null null
2025-01-24 22:18:18.140 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/pexels-mikhail-nilov-7570112.jpg - null null
2025-01-24 22:18:18.147 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/shopping-cart (1).png - null null
2025-01-24 22:18:18.147 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/sound (2).png - null null
2025-01-24 22:18:18.139 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-24 22:18:18.139 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/pavlo-t-5rEyYBPLN-w-unsplash.jpg - null null
2025-01-24 22:18:18.149 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-24 22:18:18.170 +03:00 [INF] The file /Images/pexels-mikhail-nilov-7570112.jpg was not modified
2025-01-24 22:18:18.170 +03:00 [INF] The file /Images/shopping-cart (1).png was not modified
2025-01-24 22:18:18.173 +03:00 [INF] The file /Images/sound (2).png was not modified
2025-01-24 22:18:18.170 +03:00 [INF] The file /Images/audio-waves.png was not modified
2025-01-24 22:18:18.178 +03:00 [INF] The file /Images/pavlo-t-5rEyYBPLN-w-unsplash.jpg was not modified
2025-01-24 22:18:18.165 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo - null null
2025-01-24 22:18:18.165 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-24 22:18:18.179 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/pexels-reneterp-1327430.jpg - null null
2025-01-24 22:18:18.180 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-24 22:18:18.181 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/pexels-mikhail-nilov-7570112.jpg - 304 null image/jpeg 41.042ms
2025-01-24 22:18:18.181 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/shopping-cart (1).png - 304 null image/png 42.1185ms
2025-01-24 22:18:18.182 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/sound (2).png - 304 null image/png 42.8173ms
2025-01-24 22:18:18.192 +03:00 [INF] The file /Images/pexels-reneterp-1327430.jpg was not modified
2025-01-24 22:18:18.182 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/audio-waves.png - 304 null image/png 44.1056ms
2025-01-24 22:18:18.183 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/pavlo-t-5rEyYBPLN-w-unsplash.jpg - 304 null image/jpeg 44.3428ms
2025-01-24 22:18:18.187 +03:00 [INF] The file /js/JavaScript.js was not modified
2025-01-24 22:18:18.189 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-24 22:18:18.195 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/pexels-everson-mayer-478307-1481312.jpg - null null
2025-01-24 22:18:18.196 +03:00 [INF] [Response] 404 - 15ms

2025-01-24 22:18:18.198 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/pexels-rombo-1510555-5280438.jpg - null null
2025-01-24 22:18:18.201 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/box.png - null null
2025-01-24 22:18:18.203 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/pexels-reneterp-1327430.jpg - 304 null image/jpeg 23.882ms
2025-01-24 22:18:18.207 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/pexels-shottrotter-752535.jpg - null null
2025-01-24 22:18:18.211 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo - 304 null text/javascript 45.979ms
2025-01-24 22:18:18.211 +03:00 [INF] [Response] 404 - 22ms

2025-01-24 22:18:18.213 +03:00 [INF] The file /Images/pexels-everson-mayer-478307-1481312.jpg was not modified
2025-01-24 22:18:18.214 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 65.4959ms
2025-01-24 22:18:18.216 +03:00 [INF] The file /Images/pexels-rombo-1510555-5280438.jpg was not modified
2025-01-24 22:18:18.217 +03:00 [INF] The file /Images/box.png was not modified
2025-01-24 22:18:18.220 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/shopping-cart.png - null null
2025-01-24 22:18:18.223 +03:00 [INF] The file /Images/pexels-shottrotter-752535.jpg was not modified
2025-01-24 22:18:18.224 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/user-talking-with-speech-bubble.png - null null
2025-01-24 22:18:18.225 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 60.7626ms
2025-01-24 22:18:18.226 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/pexels-everson-mayer-478307-1481312.jpg - 304 null image/jpeg 30.4995ms
2025-01-24 22:18:18.228 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-24 22:18:18.229 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/pexels-rombo-1510555-5280438.jpg - 304 null image/jpeg 30.4939ms
2025-01-24 22:18:18.229 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/box.png - 304 null image/png 28.2292ms
2025-01-24 22:18:18.231 +03:00 [INF] The file /Images/shopping-cart.png was not modified
2025-01-24 22:18:18.232 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/pexels-shottrotter-752535.jpg - 304 null image/jpeg 24.8972ms
2025-01-24 22:18:18.234 +03:00 [INF] The file /Images/user-talking-with-speech-bubble.png was not modified
2025-01-24 22:18:18.239 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/secure-payment.png - null null
2025-01-24 22:18:18.243 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-24 22:18:18.247 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 107.7955ms
2025-01-24 22:18:18.275 +03:00 [INF] The file /Images/secure-payment.png was not modified
2025-01-24 22:18:18.246 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/shopping-cart.png - 304 null image/png 26.1922ms
2025-01-24 22:18:18.297 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/secure-payment.png - 304 null image/png 57.5467ms
2025-01-24 22:18:18.251 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/user-talking-with-speech-bubble.png - 304 null image/png 26.3353ms
2025-01-24 22:18:18.237 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-24 22:18:18.376 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 132.9607ms
2025-01-24 22:18:32.089 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/products?category=Band%20&%20Orchestra - null null
2025-01-24 22:18:32.102 +03:00 [INF] [Request] GET /Home/products
[QueryString] ?category=Band%20&%20Orchestra

2025-01-24 22:18:32.108 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-24 22:18:32.110 +03:00 [INF] Route matched with {action = "Products", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Products(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-24 22:18:32.177 +03:00 [INF] Executing ViewResult, running view Products.
2025-01-24 22:18:32.195 +03:00 [INF] Executed ViewResult - view Products executed in 19.1145ms.
2025-01-24 22:18:32.197 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Products (MyShop) in 84.3281ms
2025-01-24 22:18:32.198 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-24 22:18:32.199 +03:00 [INF] [Response] 200 - 96ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>products - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            <style>
    .card-title {
        transition: transform 0.3s ease, color 0.3s ease;
        cursor: pointer;
    }

        .card-title:hover {
            transform: scale(1.1);
            color: #dc3545; /* Highlight color */
        }
</style>


<div class="container">
    <div class="row" id="product-container">
        <!-- Product cards will be dynamically added here -->
    </div>
</div>
    <div class="features-section py-4 bg-light">

        <div class="row text-center">
            <div class="col-md-3">
                <img src="/Images/box.png" alt="Same Day Delivery" class="mb-sm-1" style="width: 40px; height: 40px;">
                <h5>Same Day/Next Day Delivery</h5>
                <p>Next day delivery on most orders in Jordan - Same day available</p>
            </div>
            <div class="col-md-3">
                <img src="/Images/shopping-cart.png" alt="Biggest Selection" class="mb-2" style="width: 40px; height: 40px;">
                <h5>Biggest Selection</h5>
                <p>Largest collection of any store in MENA</p>
            </div>
            <div class="col-md-3">
                <img src="/Images/user-talking-with-speech-bubble.png" alt="Top-notch Support" class="mb-2" style="width: 40px; height: 40px;">
                <h5>Top-notch Support</h5>
                <p>We are always happy to help in any way we can</p>
            </div>
            <div class="col-md-3">
                <img src="/Images/secure-payment.png" alt="Secure Payments" class="mb-2" style="width: 40px; height: 40px;">
                <h5>Secure Payments</h5>
                <p>Cash on Delivery available</p>
            </div>
        </div>
    </div>


   

    <!-- Login/Signup Modal -->
    <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <!-- Login Form -->
                    <form id="loginForm">
                        <div class="mb-3">
                            <label for="loginEmail" class="form-label">Email</label>
                            <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                        </div>
                        <div class="mb-3">
                            <label for="loginPassword" class="form-label">Password</label>
                            <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                        </div>
                        <button type="submit" class="btn btn-danger w-100">Login</button>
                        <div class="form-switch-link">
                            <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                        </div>
                    </form>

                    <!-- Signup Form (Hidden by Default) -->
                    <form id="signupForm" style="display: none;">
                        <div class="mb-3">
                            <label for="signupEmail" class="form-label">Email</label>
                            <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                        </div>
                        <div class="mb-3">
                            <label for="signupPassword" class="form-label">Password</label>
                            <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                        </div>
                        <div class="mb-3">
                            <label for="name" class="form-label">Name</label>
                            <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                        </div>
                        <div class="mb-3">
                            <label for="adress" class="form-label">Adress</label>
                            <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                        </div>
                        <div class="mb-3">
                            <label for="phone" class="form-label">Phone</label>
                            <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                        </div>

                        <button type="submit" class="btn btn-danger w-100">Signup</button>
                        <div class="form-switch-link">
                            <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const urlParams = new URLSearchParams(window.location.search);
        const category = urlParams.get('category');

        if (category) {
            fetchProducts(category);
        } else {
            alert("No category selected! Please try again.");
        }
    });

    async function fetchProducts(category) {
        const apiUrl = `https://localhost:7298/api/Products/by-category/${encodeURIComponent(category)}`;

        try {
            const response = await fetch(apiUrl);
            if (!response.ok) {
                throw new Error(`Failed to fetch products: ${response.status} ${response.statusText}`);
            }

            const products = await response.json();
            const productContainer = document.getElementById('product-container');
            productContainer.innerHTML = '';

            if (products.length === 0) {
                productContainer.innerHTML = `<p class="text-center">No products found for this category.</p>`;
                return;
            }

            products.forEach((product) => {
                const productCard = document.createElement('div');
                productCard.className = 'col-md-4 mb-4';

                productCard.innerHTML = `
                        <div class="card h-100">
                            <img src="${product.imageFile}" class="card-img-top" alt="${product.name}">
                            <div class="card-body text-center">
                                <h5 class="card-title" data-product-name="${product.name}">${product.name}</h5>
                                <p class="card-text">$${product.price.toFixed(2)}</p>
                            </div>
                        </div>
                    `;

                // Add click event to navigate to the product view
                productCard.querySelector('.card-title').addEventListener('click', function () {
                    const productName = encodeURIComponent(this.getAttribute('data-product-name'));
                    window.location.href = `/Home/product?name=${productName}`;
                });

                productContainer.appendChild(productCard);
            });
        } catch (error) {
            console.error('Error fetching products:', error);
            const productContainer = document.getElementById('product-container');
            productContainer.innerHTML = `<p class="text-center text-danger">An error occurred while loading products. Please try again later.</p>`;
        }
    }
</script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.js"></script>

        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="#">About Us</a></li>
                    <li><a href="#">Contact Us</a></li>
                    <li><a href="#">Terms & Conditions</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-24 22:18:32.248 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/products?category=Band%20&%20Orchestra - 200 null text/html; charset=utf-8 158.7265ms
2025-01-24 22:18:32.263 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-24 22:18:32.263 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-24 22:18:32.266 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-24 22:18:32.265 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-24 22:18:32.268 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-24 22:18:32.272 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-24 22:18:32.283 +03:00 [INF] [Response] 404 - 15ms

2025-01-24 22:18:32.284 +03:00 [INF] [Response] 404 - 11ms

2025-01-24 22:18:32.285 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 17.7119ms
2025-01-24 22:18:32.285 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 22.5387ms
2025-01-24 22:18:32.287 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 24.2361ms
2025-01-24 22:18:32.293 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 27.3319ms
2025-01-24 22:18:32.294 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-24 22:18:32.297 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-24 22:18:32.472 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Band  - null null
2025-01-24 22:18:32.479 +03:00 [INF] [Request] GET /api/Products/by-category/Band%20

2025-01-24 22:18:32.484 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-24 22:18:32.496 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-24 22:18:34.226 +03:00 [INF] Executed DbCommand (66ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-24 22:18:34.263 +03:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-01-24 22:18:34.269 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 1771.4678ms
2025-01-24 22:18:34.271 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-24 22:18:34.272 +03:00 [INF] [Response] 404 - 1792ms
No products found for category: Band 
2025-01-24 22:18:34.278 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Band  - 404 null text/plain; charset=utf-8 1806.7505ms
2025-01-24 22:18:34.434 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-24 22:18:34.442 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 11.3858ms
2025-01-24 22:18:35.941 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Index - null null
2025-01-24 22:18:35.952 +03:00 [INF] [Request] GET /Home/Index

2025-01-24 22:18:35.956 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-24 22:18:35.957 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-24 22:18:35.959 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-24 22:18:35.961 +03:00 [INF] Executed ViewResult - view Index executed in 1.876ms.
2025-01-24 22:18:35.962 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 4.0461ms
2025-01-24 22:18:35.963 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-24 22:18:35.965 +03:00 [INF] [Response] 200 - 13ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Home - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
    

 <style>
    .instrument-name {
        margin-top: 10px; /* Add space between the image and the text */
        font-size: 16px; /* Adjust the text size */
        font-weight: bold; /* Bold text */
        text-align: center; /* Center the text */
    }
  </style>

<section class="category-section py-4">
    <div class="category-section">
        <h3 style="text-align: center; margin-bottom: 20px;">Start Shopping Here</h3>
        <div class="row">
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Guitars'">
                <img src="/Images/pavlo-t-5rEyYBPLN-w-unsplash.jpg" alt="Guitars" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Guitars</p>
            </div>
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Keyboards & Pianos'">
                <img src="/Images/pexels-mikhail-nilov-7570112.jpg" alt="Keyboards & Pianos" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Keyboards & Pianos</p>
            </div>
            <!-- Drums & Percussion -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Drums & Percussion'">
                <img src="/Images/pexels-reneterp-1327430.jpg" alt="Drums & Percussion" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Drums & Percussion</p>
            </div>
            <!-- Pro Audio -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Pro Audio'">
                <img src="/Images/pexels-everson-mayer-478307-1481312.jpg" alt="Pro Audio" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Pro Audio</p>
            </div>
            <!-- Band & Orchestra -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Band & Orchestra'">
                <img src="/Images/pexels-shottrotter-752535.jpg" alt="Band & Orchestra" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Band & Orchestra</p>
            </div>
            <!-- Accessories -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Accessories'">
                <img src="/Images/pexels-rombo-1510555-5280438.jpg" alt="Accessories" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Accessories</p>
            </div>
        </div>
    </div>
</section>


    <section class="membership-section text-center bg-dark text-white py-5">
    <div class="membership-section">
        <h2>Have no clue what to buy ?</h2>
        <p>Check out our professional guide to get the perfect suited instrument !</p>
        <form class="d-inline-flex mt-2" action="/Home/Guide" method="get">
            
            <button class="btn btn-danger" type="submit">professional Guide</button>
        </form>
        </div>
    </section>

    <section class="features-section py-5 bg-light">
            <div class="container">
            <div class="row text-center">
                <div class="col-md-3">
                    <img src="/Images/box.png" alt="Same Day Delivery" class="mb-sm-1" style="width: 40px; height: 40px;">
                    <h5>Same Day/Next Day Delivery</h5>
                    <p>Next day delivery on most orders in Jordan - Same day available</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/shopping-cart.png" alt="Biggest Selection" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Biggest Selection</h5>
                    <p>Largest collection of any store in MENA</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/user-talking-with-speech-bubble.png" alt="Top-notch Support" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Top-notch Support</h5>
                    <p>We are always happy to help in any way we can</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/secure-payment.png" alt="Secure Payments" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Secure Payments</h5>
                    <p>Cash on Delivery available</p>
                </div>
            </div>
            </div>
     </section>


    

    <!-- JavaScript to Toggle Forms -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.js"></script>


        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="#">About Us</a></li>
                    <li><a href="#">Contact Us</a></li>
                    <li><a href="#">Terms & Conditions</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-24 22:18:35.998 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Index - 200 null text/html; charset=utf-8 58.0521ms
2025-01-24 22:18:36.013 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-24 22:18:36.013 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-24 22:18:36.015 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-24 22:18:36.016 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-24 22:18:36.021 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-24 22:18:36.025 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 9.5211ms
2025-01-24 22:18:36.029 +03:00 [INF] [Response] 404 - 7ms

2025-01-24 22:18:36.020 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-24 22:18:36.047 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 33.8167ms
2025-01-24 22:18:36.050 +03:00 [INF] [Response] 404 - 29ms

2025-01-24 22:18:36.059 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 43.6145ms
2025-01-24 22:18:36.062 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-24 22:18:36.063 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 50.0279ms
2025-01-24 22:18:36.074 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-24 23:57:05.701 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-24 23:57:06.051 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-24 23:57:06.053 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-24 23:57:06.132 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-24 23:57:06.135 +03:00 [INF] Hosting environment: Development
2025-01-24 23:57:06.136 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-24 23:57:06.674 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-24 23:57:06.891 +03:00 [INF] [Request] GET /

2025-01-24 23:57:06.931 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-24 23:57:06.949 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-24 23:57:06.975 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-24 23:57:07.048 +03:00 [INF] Executed ViewResult - view Index executed in 74.3725ms.
2025-01-24 23:57:07.052 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 100.1898ms
2025-01-24 23:57:07.053 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-24 23:57:07.056 +03:00 [INF] [Response] 200 - 172ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Home - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
    

 <style>
    .instrument-name {
        margin-top: 10px; /* Add space between the image and the text */
        font-size: 16px; /* Adjust the text size */
        font-weight: bold; /* Bold text */
        text-align: center; /* Center the text */
    }
  </style>

<section class="category-section py-4">
    <div class="category-section">
        <h3 style="text-align: center; margin-bottom: 20px;">Start Shopping Here</h3>
        <div class="row">
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Guitars'">
                <img src="/Images/pavlo-t-5rEyYBPLN-w-unsplash.jpg" alt="Guitars" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Guitars</p>
            </div>
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Keyboards & Pianos'">
                <img src="/Images/pexels-mikhail-nilov-7570112.jpg" alt="Keyboards & Pianos" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Keyboards & Pianos</p>
            </div>
            <!-- Drums & Percussion -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Drums & Percussion'">
                <img src="/Images/pexels-reneterp-1327430.jpg" alt="Drums & Percussion" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Drums & Percussion</p>
            </div>
            <!-- Pro Audio -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Pro Audio'">
                <img src="/Images/pexels-everson-mayer-478307-1481312.jpg" alt="Pro Audio" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Pro Audio</p>
            </div>
            <!-- Band & Orchestra -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Band & Orchestra'">
                <img src="/Images/pexels-shottrotter-752535.jpg" alt="Band & Orchestra" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Band & Orchestra</p>
            </div>
            <!-- Accessories -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Accessories'">
                <img src="/Images/pexels-rombo-1510555-5280438.jpg" alt="Accessories" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Accessories</p>
            </div>
        </div>
    </div>
</section>


    <section class="membership-section text-center bg-dark text-white py-5">
    <div class="membership-section">
        <h2>Have no clue what to buy ?</h2>
        <p>Check out our professional guide to get the perfect suited instrument !</p>
        <form class="d-inline-flex mt-2" action="/Home/Guide" method="get">
            
            <button class="btn btn-danger" type="submit">professional Guide</button>
        </form>
        </div>
    </section>

    <section class="features-section py-5 bg-light">
            <div class="container">
            <div class="row text-center">
                <div class="col-md-3">
                    <img src="/Images/box.png" alt="Same Day Delivery" class="mb-sm-1" style="width: 40px; height: 40px;">
                    <h5>Same Day/Next Day Delivery</h5>
                    <p>Next day delivery on most orders in Jordan - Same day available</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/shopping-cart.png" alt="Biggest Selection" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Biggest Selection</h5>
                    <p>Largest collection of any store in MENA</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/user-talking-with-speech-bubble.png" alt="Top-notch Support" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Top-notch Support</h5>
                    <p>We are always happy to help in any way we can</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/secure-payment.png" alt="Secure Payments" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Secure Payments</h5>
                    <p>Cash on Delivery available</p>
                </div>
            </div>
            </div>
     </section>


    

    <!-- JavaScript to Toggle Forms -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.js"></script>


        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="#">About Us</a></li>
                    <li><a href="#">Contact Us</a></li>
                    <li><a href="#">Terms & Conditions</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-24 23:57:07.125 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 458.7835ms
2025-01-24 23:57:07.140 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-24 23:57:07.140 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-24 23:57:07.140 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-24 23:57:07.143 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-24 23:57:07.160 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 20.3245ms
2025-01-24 23:57:07.161 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-24 23:57:07.163 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-24 23:57:07.183 +03:00 [INF] [Response] 404 - 21ms

2025-01-24 23:57:07.183 +03:00 [INF] [Response] 404 - 19ms

2025-01-24 23:57:07.185 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 45.0075ms
2025-01-24 23:57:07.185 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 45.2839ms
2025-01-24 23:57:07.189 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-24 23:57:07.191 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-24 23:57:07.212 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 69.4528ms
2025-01-24 23:57:16.449 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/products?category=Guitars - null null
2025-01-24 23:57:16.466 +03:00 [INF] [Request] GET /Home/products
[QueryString] ?category=Guitars

2025-01-24 23:57:16.469 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-24 23:57:16.471 +03:00 [INF] Route matched with {action = "Products", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Products(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-24 23:57:16.520 +03:00 [INF] Executing ViewResult, running view Products.
2025-01-24 23:57:16.542 +03:00 [INF] Executed ViewResult - view Products executed in 22.5437ms.
2025-01-24 23:57:16.545 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Products (MyShop) in 72.0641ms
2025-01-24 23:57:16.548 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-24 23:57:16.549 +03:00 [INF] [Response] 200 - 81ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>products - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            <style>
    .card-title {
        transition: transform 0.3s ease, color 0.3s ease;
        cursor: pointer;
    }

        .card-title:hover {
            transform: scale(1.1);
            color: #dc3545; /* Highlight color */
        }
</style>


<div class="container">
    <div class="row" id="product-container">
        <!-- Product cards will be dynamically added here -->
    </div>
</div>
    <div class="features-section py-4 bg-light">

        <div class="row text-center">
            <div class="col-md-3">
                <img src="/Images/box.png" alt="Same Day Delivery" class="mb-sm-1" style="width: 40px; height: 40px;">
                <h5>Same Day/Next Day Delivery</h5>
                <p>Next day delivery on most orders in Jordan - Same day available</p>
            </div>
            <div class="col-md-3">
                <img src="/Images/shopping-cart.png" alt="Biggest Selection" class="mb-2" style="width: 40px; height: 40px;">
                <h5>Biggest Selection</h5>
                <p>Largest collection of any store in MENA</p>
            </div>
            <div class="col-md-3">
                <img src="/Images/user-talking-with-speech-bubble.png" alt="Top-notch Support" class="mb-2" style="width: 40px; height: 40px;">
                <h5>Top-notch Support</h5>
                <p>We are always happy to help in any way we can</p>
            </div>
            <div class="col-md-3">
                <img src="/Images/secure-payment.png" alt="Secure Payments" class="mb-2" style="width: 40px; height: 40px;">
                <h5>Secure Payments</h5>
                <p>Cash on Delivery available</p>
            </div>
        </div>
    </div>


   

    <!-- Login/Signup Modal -->
    <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <!-- Login Form -->
                    <form id="loginForm">
                        <div class="mb-3">
                            <label for="loginEmail" class="form-label">Email</label>
                            <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                        </div>
                        <div class="mb-3">
                            <label for="loginPassword" class="form-label">Password</label>
                            <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                        </div>
                        <button type="submit" class="btn btn-danger w-100">Login</button>
                        <div class="form-switch-link">
                            <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                        </div>
                    </form>

                    <!-- Signup Form (Hidden by Default) -->
                    <form id="signupForm" style="display: none;">
                        <div class="mb-3">
                            <label for="signupEmail" class="form-label">Email</label>
                            <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                        </div>
                        <div class="mb-3">
                            <label for="signupPassword" class="form-label">Password</label>
                            <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                        </div>
                        <div class="mb-3">
                            <label for="name" class="form-label">Name</label>
                            <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                        </div>
                        <div class="mb-3">
                            <label for="adress" class="form-label">Adress</label>
                            <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                        </div>
                        <div class="mb-3">
                            <label for="phone" class="form-label">Phone</label>
                            <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                        </div>

                        <button type="submit" class="btn btn-danger w-100">Signup</button>
                        <div class="form-switch-link">
                            <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const urlParams = new URLSearchParams(window.location.search);
        const category = urlParams.get('category');

        if (category) {
            fetchProducts(category);
        } else {
            alert("No category selected! Please try again.");
        }
    });

    async function fetchProducts(category) {
        const apiUrl = `https://localhost:7298/api/Products/by-category/${encodeURIComponent(category)}`;

        try {
            const response = await fetch(apiUrl);
            if (!response.ok) {
                throw new Error(`Failed to fetch products: ${response.status} ${response.statusText}`);
            }

            const products = await response.json();
            const productContainer = document.getElementById('product-container');
            productContainer.innerHTML = '';

            if (products.length === 0) {
                productContainer.innerHTML = `<p class="text-center">No products found for this category.</p>`;
                return;
            }

            products.forEach((product) => {
                const productCard = document.createElement('div');
                productCard.className = 'col-md-4 mb-4';

                productCard.innerHTML = `
                        <div class="card h-100">
                            <img src="${product.imageFile}" class="card-img-top" alt="${product.name}">
                            <div class="card-body text-center">
                                <h5 class="card-title" data-product-name="${product.name}">${product.name}</h5>
                                <p class="card-text">$${product.price.toFixed(2)}</p>
                            </div>
                        </div>
                    `;

                // Add click event to navigate to the product view
                productCard.querySelector('.card-title').addEventListener('click', function () {
                    const productName = encodeURIComponent(this.getAttribute('data-product-name'));
                    window.location.href = `/Home/product?name=${productName}`;
                });

                productContainer.appendChild(productCard);
            });
        } catch (error) {
            console.error('Error fetching products:', error);
            const productContainer = document.getElementById('product-container');
            productContainer.innerHTML = `<p class="text-center text-danger">An error occurred while loading products. Please try again later.</p>`;
        }
    }
</script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.js"></script>

        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="#">About Us</a></li>
                    <li><a href="#">Contact Us</a></li>
                    <li><a href="#">Terms & Conditions</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-24 23:57:16.588 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/products?category=Guitars - 200 null text/html; charset=utf-8 139.3268ms
2025-01-24 23:57:16.600 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-24 23:57:16.603 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-24 23:57:16.603 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-24 23:57:16.603 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-24 23:57:16.609 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 5.8659ms
2025-01-24 23:57:16.619 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-24 23:57:16.606 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-24 23:57:16.622 +03:00 [INF] [Response] 404 - 3ms

2025-01-24 23:57:16.622 +03:00 [INF] [Response] 404 - 16ms

2025-01-24 23:57:16.623 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 20.1055ms
2025-01-24 23:57:16.624 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 24.8265ms
2025-01-24 23:57:16.630 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-24 23:57:16.637 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Guitars - null null
2025-01-24 23:57:16.637 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-24 23:57:16.642 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 38.5624ms
2025-01-24 23:57:16.645 +03:00 [INF] [Request] GET /api/Products/by-category/Guitars

2025-01-24 23:57:16.659 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-24 23:57:16.670 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-24 23:57:18.097 +03:00 [INF] Executed DbCommand (54ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-24 23:57:18.210 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MyShop.API.Controllers.ProductDto, MyShop, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-24 23:57:18.228 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 1555.6601ms
2025-01-24 23:57:18.230 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-24 23:57:18.232 +03:00 [INF] [Response] 200 - 1587ms
[{"name":"Moreno ","price":40.00,"imageFile":"https://localhost:7298/images\\aee43035-f2a4-44a1-9ac6-40fe53691a1a_pexels-philboakye-3428498.jpg"},{"name":"Fender Startocaster","price":250.00,"imageFile":"https://localhost:7298/images\\c9ad9316-a2ed-4c7f-9d54-aa037c0e0ee2_jacek-dylag-71k2FbrLMjA-unsplash.jpg"},{"name":"Ibanze GA6CE-AM","price":315.00,"imageFile":"https://localhost:7298/images\\2a2337ff-a0cf-4fcf-9f90-a2a9cdfedf78_guitar-5543780_1280.jpg"},{"name":"Gibson Les Paul","price":418.00,"imageFile":"https://localhost:7298/images\\b6fc6667-b586-4b61-ab4d-1f4de3969e7d_guitar-5543780_1280.jpg"},{"name":"Gibson Les Paul","price":418.00,"imageFile":"https://localhost:7298/images\\3327c227-a0bc-453e-a4f8-0988ea626d8e_guitar-1022710_1280.jpg"},{"name":"Kramer Pacer","price":536.00,"imageFile":"https://localhost:7298/images\\2a74f05c-b6db-4f95-accc-fa55101a59cb_guitar-1024678_1280.jpg"},{"name":"squier telecaster ","price":211.00,"imageFile":"https://localhost:7298/images\\0e412ced-462c-4f37-805a-2a1bb5d06668_fender-stratocaster-6738902_1280.jpg"},{"name":"Revstar RS502T","price":320.00,"imageFile":"https://localhost:7298/images\\f3e2c08e-5387-46c8-ba90-1eec605fd674_guitar-1022724_1280.jpg"}]
2025-01-24 23:57:18.238 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/2a2337ff-a0cf-4fcf-9f90-a2a9cdfedf78_guitar-5543780_1280.jpg - null null
2025-01-24 23:57:18.240 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/f3e2c08e-5387-46c8-ba90-1eec605fd674_guitar-1022724_1280.jpg - null null
2025-01-24 23:57:18.239 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/0e412ced-462c-4f37-805a-2a1bb5d06668_fender-stratocaster-6738902_1280.jpg - null null
2025-01-24 23:57:18.239 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/2a74f05c-b6db-4f95-accc-fa55101a59cb_guitar-1024678_1280.jpg - null null
2025-01-24 23:57:18.239 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/3327c227-a0bc-453e-a4f8-0988ea626d8e_guitar-1022710_1280.jpg - null null
2025-01-24 23:57:18.239 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/aee43035-f2a4-44a1-9ac6-40fe53691a1a_pexels-philboakye-3428498.jpg - null null
2025-01-24 23:57:18.238 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/b6fc6667-b586-4b61-ab4d-1f4de3969e7d_guitar-5543780_1280.jpg - null null
2025-01-24 23:57:18.248 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Guitars - 200 null application/json; charset=utf-8 1611.5281ms
2025-01-24 23:57:18.275 +03:00 [INF] The file /images/aee43035-f2a4-44a1-9ac6-40fe53691a1a_pexels-philboakye-3428498.jpg was not modified
2025-01-24 23:57:18.247 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/c9ad9316-a2ed-4c7f-9d54-aa037c0e0ee2_jacek-dylag-71k2FbrLMjA-unsplash.jpg - null null
2025-01-24 23:57:18.283 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/aee43035-f2a4-44a1-9ac6-40fe53691a1a_pexels-philboakye-3428498.jpg - 304 null image/jpeg 43.06ms
2025-01-24 23:57:18.291 +03:00 [INF] The file /images/c9ad9316-a2ed-4c7f-9d54-aa037c0e0ee2_jacek-dylag-71k2FbrLMjA-unsplash.jpg was not modified
2025-01-24 23:57:18.318 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/c9ad9316-a2ed-4c7f-9d54-aa037c0e0ee2_jacek-dylag-71k2FbrLMjA-unsplash.jpg - 304 null image/jpeg 71.0356ms
2025-01-24 23:57:18.321 +03:00 [INF] Sending file. Request path: '/images/2a74f05c-b6db-4f95-accc-fa55101a59cb_guitar-1024678_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\2a74f05c-b6db-4f95-accc-fa55101a59cb_guitar-1024678_1280.jpg'
2025-01-24 23:57:18.327 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/2a74f05c-b6db-4f95-accc-fa55101a59cb_guitar-1024678_1280.jpg - 200 103178 image/jpeg 87.7694ms
2025-01-24 23:57:18.357 +03:00 [INF] Sending file. Request path: '/images/2a2337ff-a0cf-4fcf-9f90-a2a9cdfedf78_guitar-5543780_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\2a2337ff-a0cf-4fcf-9f90-a2a9cdfedf78_guitar-5543780_1280.jpg'
2025-01-24 23:57:18.358 +03:00 [INF] Sending file. Request path: '/images/b6fc6667-b586-4b61-ab4d-1f4de3969e7d_guitar-5543780_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\b6fc6667-b586-4b61-ab4d-1f4de3969e7d_guitar-5543780_1280.jpg'
2025-01-24 23:57:18.362 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/2a2337ff-a0cf-4fcf-9f90-a2a9cdfedf78_guitar-5543780_1280.jpg - 200 222736 image/jpeg 123.7915ms
2025-01-24 23:57:18.364 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/b6fc6667-b586-4b61-ab4d-1f4de3969e7d_guitar-5543780_1280.jpg - 200 222736 image/jpeg 125.9713ms
2025-01-24 23:57:18.370 +03:00 [INF] Sending file. Request path: '/images/f3e2c08e-5387-46c8-ba90-1eec605fd674_guitar-1022724_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\f3e2c08e-5387-46c8-ba90-1eec605fd674_guitar-1022724_1280.jpg'
2025-01-24 23:57:18.357 +03:00 [INF] Sending file. Request path: '/images/0e412ced-462c-4f37-805a-2a1bb5d06668_fender-stratocaster-6738902_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\0e412ced-462c-4f37-805a-2a1bb5d06668_fender-stratocaster-6738902_1280.jpg'
2025-01-24 23:57:18.375 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/f3e2c08e-5387-46c8-ba90-1eec605fd674_guitar-1022724_1280.jpg - 200 434797 image/jpeg 135.5782ms
2025-01-24 23:57:18.377 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/0e412ced-462c-4f37-805a-2a1bb5d06668_fender-stratocaster-6738902_1280.jpg - 200 237437 image/jpeg 137.7494ms
2025-01-24 23:57:18.378 +03:00 [INF] Sending file. Request path: '/images/3327c227-a0bc-453e-a4f8-0988ea626d8e_guitar-1022710_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\3327c227-a0bc-453e-a4f8-0988ea626d8e_guitar-1022710_1280.jpg'
2025-01-24 23:57:18.384 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/3327c227-a0bc-453e-a4f8-0988ea626d8e_guitar-1022710_1280.jpg - 200 642745 image/jpeg 145.3731ms
2025-01-24 23:57:25.691 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/About - null null
2025-01-24 23:57:25.703 +03:00 [INF] [Request] GET /Home/About

2025-01-24 23:57:25.706 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.About (MyShop)'
2025-01-24 23:57:25.711 +03:00 [INF] Route matched with {action = "About", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult About(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-24 23:57:25.718 +03:00 [INF] Executing ViewResult, running view About.
2025-01-24 23:57:25.725 +03:00 [INF] Executed ViewResult - view About executed in 7.0229ms.
2025-01-24 23:57:25.728 +03:00 [INF] Executed action MyShop.Controllers.HomeController.About (MyShop) in 12.7087ms
2025-01-24 23:57:25.730 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.About (MyShop)'
2025-01-24 23:57:25.732 +03:00 [INF] [Response] 200 - 28ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>About - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            







<section class="features-section py-5 bg-light">
    <div class="container">
        <div class="row text-center">
            <div class="col-md-3">
                <img src="/Images/box.png" alt="Same Day Delivery" class="mb-sm-1" style="width: 40px; height: 40px;">
                <h5>Same Day/Next Day Delivery</h5>
                <p>Next day delivery on most orders in Jordan - Same day available</p>
            </div>
            <div class="col-md-3">
                <img src="/Images/shopping-cart.png" alt="Biggest Selection" class="mb-2" style="width: 40px; height: 40px;">
                <h5>Biggest Selection</h5>
                <p>Largest collection of any store in MENA</p>
            </div>
            <div class="col-md-3">
                <img src="/Images/user-talking-with-speech-bubble.png" alt="Top-notch Support" class="mb-2" style="width: 40px; height: 40px;">
                <h5>Top-notch Support</h5>
                <p>We are always happy to help in any way we can</p>
            </div>
            <div class="col-md-3">
                <img src="/Images/secure-payment.png" alt="Secure Payments" class="mb-2" style="width: 40px; height: 40px;">
                <h5>Secure Payments</h5>
                <p>Cash on Delivery available</p>
            </div>
        </div>
    </div>
</section>

        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="#">About Us</a></li>
                    <li><a href="#">Contact Us</a></li>
                    <li><a href="#">Terms & Conditions</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-24 23:57:25.761 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/About - 200 null text/html; charset=utf-8 70.5311ms
2025-01-24 23:57:25.775 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-24 23:57:25.775 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-24 23:57:25.777 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-24 23:57:25.777 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-24 23:57:25.784 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-24 23:57:25.787 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-24 23:57:25.795 +03:00 [INF] [Response] 404 - 10ms

2025-01-24 23:57:25.794 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 16.9667ms
2025-01-24 23:57:25.797 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 22.4268ms
2025-01-24 23:57:25.796 +03:00 [INF] [Response] 404 - 8ms

2025-01-24 23:57:25.802 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 25.3516ms
2025-01-24 23:57:25.806 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-24 23:57:25.807 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 31.8295ms
2025-01-24 23:57:25.814 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
