2025-01-26 00:02:43.788 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-26 00:02:44.045 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-26 00:02:44.047 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-26 00:02:44.135 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-26 00:02:44.137 +03:00 [INF] Hosting environment: Development
2025-01-26 00:02:44.139 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-26 00:02:44.339 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-26 00:02:44.577 +03:00 [INF] [Request] GET /

2025-01-26 00:02:44.678 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-26 00:02:44.706 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-26 00:02:44.739 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-26 00:02:44.811 +03:00 [INF] Executed ViewResult - view Index executed in 77.4023ms.
2025-01-26 00:02:44.815 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 106.5389ms
2025-01-26 00:02:44.817 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-26 00:02:44.819 +03:00 [INF] [Response] 200 - 253ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Home - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
    

 <style>
    .instrument-name {
        margin-top: 10px; /* Add space between the image and the text */
        font-size: 16px; /* Adjust the text size */
        font-weight: bold; /* Bold text */
        text-align: center; /* Center the text */
    }
  </style>

<section class="category-section py-4">
    <div class="category-section">
        <h3 style="text-align: center; margin-bottom: 20px;">Start Shopping Here</h3>
        <div class="row">
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Guitars'">
                <img src="/Images/pavlo-t-5rEyYBPLN-w-unsplash.jpg" alt="Guitars" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Guitars</p>
            </div>
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Keyboards & Pianos'">
                <img src="/Images/pexels-mikhail-nilov-7570112.jpg" alt="Keyboards & Pianos" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Keyboards & Pianos</p>
            </div>
            <!-- Drums & Percussion -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Drums & Percussion'">
                <img src="/Images/pexels-reneterp-1327430.jpg" alt="Drums & Percussion" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Drums & Percussion</p>
            </div>
            <!-- Pro Audio -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Pro Audio'">
                <img src="/Images/pexels-everson-mayer-478307-1481312.jpg" alt="Pro Audio" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Pro Audio</p>
            </div>
            <!-- Band & Orchestra -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Band & Orchestra'">
                <img src="/Images/pexels-shottrotter-752535.jpg" alt="Band & Orchestra" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Band & Orchestra</p>
            </div>
            <!-- Accessories -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Accessories'">
                <img src="/Images/pexels-rombo-1510555-5280438.jpg" alt="Accessories" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Accessories</p>
            </div>
        </div>
    </div>
</section>


    <section class="membership-section text-center bg-dark text-white py-5">
    <div class="membership-section">
        <h2>Have no clue what to buy ?</h2>
        <p>Check out our professional guide to get the perfect suited instrument !</p>
        <form class="d-inline-flex mt-2" action="/Home/Guide" method="get">
            
            <button class="btn btn-danger" type="submit">professional Guide</button>
        </form>
        </div>
    </section>

    <section class="features-section py-5 bg-light">
            <div class="container">
            <div class="row text-center">
                <div class="col-md-3">
                    <img src="/Images/box.png" alt="Same Day Delivery" class="mb-sm-1" style="width: 40px; height: 40px;">
                    <h5>Same Day/Next Day Delivery</h5>
                    <p>Next day delivery on most orders in Jordan - Same day available</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/shopping-cart.png" alt="Biggest Selection" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Biggest Selection</h5>
                    <p>Largest collection of any store in MENA</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/user-talking-with-speech-bubble.png" alt="Top-notch Support" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Top-notch Support</h5>
                    <p>We are always happy to help in any way we can</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/secure-payment.png" alt="Secure Payments" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Secure Payments</h5>
                    <p>Cash on Delivery available</p>
                </div>
            </div>
            </div>
     </section>


    

    <!-- JavaScript to Toggle Forms -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.js"></script>


        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-26 00:02:44.887 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 556.7985ms
2025-01-26 00:02:44.920 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-26 00:02:44.920 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-26 00:02:44.926 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-26 00:02:44.944 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-26 00:02:44.920 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 00:02:44.947 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-26 00:02:44.955 +03:00 [INF] [Response] 404 - 10ms

2025-01-26 00:02:44.955 +03:00 [INF] [Response] 404 - 7ms

2025-01-26 00:02:44.957 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 36.7269ms
2025-01-26 00:02:44.964 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 44.4228ms
2025-01-26 00:02:44.990 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 44.8051ms
2025-01-26 00:02:45.001 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-26 00:02:45.009 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-26 00:02:45.044 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 121.8374ms
2025-01-26 00:02:47.961 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/products?category=Guitars - null null
2025-01-26 00:02:47.976 +03:00 [INF] [Request] GET /Home/products
[QueryString] ?category=Guitars

2025-01-26 00:02:47.978 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-26 00:02:47.981 +03:00 [INF] Route matched with {action = "Products", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Products(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-26 00:02:48.033 +03:00 [INF] Executing ViewResult, running view Products.
2025-01-26 00:02:48.049 +03:00 [INF] Executed ViewResult - view Products executed in 16.9277ms.
2025-01-26 00:02:48.052 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Products (MyShop) in 69.9892ms
2025-01-26 00:02:48.054 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-26 00:02:48.055 +03:00 [INF] [Response] 200 - 78ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>products - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            <style>
    .card-title {
        transition: transform 0.3s ease, color 0.3s ease;
        cursor: pointer;
    }

        .card-title:hover {
            transform: scale(1.1);
            color: #dc3545; /* Highlight color */
        }
</style>


<div class="container">
    <div class="row" id="product-container">
        <!-- Product cards will be dynamically added here -->
    </div>
</div>
    <div class="features-section py-4 bg-light">

        <div class="row text-center">
            <div class="col-md-3">
                <img src="/Images/box.png" alt="Same Day Delivery" class="mb-sm-1" style="width: 40px; height: 40px;">
                <h5>Same Day/Next Day Delivery</h5>
                <p>Next day delivery on most orders in Jordan - Same day available</p>
            </div>
            <div class="col-md-3">
                <img src="/Images/shopping-cart.png" alt="Biggest Selection" class="mb-2" style="width: 40px; height: 40px;">
                <h5>Biggest Selection</h5>
                <p>Largest collection of any store in MENA</p>
            </div>
            <div class="col-md-3">
                <img src="/Images/user-talking-with-speech-bubble.png" alt="Top-notch Support" class="mb-2" style="width: 40px; height: 40px;">
                <h5>Top-notch Support</h5>
                <p>We are always happy to help in any way we can</p>
            </div>
            <div class="col-md-3">
                <img src="/Images/secure-payment.png" alt="Secure Payments" class="mb-2" style="width: 40px; height: 40px;">
                <h5>Secure Payments</h5>
                <p>Cash on Delivery available</p>
            </div>
        </div>
    </div>


   

    <!-- Login/Signup Modal -->
    <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <!-- Login Form -->
                    <form id="loginForm">
                        <div class="mb-3">
                            <label for="loginEmail" class="form-label">Email</label>
                            <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                        </div>
                        <div class="mb-3">
                            <label for="loginPassword" class="form-label">Password</label>
                            <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                        </div>
                        <button type="submit" class="btn btn-danger w-100">Login</button>
                        <div class="form-switch-link">
                            <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                        </div>
                    </form>

                    <!-- Signup Form (Hidden by Default) -->
                    <form id="signupForm" style="display: none;">
                        <div class="mb-3">
                            <label for="signupEmail" class="form-label">Email</label>
                            <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                        </div>
                        <div class="mb-3">
                            <label for="signupPassword" class="form-label">Password</label>
                            <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                        </div>
                        <div class="mb-3">
                            <label for="name" class="form-label">Name</label>
                            <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                        </div>
                        <div class="mb-3">
                            <label for="adress" class="form-label">Adress</label>
                            <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                        </div>
                        <div class="mb-3">
                            <label for="phone" class="form-label">Phone</label>
                            <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                        </div>

                        <button type="submit" class="btn btn-danger w-100">Signup</button>
                        <div class="form-switch-link">
                            <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const urlParams = new URLSearchParams(window.location.search);
        const category = urlParams.get('category');

        if (category) {
            fetchProducts(category);
        } else {
            alert("No category selected! Please try again.");
        }
    });

    async function fetchProducts(category) {
        const apiUrl = `https://localhost:7298/api/Products/by-category/${encodeURIComponent(category)}`;

        try {
            const response = await fetch(apiUrl);
            if (!response.ok) {
                throw new Error(`Failed to fetch products: ${response.status} ${response.statusText}`);
            }

            const products = await response.json();
            const productContainer = document.getElementById('product-container');
            productContainer.innerHTML = '';

            if (products.length === 0) {
                productContainer.innerHTML = `<p class="text-center">No products found for this category.</p>`;
                return;
            }

            products.forEach((product) => {
                const productCard = document.createElement('div');
                productCard.className = 'col-md-4 mb-4';

                productCard.innerHTML = `
                        <div class="card h-100">
                            <img src="${product.imageFile}" class="card-img-top" alt="${product.name}">
                            <div class="card-body text-center">
                                <h5 class="card-title" data-product-name="${product.name}">${product.name}</h5>
                                <p class="card-text">$${product.price.toFixed(2)}</p>
                            </div>
                        </div>
                    `;

                // Add click event to navigate to the product view
                productCard.querySelector('.card-title').addEventListener('click', function () {
                    const productName = encodeURIComponent(this.getAttribute('data-product-name'));
                    window.location.href = `/Home/product?name=${productName}`;
                });

                productContainer.appendChild(productCard);
            });
        } catch (error) {
            console.error('Error fetching products:', error);
            const productContainer = document.getElementById('product-container');
            productContainer.innerHTML = `<p class="text-center text-danger">An error occurred while loading products. Please try again later.</p>`;
        }
    }
</script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.js"></script>

        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-26 00:02:48.090 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/products?category=Guitars - 200 null text/html; charset=utf-8 129.1385ms
2025-01-26 00:02:48.105 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-26 00:02:48.109 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-26 00:02:48.109 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 00:02:48.109 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-26 00:02:48.110 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-26 00:02:48.115 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-26 00:02:48.123 +03:00 [INF] [Response] 404 - 12ms

2025-01-26 00:02:48.118 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 9.6888ms
2025-01-26 00:02:48.128 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 22.4499ms
2025-01-26 00:02:48.124 +03:00 [INF] [Response] 404 - 9ms

2025-01-26 00:02:48.137 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-26 00:02:48.139 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 30.0738ms
2025-01-26 00:02:48.140 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 31.1232ms
2025-01-26 00:02:48.147 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-26 00:02:48.149 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Guitars - null null
2025-01-26 00:02:48.160 +03:00 [INF] [Request] GET /api/Products/by-category/Guitars

2025-01-26 00:02:48.162 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-26 00:02:48.176 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-26 00:02:50.049 +03:00 [INF] Executed DbCommand (65ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-26 00:02:50.169 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MyShop.API.Controllers.ProductDto, MyShop, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-26 00:02:50.185 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 2006.2721ms
2025-01-26 00:02:50.188 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-26 00:02:50.189 +03:00 [INF] [Response] 200 - 2028ms
[{"name":"Moreno ","price":40.00,"imageFile":"https://localhost:7298/images\\aee43035-f2a4-44a1-9ac6-40fe53691a1a_pexels-philboakye-3428498.jpg"},{"name":"Fender Startocaster","price":250.00,"imageFile":"https://localhost:7298/images\\c9ad9316-a2ed-4c7f-9d54-aa037c0e0ee2_jacek-dylag-71k2FbrLMjA-unsplash.jpg"},{"name":"Ibanze GA6CE-AM","price":315.00,"imageFile":"https://localhost:7298/images\\2a2337ff-a0cf-4fcf-9f90-a2a9cdfedf78_guitar-5543780_1280.jpg"},{"name":"Gibson Les Paul","price":418.00,"imageFile":"https://localhost:7298/images\\b6fc6667-b586-4b61-ab4d-1f4de3969e7d_guitar-5543780_1280.jpg"},{"name":"Gibson Les Paul","price":418.00,"imageFile":"https://localhost:7298/images\\3327c227-a0bc-453e-a4f8-0988ea626d8e_guitar-1022710_1280.jpg"},{"name":"Kramer Pacer","price":536.00,"imageFile":"https://localhost:7298/images\\2a74f05c-b6db-4f95-accc-fa55101a59cb_guitar-1024678_1280.jpg"},{"name":"squier telecaster ","price":211.00,"imageFile":"https://localhost:7298/images\\0e412ced-462c-4f37-805a-2a1bb5d06668_fender-stratocaster-6738902_1280.jpg"},{"name":"Revstar RS502T","price":320.00,"imageFile":"https://localhost:7298/images\\f3e2c08e-5387-46c8-ba90-1eec605fd674_guitar-1022724_1280.jpg"}]
2025-01-26 00:02:50.197 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/f3e2c08e-5387-46c8-ba90-1eec605fd674_guitar-1022724_1280.jpg - null null
2025-01-26 00:02:50.199 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Guitars - 200 null application/json; charset=utf-8 2050.9939ms
2025-01-26 00:02:50.212 +03:00 [INF] The file /images/f3e2c08e-5387-46c8-ba90-1eec605fd674_guitar-1022724_1280.jpg was not modified
2025-01-26 00:02:50.215 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/f3e2c08e-5387-46c8-ba90-1eec605fd674_guitar-1022724_1280.jpg - 304 null image/jpeg 18.2699ms
2025-01-26 00:02:51.056 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 00:02:51.062 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 5.3684ms
2025-01-26 00:02:54.381 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Guide? - null null
2025-01-26 00:02:54.407 +03:00 [INF] [Request] GET /Home/Guide
[QueryString] ?

2025-01-26 00:02:54.416 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Guide (MyShop)'
2025-01-26 00:02:54.424 +03:00 [INF] Route matched with {action = "Guide", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Guide(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-26 00:02:54.434 +03:00 [INF] Executing ViewResult, running view Guide.
2025-01-26 00:02:54.453 +03:00 [INF] Executed ViewResult - view Guide executed in 21.329ms.
2025-01-26 00:02:54.456 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Guide (MyShop) in 26.654ms
2025-01-26 00:02:54.457 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Guide (MyShop)'
2025-01-26 00:02:54.458 +03:00 [INF] [Response] 200 - 50ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Guide - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
<style>

    .instruments-section h1 {
        font-size: 2.5rem;
        font-weight: bold;
        text-align: center;
    }

    .instruments-section p {
        font-size: 1.25rem;
        color: #555;
        text-align: center;
    }

    /* Black Line */
    hr.thick-black-line {
        border: none; /* Remove default borders */
        height: 5px; /* Set the height */
        background-color: black !important; /* Force black color */
        margin: 0 auto; /* Center it horizontally */
        width: 80%; /* Adjust width */
    }


    /* Dropdown Buttons Alignment */
    .instrument-buttons {
        display: flex;
        gap: 1rem; /* Add spacing between dropdown buttons */
        padding-left: 10%; /* Align dropdown buttons with the left edge of the line */
    }

        .instrument-buttons .dropdown {
            display: inline-block;
        }

        /* Styling for Buttons */
        .instrument-buttons .btn {
            font-size: 1rem;
            font-weight: bold;
            padding: 0.5rem 1.5rem;
        }

    /* Dropdown Menu Styling */
    .dropdown-menu {
        font-size: 1rem;
        text-align: left;
    }



</style>


<section class="instruments-section text-center py-5">
    <h1 class="mb-3">Instruments</h1>
    <p class="mb-4">
        Here, the SoundWave’s expert players guide you through the intricacies of the instruments they play.
        Choose an instrument from one of the sections.
    </p>
    <hr class="thick-black-line mb-4" />

    <!-- Dropdown Buttons -->
    <div class="instrument-buttons text-start">
        <!-- Dropdown for Instruments -->
        <div class="dropdown">
            <button class="btn btn-light border text-danger dropdown-toggle"
                    type="button"
                    id="instrumentDropdown"
                    data-bs-toggle="dropdown"
                    aria-expanded="false">
                Instruments
            </button>
            <ul class="dropdown-menu" aria-labelledby="instrumentDropdown">
                <li><a class="dropdown-item instrument-item" href="#">Guitars</a></li>
                <li><a class="dropdown-item instrument-item" href="#">Drums</a></li>
                <li><a class="dropdown-item instrument-item" href="#">Orchestra</a></li>
            </ul>
        </div>

        <!-- Dropdown for Level -->
        <div class="dropdown">
            <button class="btn btn-light border text-danger dropdown-toggle"
                    type="button"
                    id="levelDropdown"
                    data-bs-toggle="dropdown"
                    aria-expanded="false">
                Level
            </button>
            <ul class="dropdown-menu" aria-labelledby="levelDropdown">
                <li><a class="dropdown-item level-item" href="#">Beginner</a></li>
                <li><a class="dropdown-item level-item" href="#">Professional</a></li>
            </ul>
        </div>
    </div>
    
    <div id="card-container" class="d-flex justify-content-center gap-4 mt-5"></div>

</section>

<script>
    const instrumentDropdown = document.querySelectorAll('.instrument-item');
    const levelDropdown = document.querySelectorAll('.level-item');
    const cardContainer = document.getElementById('card-container');

    let selectedInstrument = '';
    let selectedLevel = '';

    const guitarsData = [
        {
            img: '/Images/guitar-4750599_1280.jpg',
            title: 'Acoustic Guitar',
            link: '#'
        },
        {
            img: '/Images/electric-guitar-7815026_1280.jpg',
            title: 'Electric Guitar',
            link: '#'
        },
        {
            img: '/Images/bass-guitar-913092_1280.jpg',
            title: 'Bass Guitar',
            link: '#'
        }
    ];

    const DrumsData = [
        {
            img: '/Images/african-2771092_1280.jpg',
            title: 'Hand Drums',
            link: '#'
        },
        {
            img: '/Images/electronic-drum-pad-5854409_1280.jpg',
            title: 'Electronic Drums',
            link: '#'
        },
        {
            img: '/Images/drum-set-1839383_1280.jpg',
            title: 'Acoustic Drums',
            link: '#'
        }
    ];

    const OrchestraData = [
        {
            img: '/Images/bowed-instrument-1853324_1280.jpg',
            title: 'Strings',
            link: '#'
        },
        {
            img: '/Images/saxophone-3246650_1280.jpg',
            title: 'Brass',
            link: '#'
        },
        
    ];

    instrumentDropdown.forEach(item => {
        item.addEventListener('click', function () {
            selectedInstrument = this.textContent.trim();
            checkSelection();
        });
    });

    levelDropdown.forEach(item => {
        item.addEventListener('click', function () {
            selectedLevel = this.textContent.trim();
            checkSelection();
        });
    });

    function checkSelection() {
        if (selectedInstrument === 'Guitars' && selectedLevel === 'Beginner') {
            renderCards(guitarsData);
        } 
        else if (selectedInstrument === 'Guitars' && selectedLevel === 'Professional') {
            renderCards(guitarsData);
        }
        else if (selectedInstrument === 'Drums' && (selectedLevel === 'Professional' || selectedLevel === 'Beginner')) {
            renderCards(DrumsData);

        }
        else if (selectedInstrument === 'Orchestra' && (selectedLevel === 'Professional' || selectedLevel === 'Beginner')) {
            renderCards(OrchestraData);

        }
        else {
            cardContainer.innerHTML = ''; // Clear cards
        }
    }

    function renderCards(data) {
        cardContainer.innerHTML = ''; // Clear previous cards

        data.forEach(item => {
            if (item.title.toLowerCase() === 'electric guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'electricguid'; // Set link to electricguid for Beginners
                } else {
                    item.link = 'proelectric'; // Set link to proelectric for other levels
                }
            } else if (item.title.toLowerCase() === 'acoustic guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'acousticpeg'; // Set link to acousticpeg for Beginners
                } else {
                    item.link = 'acousticpro'; // Set link to acousticpro for other levels
                }
            } else if (item.title.toLowerCase() === 'bass guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'bassbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'basspro'; // Set link to basspro for other levels
                }
            } else {
                // Default case if no matches found
                item.link = 'default'; // Default link or other fallback
            }


            const card = document.createElement('div');
            card.classList.add('card');
            card.style.width = '22rem';
            card.style.textAlign = 'center';
            card.style.border = '1px solid #ddd';
            card.style.boxShadow = '0 4px 6px rgba(0, 0, 0, 0.1)';
            card.style.borderRadius = '8px';

            card.innerHTML = `
                    <img src="${item.img}" alt="${item.title}" style="width:100%;border-bottom:1px solid #ddd;">
                    <h5 style="font-size:1.25rem;font-weight:bold;margin:1rem 0;">${item.title}</h5>
                    <a href="${item.link}" class="btn btn-danger" style="margin-bottom:1rem;font-weight:bold;">Read more</a>
                `;
            cardContainer.appendChild(card);
            
            
        });
    }
</script>


<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-26 00:02:54.509 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Guide? - 200 null text/html; charset=utf-8 129.456ms
2025-01-26 00:02:54.525 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 00:02:54.526 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-26 00:02:54.527 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-26 00:02:54.526 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-26 00:02:54.530 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 4.5113ms
2025-01-26 00:02:54.533 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-26 00:02:54.540 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-26 00:02:54.543 +03:00 [INF] [Response] 404 - 10ms

2025-01-26 00:02:54.544 +03:00 [INF] [Response] 404 - 4ms

2025-01-26 00:02:54.546 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 20.2717ms
2025-01-26 00:02:54.547 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 21.5553ms
2025-01-26 00:02:54.554 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-26 00:02:54.559 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-26 00:02:54.563 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 35.9512ms
2025-01-26 00:03:01.275 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/electricguid - null null
2025-01-26 00:03:01.288 +03:00 [INF] [Request] GET /Home/electricguid

2025-01-26 00:03:01.291 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.electricguid (MyShop)'
2025-01-26 00:03:01.294 +03:00 [INF] Route matched with {action = "electricguid", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult electricguid(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-26 00:03:01.297 +03:00 [INF] Executing ViewResult, running view electricguid.
2025-01-26 00:03:01.320 +03:00 [INF] Executed ViewResult - view electricguid executed in 23.6437ms.
2025-01-26 00:03:01.322 +03:00 [INF] Executed action MyShop.Controllers.HomeController.electricguid (MyShop) in 26.3346ms
2025-01-26 00:03:01.323 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.electricguid (MyShop)'
2025-01-26 00:03:01.324 +03:00 [INF] [Response] 200 - 35ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Beginner Electric Guitar Guide - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
<style>
    /* General Styles */
    body {
        font-family: 'Roboto', sans-serif;
        margin: 0;
        padding: 0;
        background-color: #f4f4f4;
        color: #333;
        line-height: 1.6;
    }

    /* Header Phrase Styles */
    .header-phrase {
        background-color: #333; /* Black */
        color: #fff;
        padding: 20px;
        text-align: center;
    }

    .header-phrase h1 {
        margin: 0;
        font-size: 2.5rem;
    }

    /* Main Content Styles */
    main {
        padding: 20px;
        max-width: 1200px;
        margin: 0 auto;
    }

    section {
        margin-bottom: 40px;
    }

    h2 {
        color: #d32f2f; /* Red */
        border-bottom: 2px solid #d32f2f; /* Red */
        padding-bottom: 10px;
        margin-bottom: 20px;
    }

    .content-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 20px;
    }

    .content-card {
        background-color: #fff;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease;
    }

    .content-card:hover {
        transform: translateY(-5px);
    }

    .content-card img {
        width: 100%;
        height: 200px;
        object-fit: cover;
    }

    .content-card h3 {
        margin: 15px;
        color: #333;
    }

    .content-card p, .content-card ul {
        margin: 0 15px 15px;
        color: #555;
    }

    .content-card ul {
        list-style-type: disc;
        padding-left: 20px;
    }

    /* Footer Phrase Styles */
    .footer-phrase {
        background-color: #333; /* Black */
        color: #fff;
        text-align: center;
        padding: 15px;
        margin-top: 40px;
    }
</style>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Beginner Electric Guitar Guide</title>
    <link rel="stylesheet" href="styles.css">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
</head>
<body>
    <!-- Header Phrase -->
    <div class="header-phrase">
        <h1>Beginner Electric Guitar Guide</h1>
    </div>

    <!-- Main Content -->
    <main>
        <!-- Section 1: Choosing Your First Guitar -->
        <section class="choosing-guitar">
            <h2>1. Choosing Your First Guitar</h2>
            <div class="content-grid">
                <div class="content-card">
                    <img src="/Images/wallet-2292428_1280.jpg" alt="Affordable Guitars">
                    <h3>Affordable Options</h3>
                    <p>Look for beginner-friendly models like the <strong>Squier Stratocaster</strong> or <strong>Yamaha Pacifica</strong>. They’re affordable and reliable.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/workshop-4524838_1280.jpg" alt="Comfortable Guitars">
                    <h3>Comfort is Key</h3>
                    <p>Choose a guitar with a comfortable body shape and lightweight design, perfect for long practice sessions.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/headphones-4595492_1280.jpg" alt="Starter Packs">
                    <h3>Starter Packs</h3>
                    <p>Consider a beginner bundle that includes a guitar, amp, strap, and cable, such as the <strong>Epiphone Player Pack</strong>.</p>
                </div>
            </div>
        </section>

        <!-- Section 2: Basic Guitar Components -->
        <section class="guitar-components">
            <h2>2. Basic Guitar Components</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>Body Types</h3>
                    <ul>
                        <li><strong>Solid Body:</strong> Great for most genres, like rock and pop.</li>
                        <li><strong>Semi-Hollow:</strong> Adds a bit of warmth, good for blues.</li>
                    </ul>
                </div>
                <div class="content-card">
                    <h3>Pickups</h3>
                    <ul>
                        <li><strong>Single-Coil:</strong> Bright and crisp tones, ideal for clean sounds.</li>
                        <li><strong>Humbuckers:</strong> Thicker, warm tones, great for rock and metal.</li>
                    </ul>
                </div>
                <div class="content-card">
                    <h3>Strings</h3>
                    <ul>
                        <li><strong>Gauge:</strong> Start with light gauge strings (like .009 or .010) for easier playability.</li>
                        <li><strong>Material:</strong> Nickel-wound strings are a versatile choice.</li>
                    </ul>
                </div>
            </div>
        </section>

        <!-- Section 3: Practice Essentials -->
        <section class="practice-essentials">
            <h2>3. Practice Essentials</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>Tuner</h3>
                    <p>Get a clip-on tuner or use a smartphone app to ensure your guitar is always in tune.</p>
                </div>
                <div class="content-card">
                    <h3>Amplifier</h3>
                    <p>Start with a small practice amp like the <strong>Fender Mustang LT25</strong> or a portable amp like the <strong>Boss Katana Mini</strong>.</p>
                </div>
                <div class="content-card">
                    <h3>Accessories</h3>
                    <p>Don’t forget picks, a strap, a guitar cable, and a soft case for easy transport.</p>
                </div>
            </div>
        </section>

        <!-- Section 4: Recommended Guitars -->
        <section class="recommended-guitars">
            <h2>4. Recommended Electric Guitars for Beginners</h2>
            <div class="content-grid">
                <div class="content-card">
                    <img src="/Images/guitar-5980431_1280.jpg" alt="Squier Stratocaster">
                    <h3>Squier Stratocaster</h3>
                    <p>An affordable, versatile guitar with a classic design.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/electric-guitar-1846583_1280.jpg" alt="Yamaha Pacifica">
                    <h3>Yamaha Pacifica</h3>
                    <p>Perfect for beginners with excellent playability and tone.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/epiphone-953251_1280.jpg" alt="Epiphone Les Paul Special II">
                    <h3>Epiphone Les Paul Special II</h3>
                    <p>A budget-friendly option with warm humbucker tones.</p>
                </div>
            </div>
        </section>
    </main>

    <!-- Footer Phrase -->
    <div class="footer-phrase">
        <p>Start Your Guitar Journey Today!</p>
    </div>
</body>
</html>

        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-26 00:03:01.367 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/electricguid - 200 null text/html; charset=utf-8 92.1564ms
2025-01-26 00:03:01.379 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/styles.css - null null
2025-01-26 00:03:01.383 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/wallet-2292428_1280.jpg - null null
2025-01-26 00:03:01.386 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/headphones-4595492_1280.jpg - null null
2025-01-26 00:03:01.386 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/electric-guitar-1846583_1280.jpg - null null
2025-01-26 00:03:01.386 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/guitar-5980431_1280.jpg - null null
2025-01-26 00:03:01.385 +03:00 [INF] [Request] GET /Home/styles.css

2025-01-26 00:03:01.383 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 00:03:01.383 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/workshop-4524838_1280.jpg - null null
2025-01-26 00:03:01.386 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/epiphone-953251_1280.jpg - null null
2025-01-26 00:03:01.395 +03:00 [INF] [Response] 404 - 10ms

2025-01-26 00:03:01.403 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 20.1989ms
2025-01-26 00:03:01.412 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/styles.css - 404 0 null 33.7226ms
2025-01-26 00:03:01.422 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-26 00:03:01.427 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/Home/styles.css, Response status code: 404
2025-01-26 00:03:01.431 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-26 00:03:01.441 +03:00 [INF] [Response] 404 - 9ms

2025-01-26 00:03:01.442 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-26 00:03:01.443 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-26 00:03:01.443 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 20.4712ms
2025-01-26 00:03:01.450 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-26 00:03:01.458 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-26 00:03:01.460 +03:00 [INF] [Response] 404 - 9ms

2025-01-26 00:03:01.466 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 24.882ms
2025-01-26 00:03:01.472 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-26 00:03:01.483 +03:00 [INF] Sending file. Request path: '/Images/epiphone-953251_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\epiphone-953251_1280.jpg'
2025-01-26 00:03:01.486 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 42.9634ms
2025-01-26 00:03:01.493 +03:00 [INF] Sending file. Request path: '/Images/headphones-4595492_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\headphones-4595492_1280.jpg'
2025-01-26 00:03:01.489 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/epiphone-953251_1280.jpg - 200 190837 image/jpeg 102.1051ms
2025-01-26 00:03:01.483 +03:00 [INF] Sending file. Request path: '/Images/electric-guitar-1846583_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\electric-guitar-1846583_1280.jpg'
2025-01-26 00:03:01.483 +03:00 [INF] Sending file. Request path: '/Images/wallet-2292428_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\wallet-2292428_1280.jpg'
2025-01-26 00:03:01.486 +03:00 [INF] Sending file. Request path: '/Images/guitar-5980431_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\guitar-5980431_1280.jpg'
2025-01-26 00:03:01.504 +03:00 [INF] Sending file. Request path: '/Images/workshop-4524838_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\workshop-4524838_1280.jpg'
2025-01-26 00:03:01.505 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/headphones-4595492_1280.jpg - 200 221883 image/jpeg 118.989ms
2025-01-26 00:03:01.512 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/electric-guitar-1846583_1280.jpg - 200 105155 image/jpeg 125.9543ms
2025-01-26 00:03:01.522 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/wallet-2292428_1280.jpg - 200 211234 image/jpeg 139.7826ms
2025-01-26 00:03:01.528 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/guitar-5980431_1280.jpg - 200 223794 image/jpeg 142.2176ms
2025-01-26 00:03:01.538 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/workshop-4524838_1280.jpg - 200 242065 image/jpeg 154.869ms
2025-01-26 00:03:21.001 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 00:03:21.008 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 6.9392ms
2025-01-26 00:03:29.272 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/electronic-drum-pad-5854409_1280.jpg - null null
2025-01-26 00:03:29.272 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/drum-set-1839383_1280.jpg - null null
2025-01-26 00:03:29.272 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/african-2771092_1280.jpg - null null
2025-01-26 00:03:29.342 +03:00 [INF] Sending file. Request path: '/Images/electronic-drum-pad-5854409_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\electronic-drum-pad-5854409_1280.jpg'
2025-01-26 00:03:29.343 +03:00 [INF] Sending file. Request path: '/Images/drum-set-1839383_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\drum-set-1839383_1280.jpg'
2025-01-26 00:03:29.343 +03:00 [INF] Sending file. Request path: '/Images/african-2771092_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\african-2771092_1280.jpg'
2025-01-26 00:03:29.346 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/electronic-drum-pad-5854409_1280.jpg - 200 225961 image/jpeg 73.7689ms
2025-01-26 00:03:29.347 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/drum-set-1839383_1280.jpg - 200 231840 image/jpeg 75.6588ms
2025-01-26 00:03:29.349 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/african-2771092_1280.jpg - 200 218601 image/jpeg 77.8342ms
2025-01-26 00:03:34.622 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/bowed-instrument-1853324_1280.jpg - null null
2025-01-26 00:03:34.622 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/saxophone-3246650_1280.jpg - null null
2025-01-26 00:03:34.672 +03:00 [INF] Sending file. Request path: '/Images/bowed-instrument-1853324_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\bowed-instrument-1853324_1280.jpg'
2025-01-26 00:03:34.674 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/bowed-instrument-1853324_1280.jpg - 200 172545 image/jpeg 53.3535ms
2025-01-26 00:03:34.674 +03:00 [INF] Sending file. Request path: '/Images/saxophone-3246650_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\saxophone-3246650_1280.jpg'
2025-01-26 00:03:34.678 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/saxophone-3246650_1280.jpg - 200 235059 image/jpeg 57.1565ms
2025-01-26 00:13:51.334 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-26 00:13:51.649 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-26 00:13:51.652 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-26 00:13:51.747 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-26 00:13:51.750 +03:00 [INF] Hosting environment: Development
2025-01-26 00:13:51.751 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-26 00:13:52.195 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-26 00:13:52.397 +03:00 [INF] [Request] GET /

2025-01-26 00:13:52.436 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-26 00:13:52.457 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-26 00:13:52.479 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-26 00:13:52.539 +03:00 [INF] Executed ViewResult - view Index executed in 62.3057ms.
2025-01-26 00:13:52.544 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 84.5112ms
2025-01-26 00:13:52.547 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-26 00:13:52.553 +03:00 [INF] [Response] 200 - 160ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Home - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
    

 <style>
    .instrument-name {
        margin-top: 10px; /* Add space between the image and the text */
        font-size: 16px; /* Adjust the text size */
        font-weight: bold; /* Bold text */
        text-align: center; /* Center the text */
    }
  </style>

<section class="category-section py-4">
    <div class="category-section">
        <h3 style="text-align: center; margin-bottom: 20px;">Start Shopping Here</h3>
        <div class="row">
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Guitars'">
                <img src="/Images/pavlo-t-5rEyYBPLN-w-unsplash.jpg" alt="Guitars" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Guitars</p>
            </div>
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Keyboards & Pianos'">
                <img src="/Images/pexels-mikhail-nilov-7570112.jpg" alt="Keyboards & Pianos" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Keyboards & Pianos</p>
            </div>
            <!-- Drums & Percussion -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Drums & Percussion'">
                <img src="/Images/pexels-reneterp-1327430.jpg" alt="Drums & Percussion" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Drums & Percussion</p>
            </div>
            <!-- Pro Audio -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Pro Audio'">
                <img src="/Images/pexels-everson-mayer-478307-1481312.jpg" alt="Pro Audio" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Pro Audio</p>
            </div>
            <!-- Band & Orchestra -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Band & Orchestra'">
                <img src="/Images/pexels-shottrotter-752535.jpg" alt="Band & Orchestra" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Band & Orchestra</p>
            </div>
            <!-- Accessories -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Accessories'">
                <img src="/Images/pexels-rombo-1510555-5280438.jpg" alt="Accessories" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Accessories</p>
            </div>
        </div>
    </div>
</section>


    <section class="membership-section text-center bg-dark text-white py-5">
    <div class="membership-section">
        <h2>Have no clue what to buy ?</h2>
        <p>Check out our professional guide to get the perfect suited instrument !</p>
        <form class="d-inline-flex mt-2" action="/Home/Guide" method="get">
            
            <button class="btn btn-danger" type="submit">professional Guide</button>
        </form>
        </div>
    </section>

    <section class="features-section py-5 bg-light">
            <div class="container">
            <div class="row text-center">
                <div class="col-md-3">
                    <img src="/Images/box.png" alt="Same Day Delivery" class="mb-sm-1" style="width: 40px; height: 40px;">
                    <h5>Same Day/Next Day Delivery</h5>
                    <p>Next day delivery on most orders in Jordan - Same day available</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/shopping-cart.png" alt="Biggest Selection" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Biggest Selection</h5>
                    <p>Largest collection of any store in MENA</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/user-talking-with-speech-bubble.png" alt="Top-notch Support" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Top-notch Support</h5>
                    <p>We are always happy to help in any way we can</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/secure-payment.png" alt="Secure Payments" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Secure Payments</h5>
                    <p>Cash on Delivery available</p>
                </div>
            </div>
            </div>
     </section>


    

    <!-- JavaScript to Toggle Forms -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.js"></script>


        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-26 00:13:52.620 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 436.8889ms
2025-01-26 00:13:52.645 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-26 00:13:52.645 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-26 00:13:52.645 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-26 00:13:52.645 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 00:13:52.655 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-26 00:13:52.656 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-26 00:13:52.671 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 26.7793ms
2025-01-26 00:13:52.678 +03:00 [INF] [Response] 404 - 23ms

2025-01-26 00:13:52.678 +03:00 [INF] [Response] 404 - 21ms

2025-01-26 00:13:52.689 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 44.6714ms
2025-01-26 00:13:52.690 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 45.1428ms
2025-01-26 00:13:52.695 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-26 00:13:52.699 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-26 00:13:52.816 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 171.3777ms
2025-01-26 00:13:55.676 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Guide? - null null
2025-01-26 00:13:55.688 +03:00 [INF] [Request] GET /Home/Guide
[QueryString] ?

2025-01-26 00:13:55.691 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Guide (MyShop)'
2025-01-26 00:13:55.693 +03:00 [INF] Route matched with {action = "Guide", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Guide(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-26 00:13:55.738 +03:00 [INF] Executing ViewResult, running view Guide.
2025-01-26 00:13:55.756 +03:00 [INF] Executed ViewResult - view Guide executed in 18.2945ms.
2025-01-26 00:13:55.758 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Guide (MyShop) in 63.1209ms
2025-01-26 00:13:55.759 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Guide (MyShop)'
2025-01-26 00:13:55.760 +03:00 [INF] [Response] 200 - 71ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Guide - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
<style>

    .instruments-section h1 {
        font-size: 2.5rem;
        font-weight: bold;
        text-align: center;
    }

    .instruments-section p {
        font-size: 1.25rem;
        color: #555;
        text-align: center;
    }

    /* Black Line */
    hr.thick-black-line {
        border: none; /* Remove default borders */
        height: 5px; /* Set the height */
        background-color: black !important; /* Force black color */
        margin: 0 auto; /* Center it horizontally */
        width: 80%; /* Adjust width */
    }


    /* Dropdown Buttons Alignment */
    .instrument-buttons {
        display: flex;
        gap: 1rem; /* Add spacing between dropdown buttons */
        padding-left: 10%; /* Align dropdown buttons with the left edge of the line */
    }

        .instrument-buttons .dropdown {
            display: inline-block;
        }

        /* Styling for Buttons */
        .instrument-buttons .btn {
            font-size: 1rem;
            font-weight: bold;
            padding: 0.5rem 1.5rem;
        }

    /* Dropdown Menu Styling */
    .dropdown-menu {
        font-size: 1rem;
        text-align: left;
    }



</style>


<section class="instruments-section text-center py-5">
    <h1 class="mb-3">Instruments</h1>
    <p class="mb-4">
        Here, the SoundWave’s expert players guide you through the intricacies of the instruments they play.
        Choose an instrument from one of the sections.
    </p>
    <hr class="thick-black-line mb-4" />

    <!-- Dropdown Buttons -->
    <div class="instrument-buttons text-start">
        <!-- Dropdown for Instruments -->
        <div class="dropdown">
            <button class="btn btn-light border text-danger dropdown-toggle"
                    type="button"
                    id="instrumentDropdown"
                    data-bs-toggle="dropdown"
                    aria-expanded="false">
                Instruments
            </button>
            <ul class="dropdown-menu" aria-labelledby="instrumentDropdown">
                <li><a class="dropdown-item instrument-item" href="#">Guitars</a></li>
                <li><a class="dropdown-item instrument-item" href="#">Drums</a></li>
                <li><a class="dropdown-item instrument-item" href="#">Orchestra</a></li>
            </ul>
        </div>

        <!-- Dropdown for Level -->
        <div class="dropdown">
            <button class="btn btn-light border text-danger dropdown-toggle"
                    type="button"
                    id="levelDropdown"
                    data-bs-toggle="dropdown"
                    aria-expanded="false">
                Level
            </button>
            <ul class="dropdown-menu" aria-labelledby="levelDropdown">
                <li><a class="dropdown-item level-item" href="#">Beginner</a></li>
                <li><a class="dropdown-item level-item" href="#">Professional</a></li>
            </ul>
        </div>
    </div>
    
    <div id="card-container" class="d-flex justify-content-center gap-4 mt-5"></div>

</section>

<script>
    const instrumentDropdown = document.querySelectorAll('.instrument-item');
    const levelDropdown = document.querySelectorAll('.level-item');
    const cardContainer = document.getElementById('card-container');

    let selectedInstrument = '';
    let selectedLevel = '';

    const guitarsData = [
        {
            img: '/Images/guitar-4750599_1280.jpg',
            title: 'Acoustic Guitar',
            link: '#'
        },
        {
            img: '/Images/electric-guitar-7815026_1280.jpg',
            title: 'Electric Guitar',
            link: '#'
        },
        {
            img: '/Images/bass-guitar-913092_1280.jpg',
            title: 'Bass Guitar',
            link: '#'
        }
    ];

    const DrumsData = [
        {
            img: '/Images/african-2771092_1280.jpg',
            title: 'Hand Drums',
            link: '#'
        },
        {
            img: '/Images/electronic-drum-pad-5854409_1280.jpg',
            title: 'Electronic Drums',
            link: '#'
        },
        {
            img: '/Images/drum-set-1839383_1280.jpg',
            title: 'Acoustic Drums',
            link: '#'
        }
    ];

    const OrchestraData = [
        {
            img: '/Images/bowed-instrument-1853324_1280.jpg',
            title: 'Strings',
            link: '#'
        },
        {
            img: '/Images/saxophone-3246650_1280.jpg',
            title: 'Brass',
            link: '#'
        },
        
    ];

    instrumentDropdown.forEach(item => {
        item.addEventListener('click', function () {
            selectedInstrument = this.textContent.trim();
            checkSelection();
        });
    });

    levelDropdown.forEach(item => {
        item.addEventListener('click', function () {
            selectedLevel = this.textContent.trim();
            checkSelection();
        });
    });

    function checkSelection() {
        if (selectedInstrument === 'Guitars' && selectedLevel === 'Beginner') {
            renderCards(guitarsData);
        } 
        else if (selectedInstrument === 'Guitars' && selectedLevel === 'Professional') {
            renderCards(guitarsData);
        }
        else if (selectedInstrument === 'Drums' && (selectedLevel === 'Professional' || selectedLevel === 'Beginner')) {
            renderCards(DrumsData);

        }
        else if (selectedInstrument === 'Orchestra' && (selectedLevel === 'Professional' || selectedLevel === 'Beginner')) {
            renderCards(OrchestraData);

        }
        else {
            cardContainer.innerHTML = ''; // Clear cards
        }
    }

    function renderCards(data) {
        cardContainer.innerHTML = ''; // Clear previous cards

        data.forEach(item => {
            if (item.title.toLowerCase() === 'electric guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'electricguid'; // Set link to electricguid for Beginners
                } else {
                    item.link = 'proelectric'; // Set link to proelectric for other levels
                }
            } else if (item.title.toLowerCase() === 'acoustic guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'acousticpeg'; // Set link to acousticpeg for Beginners
                } else {
                    item.link = 'acousticpro'; // Set link to acousticpro for other levels
                }
            } else if (item.title.toLowerCase() === 'bass guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'bassbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'basspro'; // Set link to basspro for other levels
                }
            } else {
                // Default case if no matches found
                item.link = 'default'; // Default link or other fallback
            }


            const card = document.createElement('div');
            card.classList.add('card');
            card.style.width = '22rem';
            card.style.textAlign = 'center';
            card.style.border = '1px solid #ddd';
            card.style.boxShadow = '0 4px 6px rgba(0, 0, 0, 0.1)';
            card.style.borderRadius = '8px';

            card.innerHTML = `
                    <img src="${item.img}" alt="${item.title}" style="width:100%;border-bottom:1px solid #ddd;">
                    <h5 style="font-size:1.25rem;font-weight:bold;margin:1rem 0;">${item.title}</h5>
                    <a href="${item.link}" class="btn btn-danger" style="margin-bottom:1rem;font-weight:bold;">Read more</a>
                `;
            cardContainer.appendChild(card);
            
            
        });
    }
</script>


<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-26 00:13:55.809 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Guide? - 200 null text/html; charset=utf-8 133.9281ms
2025-01-26 00:13:55.827 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 00:13:55.827 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-26 00:13:55.827 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-26 00:13:55.827 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-26 00:13:55.835 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-26 00:13:55.830 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 3.5109ms
2025-01-26 00:13:55.841 +03:00 [INF] [Response] 404 - 6ms

2025-01-26 00:13:55.841 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-26 00:13:55.853 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 25.9399ms
2025-01-26 00:13:55.854 +03:00 [INF] [Response] 404 - 12ms

2025-01-26 00:13:55.856 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 29.3679ms
2025-01-26 00:13:55.859 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-26 00:13:55.861 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 34.197ms
2025-01-26 00:13:55.870 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-26 00:14:01.173 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/bassbeg - null null
2025-01-26 00:14:01.181 +03:00 [INF] [Request] GET /Home/bassbeg

2025-01-26 00:14:01.186 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.bassbeg (MyShop)'
2025-01-26 00:14:01.189 +03:00 [INF] Route matched with {action = "bassbeg", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult bassbeg(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-26 00:14:01.191 +03:00 [INF] Executing ViewResult, running view bassbeg.
2025-01-26 00:14:01.203 +03:00 [INF] Executed ViewResult - view bassbeg executed in 12.2836ms.
2025-01-26 00:14:01.206 +03:00 [INF] Executed action MyShop.Controllers.HomeController.bassbeg (MyShop) in 15.4774ms
2025-01-26 00:14:01.207 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.bassbeg (MyShop)'
2025-01-26 00:14:01.208 +03:00 [INF] [Response] 200 - 27ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Beginner Bass Guitar Guide - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
<style>
    /* General Styles */
    body {
        font-family: 'Roboto', sans-serif;
        margin: 0;
        padding: 0;
        background-color: #f4f4f4;
        color: #333;
        line-height: 1.6;
    }

    /* Header Phrase Styles */
    .header-phrase {
        background-color: #333; /* Black */
        color: #fff;
        padding: 20px;
        text-align: center;
    }

    .header-phrase h1 {
        margin: 0;
        font-size: 2.5rem;
    }

    /* Main Content Styles */
    main {
        padding: 20px;
        max-width: 1200px;
        margin: 0 auto;
    }

    section {
        margin-bottom: 40px;
    }

    h2 {
        color: #d32f2f; /* Red */
        border-bottom: 2px solid #d32f2f; /* Red */
        padding-bottom: 10px;
        margin-bottom: 20px;
    }

    .content-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 20px;
    }

    .content-card {
        background-color: #fff;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease;
    }

    .content-card:hover {
        transform: translateY(-5px);
    }

    .content-card img {
        width: 100%;
        height: 200px;
        object-fit: cover;
    }

    .content-card h3 {
        margin: 15px;
        color: #333;
    }

    .content-card p, .content-card ul {
        margin: 0 15px 15px;
        color: #555;
    }

    .content-card ul {
        list-style-type: disc;
        padding-left: 20px;
    }

    /* Footer Phrase Styles */
    .footer-phrase {
        background-color: #333; /* Black */
        color: #fff;
        text-align: center;
        padding: 15px;
        margin-top: 40px;
    }
</style>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Beginner Bass Guitar Guide</title>
    <link rel="stylesheet" href="styles.css">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
</head>
<body>
    <!-- Header Phrase -->
    <div class="header-phrase">
        <h1>Beginner Bass Guitar Guide</h1>
    </div>

    <!-- Main Content -->
    <main>
        <!-- Section 1: Choosing Your First Bass Guitar -->
        <section class="choosing-guitar">
            <h2>1. Choosing Your First Bass Guitar</h2>
            <div class="content-grid">
                <div class="content-card">
                    <img src="/Images/wallet-2292428_1280.jpg" alt="Affordable Bass Guitars">
                    <h3>Affordable Options</h3>
                    <p>Look for beginner-friendly basses like the <strong>Squier Affinity Precision Bass</strong> or <strong>Yamaha TRBX174</strong>. They’re affordable and reliable.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/workshop-4524838_1280.jpg" alt="Comfortable Bass Guitars">
                    <h3>Comfort is Key</h3>
                    <p>Choose a bass with a lightweight design and a comfortable neck, perfect for practice and long jam sessions.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/headphones-4595492_1280.jpg" alt="Starter Packs">
                    <h3>Starter Packs</h3>
                    <p>Consider a beginner bundle that includes a bass, amp, strap, and cable, such as the <strong>Ibanez Jumpstart Pack</strong>.</p>
                </div>
            </div>
        </section>

        <!-- Section 2: Basic Bass Guitar Components -->
        <section class="guitar-components">
            <h2>2. Basic Bass Guitar Components</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>Body Types</h3>
                    <ul>
                        <li><strong>Solid Body:</strong> Most common and versatile for all genres.</li>
                        <li><strong>Semi-Hollow:</strong> Adds resonance, good for blues and jazz.</li>
                    </ul>
                </div>
                <div class="content-card">
                    <h3>Pickups</h3>
                    <ul>
                        <li><strong>Split-Coil:</strong> Perfect for punchy and balanced tones.</li>
                        <li><strong>Humbuckers:</strong> Provide a thick, deep sound for rock and metal.</li>
                    </ul>
                </div>
                <div class="content-card">
                    <h3>Strings</h3>
                    <ul>
                        <li><strong>Gauge:</strong> Start with medium gauge strings for a balance of tone and playability.</li>
                        <li><strong>Material:</strong> Nickel-plated strings are versatile and beginner-friendly.</li>
                    </ul>
                </div>
            </div>
        </section>

        <!-- Section 3: Practice Essentials -->
        <section class="practice-essentials">
            <h2>3. Practice Essentials</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>Tuner</h3>
                    <p>Use a clip-on tuner or smartphone app to keep your bass in tune.</p>
                </div>
                <div class="content-card">
                    <h3>Amplifier</h3>
                    <p>Start with a small practice amp like the <strong>Fender Rumble 25</strong> or a portable amp like the <strong>Blackstar Fly 3 Bass</strong>.</p>
                </div>
                <div class="content-card">
                    <h3>Accessories</h3>
                    <p>Don’t forget picks, a strap, a cable, and a gig bag for easy transport.</p>
                </div>
            </div>
        </section>

        <!-- Section 4: Recommended Bass Guitars -->
        <section class="recommended-guitars">
            <h2>4. Recommended Bass Guitars for Beginners</h2>
            <div class="content-grid">
                <div class="content-card">
                    <img src="/Images/guitar-5980431_1280 (1).jpg" alt="Squier Affinity Precision Bass">
                    <h3>Squier Affinity Precision Bass</h3>
                    <p>A budget-friendly, versatile bass with a classic design.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/bass-guitar-1841186_1280.jpg" alt="Yamaha TRBX174">
                    <h3>Yamaha TRBX174</h3>
                    <p>An easy-to-play bass with solid construction and great tone.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/guitar-72727_1280.jpg" alt="Ibanez GSR200">
                    <h3>Ibanez GSR200</h3>
                    <p>A lightweight, beginner-friendly bass with a versatile sound.</p>
                </div>
            </div>
        </section>
    </main>

    <!-- Footer Phrase -->
    <div class="footer-phrase">
        <p>Start Your Bass Journey Today!</p>
    </div>
</body>
</html>

        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-26 00:14:01.248 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/bassbeg - 200 null text/html; charset=utf-8 75.3379ms
2025-01-26 00:14:01.260 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/styles.css - null null
2025-01-26 00:14:01.266 +03:00 [INF] [Request] GET /Home/styles.css

2025-01-26 00:14:01.268 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/wallet-2292428_1280.jpg - null null
2025-01-26 00:14:01.269 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-26 00:14:01.268 +03:00 [INF] [Response] 404 - 2ms

2025-01-26 00:14:01.269 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/workshop-4524838_1280.jpg - null null
2025-01-26 00:14:01.268 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/guitar-72727_1280.jpg - null null
2025-01-26 00:14:01.268 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/bass-guitar-1841186_1280.jpg - null null
2025-01-26 00:14:01.268 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 00:14:01.269 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-26 00:14:01.274 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-26 00:14:01.275 +03:00 [INF] The file /Images/wallet-2292428_1280.jpg was not modified
2025-01-26 00:14:01.275 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/styles.css - 404 0 null 14.2571ms
2025-01-26 00:14:01.276 +03:00 [INF] The file /Images/workshop-4524838_1280.jpg was not modified
2025-01-26 00:14:01.269 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/guitar-5980431_1280 (1).jpg - null null
2025-01-26 00:14:01.289 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/headphones-4595492_1280.jpg - null null
2025-01-26 00:14:01.293 +03:00 [INF] [Response] 404 - 18ms

2025-01-26 00:14:01.294 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/wallet-2292428_1280.jpg - 304 null image/jpeg 26.1264ms
2025-01-26 00:14:01.308 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 39.4972ms
2025-01-26 00:14:01.312 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-26 00:14:01.319 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-26 00:14:01.296 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/Home/styles.css, Response status code: 404
2025-01-26 00:14:01.299 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/workshop-4524838_1280.jpg - 304 null image/jpeg 30.3401ms
2025-01-26 00:14:01.292 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-26 00:14:01.312 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 44.5244ms
2025-01-26 00:14:01.340 +03:00 [INF] [Response] 404 - 47ms

2025-01-26 00:14:01.308 +03:00 [INF] The file /Images/headphones-4595492_1280.jpg was not modified
2025-01-26 00:14:01.344 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 75.0188ms
2025-01-26 00:14:01.346 +03:00 [INF] Sending file. Request path: '/Images/guitar-5980431_1280 (1).jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\guitar-5980431_1280 (1).jpg'
2025-01-26 00:14:01.346 +03:00 [INF] Sending file. Request path: '/Images/guitar-72727_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\guitar-72727_1280.jpg'
2025-01-26 00:14:01.346 +03:00 [INF] Sending file. Request path: '/Images/bass-guitar-1841186_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\bass-guitar-1841186_1280.jpg'
2025-01-26 00:14:01.351 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-26 00:14:01.345 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/headphones-4595492_1280.jpg - 304 null image/jpeg 56.0491ms
2025-01-26 00:14:01.353 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/guitar-5980431_1280 (1).jpg - 200 223794 image/jpeg 84.0279ms
2025-01-26 00:14:01.353 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 40.9952ms
2025-01-26 00:14:01.354 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/guitar-72727_1280.jpg - 200 305591 image/jpeg 85.7968ms
2025-01-26 00:14:01.355 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/bass-guitar-1841186_1280.jpg - 200 153339 image/jpeg 87.032ms
2025-01-26 00:16:55.807 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-26 00:16:56.147 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-26 00:16:56.149 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-26 00:16:56.235 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-26 00:16:56.238 +03:00 [INF] Hosting environment: Development
2025-01-26 00:16:56.239 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-26 00:16:56.823 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-26 00:16:57.046 +03:00 [INF] [Request] GET /

2025-01-26 00:16:57.090 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-26 00:16:57.109 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-26 00:16:57.135 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-26 00:16:57.198 +03:00 [INF] Executed ViewResult - view Index executed in 65.8074ms.
2025-01-26 00:16:57.201 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 87.8168ms
2025-01-26 00:16:57.202 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-26 00:16:57.204 +03:00 [INF] [Response] 200 - 167ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Home - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
    

 <style>
    .instrument-name {
        margin-top: 10px; /* Add space between the image and the text */
        font-size: 16px; /* Adjust the text size */
        font-weight: bold; /* Bold text */
        text-align: center; /* Center the text */
    }
  </style>

<section class="category-section py-4">
    <div class="category-section">
        <h3 style="text-align: center; margin-bottom: 20px;">Start Shopping Here</h3>
        <div class="row">
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Guitars'">
                <img src="/Images/pavlo-t-5rEyYBPLN-w-unsplash.jpg" alt="Guitars" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Guitars</p>
            </div>
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Keyboards & Pianos'">
                <img src="/Images/pexels-mikhail-nilov-7570112.jpg" alt="Keyboards & Pianos" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Keyboards & Pianos</p>
            </div>
            <!-- Drums & Percussion -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Drums & Percussion'">
                <img src="/Images/pexels-reneterp-1327430.jpg" alt="Drums & Percussion" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Drums & Percussion</p>
            </div>
            <!-- Pro Audio -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Pro Audio'">
                <img src="/Images/pexels-everson-mayer-478307-1481312.jpg" alt="Pro Audio" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Pro Audio</p>
            </div>
            <!-- Band & Orchestra -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Band & Orchestra'">
                <img src="/Images/pexels-shottrotter-752535.jpg" alt="Band & Orchestra" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Band & Orchestra</p>
            </div>
            <!-- Accessories -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Accessories'">
                <img src="/Images/pexels-rombo-1510555-5280438.jpg" alt="Accessories" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Accessories</p>
            </div>
        </div>
    </div>
</section>


    <section class="membership-section text-center bg-dark text-white py-5">
    <div class="membership-section">
        <h2>Have no clue what to buy ?</h2>
        <p>Check out our professional guide to get the perfect suited instrument !</p>
        <form class="d-inline-flex mt-2" action="/Home/Guide" method="get">
            
            <button class="btn btn-danger" type="submit">professional Guide</button>
        </form>
        </div>
    </section>

    <section class="features-section py-5 bg-light">
            <div class="container">
            <div class="row text-center">
                <div class="col-md-3">
                    <img src="/Images/box.png" alt="Same Day Delivery" class="mb-sm-1" style="width: 40px; height: 40px;">
                    <h5>Same Day/Next Day Delivery</h5>
                    <p>Next day delivery on most orders in Jordan - Same day available</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/shopping-cart.png" alt="Biggest Selection" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Biggest Selection</h5>
                    <p>Largest collection of any store in MENA</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/user-talking-with-speech-bubble.png" alt="Top-notch Support" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Top-notch Support</h5>
                    <p>We are always happy to help in any way we can</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/secure-payment.png" alt="Secure Payments" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Secure Payments</h5>
                    <p>Cash on Delivery available</p>
                </div>
            </div>
            </div>
     </section>


    

    <!-- JavaScript to Toggle Forms -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.js"></script>


        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-26 00:16:57.266 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 450.8192ms
2025-01-26 00:16:57.279 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 00:16:57.280 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-26 00:16:57.280 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-26 00:16:57.280 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-26 00:16:57.295 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 14.9978ms
2025-01-26 00:16:57.296 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-26 00:16:57.297 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-26 00:16:57.305 +03:00 [INF] [Response] 404 - 7ms

2025-01-26 00:16:57.305 +03:00 [INF] [Response] 404 - 8ms

2025-01-26 00:16:57.307 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 26.6796ms
2025-01-26 00:16:57.307 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 26.9952ms
2025-01-26 00:16:57.312 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-26 00:16:57.314 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-26 00:16:57.335 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 55.0796ms
2025-01-26 00:17:00.717 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Guide? - null null
2025-01-26 00:17:00.732 +03:00 [INF] [Request] GET /Home/Guide
[QueryString] ?

2025-01-26 00:17:00.735 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Guide (MyShop)'
2025-01-26 00:17:00.737 +03:00 [INF] Route matched with {action = "Guide", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Guide(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-26 00:17:00.782 +03:00 [INF] Executing ViewResult, running view Guide.
2025-01-26 00:17:00.788 +03:00 [INF] Executed ViewResult - view Guide executed in 6.7113ms.
2025-01-26 00:17:00.790 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Guide (MyShop) in 51.3676ms
2025-01-26 00:17:00.792 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Guide (MyShop)'
2025-01-26 00:17:00.795 +03:00 [INF] [Response] 200 - 62ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Guide - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
<style>

    .instruments-section h1 {
        font-size: 2.5rem;
        font-weight: bold;
        text-align: center;
    }

    .instruments-section p {
        font-size: 1.25rem;
        color: #555;
        text-align: center;
    }

    /* Black Line */
    hr.thick-black-line {
        border: none; /* Remove default borders */
        height: 5px; /* Set the height */
        background-color: black !important; /* Force black color */
        margin: 0 auto; /* Center it horizontally */
        width: 80%; /* Adjust width */
    }


    /* Dropdown Buttons Alignment */
    .instrument-buttons {
        display: flex;
        gap: 1rem; /* Add spacing between dropdown buttons */
        padding-left: 10%; /* Align dropdown buttons with the left edge of the line */
    }

        .instrument-buttons .dropdown {
            display: inline-block;
        }

        /* Styling for Buttons */
        .instrument-buttons .btn {
            font-size: 1rem;
            font-weight: bold;
            padding: 0.5rem 1.5rem;
        }

    /* Dropdown Menu Styling */
    .dropdown-menu {
        font-size: 1rem;
        text-align: left;
    }



</style>


<section class="instruments-section text-center py-5">
    <h1 class="mb-3">Instruments</h1>
    <p class="mb-4">
        Here, the SoundWave’s expert players guide you through the intricacies of the instruments they play.
        Choose an instrument from one of the sections.
    </p>
    <hr class="thick-black-line mb-4" />

    <!-- Dropdown Buttons -->
    <div class="instrument-buttons text-start">
        <!-- Dropdown for Instruments -->
        <div class="dropdown">
            <button class="btn btn-light border text-danger dropdown-toggle"
                    type="button"
                    id="instrumentDropdown"
                    data-bs-toggle="dropdown"
                    aria-expanded="false">
                Instruments
            </button>
            <ul class="dropdown-menu" aria-labelledby="instrumentDropdown">
                <li><a class="dropdown-item instrument-item" href="#">Guitars</a></li>
                <li><a class="dropdown-item instrument-item" href="#">Drums</a></li>
                <li><a class="dropdown-item instrument-item" href="#">Orchestra</a></li>
            </ul>
        </div>

        <!-- Dropdown for Level -->
        <div class="dropdown">
            <button class="btn btn-light border text-danger dropdown-toggle"
                    type="button"
                    id="levelDropdown"
                    data-bs-toggle="dropdown"
                    aria-expanded="false">
                Level
            </button>
            <ul class="dropdown-menu" aria-labelledby="levelDropdown">
                <li><a class="dropdown-item level-item" href="#">Beginner</a></li>
                <li><a class="dropdown-item level-item" href="#">Professional</a></li>
            </ul>
        </div>
    </div>
    
    <div id="card-container" class="d-flex justify-content-center gap-4 mt-5"></div>

</section>

<script>
    const instrumentDropdown = document.querySelectorAll('.instrument-item');
    const levelDropdown = document.querySelectorAll('.level-item');
    const cardContainer = document.getElementById('card-container');

    let selectedInstrument = '';
    let selectedLevel = '';

    const guitarsData = [
        {
            img: '/Images/guitar-4750599_1280.jpg',
            title: 'Acoustic Guitar',
            link: '#'
        },
        {
            img: '/Images/electric-guitar-7815026_1280.jpg',
            title: 'Electric Guitar',
            link: '#'
        },
        {
            img: '/Images/bass-guitar-913092_1280.jpg',
            title: 'Bass Guitar',
            link: '#'
        }
    ];

    const DrumsData = [
        {
            img: '/Images/african-2771092_1280.jpg',
            title: 'Hand Drums',
            link: '#'
        },
        {
            img: '/Images/electronic-drum-pad-5854409_1280.jpg',
            title: 'Electronic Drums',
            link: '#'
        },
        {
            img: '/Images/drum-set-1839383_1280.jpg',
            title: 'Acoustic Drums',
            link: '#'
        }
    ];

    const OrchestraData = [
        {
            img: '/Images/bowed-instrument-1853324_1280.jpg',
            title: 'Strings',
            link: '#'
        },
        {
            img: '/Images/saxophone-3246650_1280.jpg',
            title: 'Brass',
            link: '#'
        },
        
    ];

    instrumentDropdown.forEach(item => {
        item.addEventListener('click', function () {
            selectedInstrument = this.textContent.trim();
            checkSelection();
        });
    });

    levelDropdown.forEach(item => {
        item.addEventListener('click', function () {
            selectedLevel = this.textContent.trim();
            checkSelection();
        });
    });

    function checkSelection() {
        if (selectedInstrument === 'Guitars' && selectedLevel === 'Beginner') {
            renderCards(guitarsData);
        } 
        else if (selectedInstrument === 'Guitars' && selectedLevel === 'Professional') {
            renderCards(guitarsData);
        }
        else if (selectedInstrument === 'Drums' && (selectedLevel === 'Professional' || selectedLevel === 'Beginner')) {
            renderCards(DrumsData);

        }
        else if (selectedInstrument === 'Orchestra' && (selectedLevel === 'Professional' || selectedLevel === 'Beginner')) {
            renderCards(OrchestraData);

        }
        else {
            cardContainer.innerHTML = ''; // Clear cards
        }
    }

    function renderCards(data) {
        cardContainer.innerHTML = ''; // Clear previous cards

        data.forEach(item => {
            if (item.title.toLowerCase() === 'electric guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'electricguid'; // Set link to electricguid for Beginners
                } else {
                    item.link = 'proelectric'; // Set link to proelectric for other levels
                }
            } else if (item.title.toLowerCase() === 'acoustic guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'acousticpeg'; // Set link to acousticpeg for Beginners
                } else {
                    item.link = 'acousticpro'; // Set link to acousticpro for other levels
                }
            } else if (item.title.toLowerCase() === 'bass guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'bassbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'basspro'; // Set link to basspro for other levels
                }
            } else {
                // Default case if no matches found
                item.link = 'default'; // Default link or other fallback
            }


            const card = document.createElement('div');
            card.classList.add('card');
            card.style.width = '22rem';
            card.style.textAlign = 'center';
            card.style.border = '1px solid #ddd';
            card.style.boxShadow = '0 4px 6px rgba(0, 0, 0, 0.1)';
            card.style.borderRadius = '8px';

            card.innerHTML = `
                    <img src="${item.img}" alt="${item.title}" style="width:100%;border-bottom:1px solid #ddd;">
                    <h5 style="font-size:1.25rem;font-weight:bold;margin:1rem 0;">${item.title}</h5>
                    <a href="${item.link}" class="btn btn-danger" style="margin-bottom:1rem;font-weight:bold;">Read more</a>
                `;
            cardContainer.appendChild(card);
            
            
        });
    }
</script>


<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-26 00:17:00.849 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Guide? - 200 null text/html; charset=utf-8 132.2202ms
2025-01-26 00:17:00.870 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 00:17:00.870 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-26 00:17:00.870 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-26 00:17:00.871 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-26 00:17:00.876 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 6.2963ms
2025-01-26 00:17:00.878 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-26 00:17:00.881 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-26 00:17:00.896 +03:00 [INF] [Response] 404 - 17ms

2025-01-26 00:17:00.900 +03:00 [INF] [Response] 404 - 18ms

2025-01-26 00:17:00.900 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 30.0775ms
2025-01-26 00:17:00.901 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 30.7689ms
2025-01-26 00:17:00.905 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-26 00:17:00.921 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-26 00:17:00.946 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 75.6474ms
2025-01-26 00:17:11.016 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/basspro - null null
2025-01-26 00:17:11.045 +03:00 [INF] [Request] GET /Home/basspro

2025-01-26 00:17:11.054 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.basspro (MyShop)'
2025-01-26 00:17:11.060 +03:00 [INF] Route matched with {action = "basspro", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult basspro(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-26 00:17:11.065 +03:00 [INF] Executing ViewResult, running view basspro.
2025-01-26 00:17:11.073 +03:00 [INF] Executed ViewResult - view basspro executed in 8.6304ms.
2025-01-26 00:17:11.078 +03:00 [INF] Executed action MyShop.Controllers.HomeController.basspro (MyShop) in 14.2823ms
2025-01-26 00:17:11.081 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.basspro (MyShop)'
2025-01-26 00:17:11.082 +03:00 [INF] [Response] 200 - 36ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Professional Bass Guitar Guide - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
<style>
    /* General Styles */
    body {
        font-family: 'Roboto', sans-serif;
        margin: 0;
        padding: 0;
        background-color: #f4f4f4;
        color: #333;
        line-height: 1.6;
    }

    /* Header Phrase Styles */
    .header-phrase {
        background-color: #333; /* Black */
        color: #fff;
        padding: 20px;
        text-align: center;
    }

    .header-phrase h1 {
        margin: 0;
        font-size: 2.5rem;
    }

    /* Main Content Styles */
    main {
        padding: 20px;
        max-width: 1200px;
        margin: 0 auto;
    }

    section {
        margin-bottom: 40px;
    }

    h2 {
        color: #d32f2f; /* Red */
        border-bottom: 2px solid #d32f2f; /* Red */
        padding-bottom: 10px;
        margin-bottom: 20px;
    }

    .content-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 20px;
    }

    .content-card {
        background-color: #fff;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease;
    }

    .content-card:hover {
        transform: translateY(-5px);
    }

    .content-card img {
        width: 100%;
        height: 200px;
        object-fit: cover;
    }

    .content-card h3 {
        margin: 15px;
        color: #333;
    }

    .content-card p, .content-card ul {
        margin: 0 15px 15px;
        color: #555;
    }

    .content-card ul {
        list-style-type: disc;
        padding-left: 20px;
    }

    /* Footer Phrase Styles */
    .footer-phrase {
        background-color: #333; /* Black */
        color: #fff;
        text-align: center;
        padding: 15px;
        margin-top: 40px;
    }
</style>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Professional Bass Guitar Guide</title>
    <link rel="stylesheet" href="styles.css">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
</head>
<body>
    <!-- Header Phrase -->
    <div class="header-phrase">
        <h1>Professional Bass Guitar Guide</h1>
    </div>

    <!-- Main Content -->
    <main>
        <!-- Section 1: Choosing the Right Professional Bass -->
        <section class="choosing-guitar">
            <h2>1. Choosing the Right Professional Bass</h2>
            <div class="content-grid">
                <div class="content-card">
                    <img src="/Images/tape-2264972_1280.jpg" alt="High-End Bass Guitars">
                    <h3>High-End Options</h3>
                    <p>Consider premium models like the <strong>Fender American Ultra Jazz Bass</strong> or <strong>Music Man StingRay</strong> for unparalleled tone and playability.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/performance-3202707_1280.jpg" alt="Custom Bass Guitars">
                    <h3>Custom Builds</h3>
                    <p>Explore custom options from brands like <strong>Sadowsky</strong> or <strong>Fodera</strong> for a unique instrument tailored to your needs.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/girl-6824548_1280.jpg" alt="Extended Range Basses">
                    <h3>Extended Range</h3>
                    <p>For versatility, consider 5-string or 6-string basses like the <strong>Ibanez BTB</strong> series.</p>
                </div>
            </div>
        </section>

        <!-- Section 2: Advanced Bass Guitar Components -->
        <section class="guitar-components">
            <h2>2. Advanced Bass Guitar Components</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>Pickups</h3>
                    <ul>
                        <li><strong>Active Pickups:</strong> Deliver high output and clarity for all genres.</li>
                        <li><strong>Passive Pickups:</strong> Provide warm, vintage tones.</li>
                    </ul>
                </div>
                <div class="content-card">
                    <h3>Preamp and EQ</h3>
                    <ul>
                        <li><strong>Onboard Preamp:</strong> Adjust your tone directly on the bass.</li>
                        <li><strong>3-Band EQ:</strong> Fine-tune bass, mids, and treble for any style.</li>
                    </ul>
                </div>
                <div class="content-card">
                    <h3>Neck and Frets</h3>
                    <ul>
                        <li><strong>Neck Profile:</strong> Choose a profile that suits your playing style, such as a slim neck for speed.</li>
                        <li><strong>Fret Options:</strong> Consider fretless basses for smoother slides and a unique sound.</li>
                    </ul>
                </div>
            </div>
        </section>

        <!-- Section 3: Essential Gear for Professionals -->
        <section class="practice-essentials">
            <h2>3. Essential Gear for Professionals</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>Amplifiers</h3>
                    <p>Invest in high-quality amps like the <strong>Ampeg SVT</strong> or <strong>Markbass Little Mark</strong> series for powerful performance.</p>
                </div>
                <div class="content-card">
                    <h3>Effects Pedals</h3>
                    <p>Expand your sound with effects like compressors, overdrives, and chorus pedals from brands like <strong>Boss</strong> and <strong>Electro-Harmonix</strong>.</p>
                </div>
                <div class="content-card">
                    <h3>Wireless Systems</h3>
                    <p>Use professional-grade wireless systems for seamless stage performances.</p>
                </div>
            </div>
        </section>

        <!-- Section 4: Recommended Bass Guitars for Professionals -->
        <section class="recommended-guitars">
            <h2>4. Recommended Bass Guitars for Professionals</h2>
            <div class="content-grid">
                <div class="content-card">
                    <img src="/Images/other-2614387_1280.jpg" alt="Fender American Ultra Jazz Bass">
                    <h3>Fender American Ultra Jazz Bass</h3>
                    <p>Known for its superior craftsmanship and versatile tone.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/acoustic-guitar-1839379_1280.jpg" alt="Music Man StingRay">
                    <h3>Music Man StingRay</h3>
                    <p>Offers a powerful, punchy sound perfect for rock and funk.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/electric-guitar-4345340_1280.jpg" alt="Sadowsky MetroLine">
                    <h3>Sadowsky MetroLine</h3>
                    <p>A lightweight bass with impeccable tone and playability.</p>
                </div>
            </div>
        </section>
    </main>

    <!-- Footer Phrase -->
    <div class="footer-phrase">
        <p>Elevate Your Bass Performance Today!</p>
    </div>
</body>
</html>

        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-26 00:17:11.121 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/basspro - 200 null text/html; charset=utf-8 105.1544ms
2025-01-26 00:17:11.132 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/styles.css - null null
2025-01-26 00:17:11.135 +03:00 [INF] [Request] GET /Home/styles.css

2025-01-26 00:17:11.136 +03:00 [INF] [Response] 404 - 0ms

2025-01-26 00:17:11.137 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 00:17:11.138 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-26 00:17:11.137 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/styles.css - 404 0 null 5.4136ms
2025-01-26 00:17:11.143 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 7.0547ms
2025-01-26 00:17:11.152 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/Home/styles.css, Response status code: 404
2025-01-26 00:17:11.137 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-26 00:17:11.137 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-26 00:17:11.170 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 31.947ms
2025-01-26 00:17:11.171 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-26 00:17:11.177 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-26 00:17:11.180 +03:00 [INF] [Response] 404 - 8ms

2025-01-26 00:17:11.180 +03:00 [INF] [Response] 404 - 3ms

2025-01-26 00:17:11.181 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 43.574ms
2025-01-26 00:17:11.182 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 44.4834ms
2025-01-26 00:17:11.185 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-26 00:17:11.187 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-26 00:37:28.350 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-26 00:37:28.619 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-26 00:37:28.621 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-26 00:37:28.695 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-26 00:37:28.697 +03:00 [INF] Hosting environment: Development
2025-01-26 00:37:28.698 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-26 00:37:29.418 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-26 00:37:29.642 +03:00 [INF] [Request] GET /

2025-01-26 00:37:29.679 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-26 00:37:29.699 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-26 00:37:29.721 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-26 00:37:29.787 +03:00 [INF] Executed ViewResult - view Index executed in 71.1667ms.
2025-01-26 00:37:29.791 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 89.1731ms
2025-01-26 00:37:29.792 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-26 00:37:29.794 +03:00 [INF] [Response] 200 - 158ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Home - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
    

 <style>
    .instrument-name {
        margin-top: 10px; /* Add space between the image and the text */
        font-size: 16px; /* Adjust the text size */
        font-weight: bold; /* Bold text */
        text-align: center; /* Center the text */
    }
  </style>

<section class="category-section py-4">
    <div class="category-section">
        <h3 style="text-align: center; margin-bottom: 20px;">Start Shopping Here</h3>
        <div class="row">
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Guitars'">
                <img src="/Images/pavlo-t-5rEyYBPLN-w-unsplash.jpg" alt="Guitars" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Guitars</p>
            </div>
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Keyboards & Pianos'">
                <img src="/Images/pexels-mikhail-nilov-7570112.jpg" alt="Keyboards & Pianos" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Keyboards & Pianos</p>
            </div>
            <!-- Drums & Percussion -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Drums & Percussion'">
                <img src="/Images/pexels-reneterp-1327430.jpg" alt="Drums & Percussion" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Drums & Percussion</p>
            </div>
            <!-- Pro Audio -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Pro Audio'">
                <img src="/Images/pexels-everson-mayer-478307-1481312.jpg" alt="Pro Audio" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Pro Audio</p>
            </div>
            <!-- Band & Orchestra -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Band & Orchestra'">
                <img src="/Images/pexels-shottrotter-752535.jpg" alt="Band & Orchestra" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Band & Orchestra</p>
            </div>
            <!-- Accessories -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Accessories'">
                <img src="/Images/pexels-rombo-1510555-5280438.jpg" alt="Accessories" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Accessories</p>
            </div>
        </div>
    </div>
</section>


    <section class="membership-section text-center bg-dark text-white py-5">
    <div class="membership-section">
        <h2>Have no clue what to buy ?</h2>
        <p>Check out our professional guide to get the perfect suited instrument !</p>
        <form class="d-inline-flex mt-2" action="/Home/Guide" method="get">
            
            <button class="btn btn-danger" type="submit">professional Guide</button>
        </form>
        </div>
    </section>

    <section class="features-section py-5 bg-light">
            <div class="container">
            <div class="row text-center">
                <div class="col-md-3">
                    <img src="/Images/box.png" alt="Same Day Delivery" class="mb-sm-1" style="width: 40px; height: 40px;">
                    <h5>Same Day/Next Day Delivery</h5>
                    <p>Next day delivery on most orders in Jordan - Same day available</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/shopping-cart.png" alt="Biggest Selection" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Biggest Selection</h5>
                    <p>Largest collection of any store in MENA</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/user-talking-with-speech-bubble.png" alt="Top-notch Support" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Top-notch Support</h5>
                    <p>We are always happy to help in any way we can</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/secure-payment.png" alt="Secure Payments" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Secure Payments</h5>
                    <p>Cash on Delivery available</p>
                </div>
            </div>
            </div>
     </section>


    

    <!-- JavaScript to Toggle Forms -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.js"></script>


        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-26 00:37:29.847 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 437.1538ms
2025-01-26 00:37:29.876 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-26 00:37:29.876 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-26 00:37:29.876 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-26 00:37:29.876 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 00:37:29.892 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-26 00:37:29.897 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-26 00:37:29.913 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 37.2058ms
2025-01-26 00:37:29.914 +03:00 [INF] [Response] 404 - 17ms

2025-01-26 00:37:29.914 +03:00 [INF] [Response] 404 - 21ms

2025-01-26 00:37:29.921 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 45.3248ms
2025-01-26 00:37:29.922 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 45.7853ms
2025-01-26 00:37:29.925 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-26 00:37:29.927 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-26 00:37:29.960 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 83.7244ms
2025-01-26 00:37:34.624 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Guide? - null null
2025-01-26 00:37:34.640 +03:00 [INF] [Request] GET /Home/Guide
[QueryString] ?

2025-01-26 00:37:34.644 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Guide (MyShop)'
2025-01-26 00:37:34.647 +03:00 [INF] Route matched with {action = "Guide", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Guide(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-26 00:37:34.722 +03:00 [INF] Executing ViewResult, running view Guide.
2025-01-26 00:37:34.741 +03:00 [INF] Executed ViewResult - view Guide executed in 19.4667ms.
2025-01-26 00:37:34.742 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Guide (MyShop) in 92.8897ms
2025-01-26 00:37:34.743 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Guide (MyShop)'
2025-01-26 00:37:34.745 +03:00 [INF] [Response] 200 - 104ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Guide - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
<style>

    .instruments-section h1 {
        font-size: 2.5rem;
        font-weight: bold;
        text-align: center;
    }

    .instruments-section p {
        font-size: 1.25rem;
        color: #555;
        text-align: center;
    }

    /* Black Line */
    hr.thick-black-line {
        border: none; /* Remove default borders */
        height: 5px; /* Set the height */
        background-color: black !important; /* Force black color */
        margin: 0 auto; /* Center it horizontally */
        width: 80%; /* Adjust width */
    }


    /* Dropdown Buttons Alignment */
    .instrument-buttons {
        display: flex;
        gap: 1rem; /* Add spacing between dropdown buttons */
        padding-left: 10%; /* Align dropdown buttons with the left edge of the line */
    }

        .instrument-buttons .dropdown {
            display: inline-block;
        }

        /* Styling for Buttons */
        .instrument-buttons .btn {
            font-size: 1rem;
            font-weight: bold;
            padding: 0.5rem 1.5rem;
        }

    /* Dropdown Menu Styling */
    .dropdown-menu {
        font-size: 1rem;
        text-align: left;
    }



</style>


<section class="instruments-section text-center py-5">
    <h1 class="mb-3">Instruments</h1>
    <p class="mb-4">
        Here, the SoundWave’s expert players guide you through the intricacies of the instruments they play.
        Choose an instrument from one of the sections.
    </p>
    <hr class="thick-black-line mb-4" />

    <!-- Dropdown Buttons -->
    <div class="instrument-buttons text-start">
        <!-- Dropdown for Instruments -->
        <div class="dropdown">
            <button class="btn btn-light border text-danger dropdown-toggle"
                    type="button"
                    id="instrumentDropdown"
                    data-bs-toggle="dropdown"
                    aria-expanded="false">
                Instruments
            </button>
            <ul class="dropdown-menu" aria-labelledby="instrumentDropdown">
                <li><a class="dropdown-item instrument-item" href="#">Guitars</a></li>
                <li><a class="dropdown-item instrument-item" href="#">Drums</a></li>
                <li><a class="dropdown-item instrument-item" href="#">Orchestra</a></li>
            </ul>
        </div>

        <!-- Dropdown for Level -->
        <div class="dropdown">
            <button class="btn btn-light border text-danger dropdown-toggle"
                    type="button"
                    id="levelDropdown"
                    data-bs-toggle="dropdown"
                    aria-expanded="false">
                Level
            </button>
            <ul class="dropdown-menu" aria-labelledby="levelDropdown">
                <li><a class="dropdown-item level-item" href="#">Beginner</a></li>
                <li><a class="dropdown-item level-item" href="#">Professional</a></li>
            </ul>
        </div>
    </div>
    
    <div id="card-container" class="d-flex justify-content-center gap-4 mt-5"></div>

</section>

<script>
    const instrumentDropdown = document.querySelectorAll('.instrument-item');
    const levelDropdown = document.querySelectorAll('.level-item');
    const cardContainer = document.getElementById('card-container');

    let selectedInstrument = '';
    let selectedLevel = '';

    const guitarsData = [
        {
            img: '/Images/guitar-4750599_1280.jpg',
            title: 'Acoustic Guitar',
            link: '#'
        },
        {
            img: '/Images/electric-guitar-7815026_1280.jpg',
            title: 'Electric Guitar',
            link: '#'
        },
        {
            img: '/Images/bass-guitar-913092_1280.jpg',
            title: 'Bass Guitar',
            link: '#'
        }
    ];

    const DrumsData = [
        {
            img: '/Images/african-2771092_1280.jpg',
            title: 'Hand Drums',
            link: '#'
        },
        {
            img: '/Images/electronic-drum-pad-5854409_1280.jpg',
            title: 'Electronic Drums',
            link: '#'
        },
        {
            img: '/Images/drum-set-1839383_1280.jpg',
            title: 'Acoustic Drums',
            link: '#'
        }
    ];

    const OrchestraData = [
        {
            img: '/Images/bowed-instrument-1853324_1280.jpg',
            title: 'Strings',
            link: '#'
        },
        {
            img: '/Images/saxophone-3246650_1280.jpg',
            title: 'Brass',
            link: '#'
        },
        
    ];

    instrumentDropdown.forEach(item => {
        item.addEventListener('click', function () {
            selectedInstrument = this.textContent.trim();
            checkSelection();
        });
    });

    levelDropdown.forEach(item => {
        item.addEventListener('click', function () {
            selectedLevel = this.textContent.trim();
            checkSelection();
        });
    });

    function checkSelection() {
        if (selectedInstrument === 'Guitars' && selectedLevel === 'Beginner') {
            renderCards(guitarsData);
        } 
        else if (selectedInstrument === 'Guitars' && selectedLevel === 'Professional') {
            renderCards(guitarsData);
        }
        else if (selectedInstrument === 'Drums' && (selectedLevel === 'Professional' || selectedLevel === 'Beginner')) {
            renderCards(DrumsData);

        }
        else if (selectedInstrument === 'Orchestra' && (selectedLevel === 'Professional' || selectedLevel === 'Beginner')) {
            renderCards(OrchestraData);

        }
        else {
            cardContainer.innerHTML = ''; // Clear cards
        }
    }

    function renderCards(data) {
        cardContainer.innerHTML = ''; // Clear previous cards

        data.forEach(item => {
            if (item.title.toLowerCase() === 'electric guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'electricguid'; // Set link to electricguid for Beginners
                } else {
                    item.link = 'proelectric'; // Set link to proelectric for other levels
                }
            } else if (item.title.toLowerCase() === 'acoustic guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'acousticpeg'; // Set link to acousticpeg for Beginners
                } else {
                    item.link = 'acousticpro'; // Set link to acousticpro for other levels
                }
            } else if (item.title.toLowerCase() === 'bass guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'bassbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'basspro'; // Set link to basspro for other levels
                }
            } else {
                // Default case if no matches found
                item.link = 'default'; // Default link or other fallback
            }


            const card = document.createElement('div');
            card.classList.add('card');
            card.style.width = '22rem';
            card.style.textAlign = 'center';
            card.style.border = '1px solid #ddd';
            card.style.boxShadow = '0 4px 6px rgba(0, 0, 0, 0.1)';
            card.style.borderRadius = '8px';

            card.innerHTML = `
                    <img src="${item.img}" alt="${item.title}" style="width:100%;border-bottom:1px solid #ddd;">
                    <h5 style="font-size:1.25rem;font-weight:bold;margin:1rem 0;">${item.title}</h5>
                    <a href="${item.link}" class="btn btn-danger" style="margin-bottom:1rem;font-weight:bold;">Read more</a>
                `;
            cardContainer.appendChild(card);
            
            
        });
    }
</script>


<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-26 00:37:34.798 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Guide? - 200 null text/html; charset=utf-8 174.1027ms
2025-01-26 00:37:34.822 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 00:37:34.822 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-26 00:37:34.822 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-26 00:37:34.822 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-26 00:37:34.839 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-26 00:37:34.826 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 4.4149ms
2025-01-26 00:37:34.844 +03:00 [INF] [Response] 404 - 4ms

2025-01-26 00:37:34.844 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-26 00:37:34.857 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 34.521ms
2025-01-26 00:37:34.858 +03:00 [INF] [Response] 404 - 14ms

2025-01-26 00:37:34.858 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 36.2885ms
2025-01-26 00:37:34.862 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-26 00:37:34.862 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 40.8167ms
2025-01-26 00:37:34.873 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-26 00:37:43.562 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/bassbeg - null null
2025-01-26 00:37:43.572 +03:00 [INF] [Request] GET /Home/bassbeg

2025-01-26 00:37:43.576 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.bassbeg (MyShop)'
2025-01-26 00:37:43.577 +03:00 [INF] Route matched with {action = "bassbeg", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult bassbeg(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-26 00:37:43.590 +03:00 [INF] Executing ViewResult, running view bassbeg.
2025-01-26 00:37:43.601 +03:00 [INF] Executed ViewResult - view bassbeg executed in 21.7075ms.
2025-01-26 00:37:43.605 +03:00 [INF] Executed action MyShop.Controllers.HomeController.bassbeg (MyShop) in 26.5034ms
2025-01-26 00:37:43.606 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.bassbeg (MyShop)'
2025-01-26 00:37:43.608 +03:00 [INF] [Response] 200 - 35ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Beginner Bass Guitar Guide - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
<style>
    /* General Styles */
    body {
        font-family: 'Roboto', sans-serif;
        margin: 0;
        padding: 0;
        background-color: #f4f4f4;
        color: #333;
        line-height: 1.6;
    }

    /* Header Phrase Styles */
    .header-phrase {
        background-color: #333; /* Black */
        color: #fff;
        padding: 20px;
        text-align: center;
    }

    .header-phrase h1 {
        margin: 0;
        font-size: 2.5rem;
    }

    /* Main Content Styles */
    main {
        padding: 20px;
        max-width: 1200px;
        margin: 0 auto;
    }

    section {
        margin-bottom: 40px;
    }

    h2 {
        color: #d32f2f; /* Red */
        border-bottom: 2px solid #d32f2f; /* Red */
        padding-bottom: 10px;
        margin-bottom: 20px;
    }

    .content-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 20px;
    }

    .content-card {
        background-color: #fff;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease;
    }

    .content-card:hover {
        transform: translateY(-5px);
    }

    .content-card img {
        width: 100%;
        height: 200px;
        object-fit: cover;
    }

    .content-card h3 {
        margin: 15px;
        color: #333;
    }

    .content-card p, .content-card ul {
        margin: 0 15px 15px;
        color: #555;
    }

    .content-card ul {
        list-style-type: disc;
        padding-left: 20px;
    }

    /* Footer Phrase Styles */
    .footer-phrase {
        background-color: #333; /* Black */
        color: #fff;
        text-align: center;
        padding: 15px;
        margin-top: 40px;
    }
</style>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Beginner Bass Guitar Guide</title>
    <link rel="stylesheet" href="styles.css">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
</head>
<body>
    <!-- Header Phrase -->
    <div class="header-phrase">
        <h1>Beginner Bass Guitar Guide</h1>
    </div>

    <!-- Main Content -->
    <main>
        <!-- Section 1: Choosing Your First Bass Guitar -->
        <section class="choosing-guitar">
            <h2>1. Choosing Your First Bass Guitar</h2>
            <div class="content-grid">
                <div class="content-card">
                    <img src="/Images/wallet-2292428_1280.jpg" alt="Affordable Bass Guitars">
                    <h3>Affordable Options</h3>
                    <p>Look for beginner-friendly basses like the <strong>Squier Affinity Precision Bass</strong> or <strong>Yamaha TRBX174</strong>. They’re affordable and reliable.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/workshop-4524838_1280.jpg" alt="Comfortable Bass Guitars">
                    <h3>Comfort is Key</h3>
                    <p>Choose a bass with a lightweight design and a comfortable neck, perfect for practice and long jam sessions.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/headphones-4595492_1280.jpg" alt="Starter Packs">
                    <h3>Starter Packs</h3>
                    <p>Consider a beginner bundle that includes a bass, amp, strap, and cable, such as the <strong>Ibanez Jumpstart Pack</strong>.</p>
                </div>
            </div>
        </section>

        <!-- Section 2: Basic Bass Guitar Components -->
        <section class="guitar-components">
            <h2>2. Basic Bass Guitar Components</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>Body Types</h3>
                    <ul>
                        <li><strong>Solid Body:</strong> Most common and versatile for all genres.</li>
                        <li><strong>Semi-Hollow:</strong> Adds resonance, good for blues and jazz.</li>
                    </ul>
                </div>
                <div class="content-card">
                    <h3>Pickups</h3>
                    <ul>
                        <li><strong>Split-Coil:</strong> Perfect for punchy and balanced tones.</li>
                        <li><strong>Humbuckers:</strong> Provide a thick, deep sound for rock and metal.</li>
                    </ul>
                </div>
                <div class="content-card">
                    <h3>Strings</h3>
                    <ul>
                        <li><strong>Gauge:</strong> Start with medium gauge strings for a balance of tone and playability.</li>
                        <li><strong>Material:</strong> Nickel-plated strings are versatile and beginner-friendly.</li>
                    </ul>
                </div>
            </div>
        </section>

        <!-- Section 3: Practice Essentials -->
        <section class="practice-essentials">
            <h2>3. Practice Essentials</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>Tuner</h3>
                    <p>Use a clip-on tuner or smartphone app to keep your bass in tune.</p>
                </div>
                <div class="content-card">
                    <h3>Amplifier</h3>
                    <p>Start with a small practice amp like the <strong>Fender Rumble 25</strong> or a portable amp like the <strong>Blackstar Fly 3 Bass</strong>.</p>
                </div>
                <div class="content-card">
                    <h3>Accessories</h3>
                    <p>Don’t forget picks, a strap, a cable, and a gig bag for easy transport.</p>
                </div>
            </div>
        </section>

        <!-- Section 4: Recommended Bass Guitars -->
        <section class="recommended-guitars">
            <h2>4. Recommended Bass Guitars for Beginners</h2>
            <div class="content-grid">
                <div class="content-card">
                    <img src="/Images/guitar-5980431_1280 (1).jpg" alt="Squier Affinity Precision Bass">
                    <h3>Squier Affinity Precision Bass</h3>
                    <p>A budget-friendly, versatile bass with a classic design.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/bass-guitar-1841186_1280.jpg" alt="Yamaha TRBX174">
                    <h3>Yamaha TRBX174</h3>
                    <p>An easy-to-play bass with solid construction and great tone.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/guitar-72727_1280.jpg" alt="Ibanez GSR200">
                    <h3>Ibanez GSR200</h3>
                    <p>A lightweight, beginner-friendly bass with a versatile sound.</p>
                </div>
            </div>
        </section>
    </main>

    <!-- Footer Phrase -->
    <div class="footer-phrase">
        <p>Start Your Bass Journey Today!</p>
    </div>
</body>
</html>

        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-26 00:37:43.660 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/bassbeg - 200 null text/html; charset=utf-8 98.3573ms
2025-01-26 00:37:43.676 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/styles.css - null null
2025-01-26 00:37:43.680 +03:00 [INF] [Request] GET /Home/styles.css

2025-01-26 00:37:43.684 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 00:37:43.686 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/wallet-2292428_1280.jpg - null null
2025-01-26 00:37:43.687 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/headphones-4595492_1280.jpg - null null
2025-01-26 00:37:43.686 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/workshop-4524838_1280.jpg - null null
2025-01-26 00:37:43.686 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-26 00:37:43.687 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-26 00:37:43.685 +03:00 [INF] [Response] 404 - 4ms

2025-01-26 00:37:43.688 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/guitar-72727_1280.jpg - null null
2025-01-26 00:37:43.688 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/bass-guitar-1841186_1280.jpg - null null
2025-01-26 00:37:43.688 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/guitar-5980431_1280 (1).jpg - null null
2025-01-26 00:37:43.695 +03:00 [INF] The file /Images/wallet-2292428_1280.jpg was not modified
2025-01-26 00:37:43.696 +03:00 [INF] The file /Images/workshop-4524838_1280.jpg was not modified
2025-01-26 00:37:43.696 +03:00 [INF] The file /Images/headphones-4595492_1280.jpg was not modified
2025-01-26 00:37:43.697 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-26 00:37:43.701 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-26 00:37:43.702 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/styles.css - 404 0 null 25.5702ms
2025-01-26 00:37:43.704 +03:00 [INF] The file /Images/guitar-72727_1280.jpg was not modified
2025-01-26 00:37:43.706 +03:00 [INF] The file /Images/bass-guitar-1841186_1280.jpg was not modified
2025-01-26 00:37:43.708 +03:00 [INF] The file /Images/guitar-5980431_1280 (1).jpg was not modified
2025-01-26 00:37:43.709 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/wallet-2292428_1280.jpg - 304 null image/jpeg 23.4084ms
2025-01-26 00:37:43.709 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/workshop-4524838_1280.jpg - 304 null image/jpeg 23.3548ms
2025-01-26 00:37:43.710 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/headphones-4595492_1280.jpg - 304 null image/jpeg 23.7289ms
2025-01-26 00:37:43.711 +03:00 [INF] [Response] 404 - 14ms

2025-01-26 00:37:43.713 +03:00 [INF] [Response] 404 - 11ms

2025-01-26 00:37:43.718 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/Home/styles.css, Response status code: 404
2025-01-26 00:37:43.719 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/guitar-72727_1280.jpg - 304 null image/jpeg 31.7208ms
2025-01-26 00:37:43.720 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/bass-guitar-1841186_1280.jpg - 304 null image/jpeg 32.5206ms
2025-01-26 00:37:43.721 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/guitar-5980431_1280 (1).jpg - 304 null image/jpeg 33.594ms
2025-01-26 00:37:43.723 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-26 00:37:43.726 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 42.0643ms
2025-01-26 00:37:43.734 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 47.9097ms
2025-01-26 00:37:43.735 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 48.316ms
2025-01-26 00:37:43.758 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-26 00:37:43.761 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-26 00:37:43.775 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 51.9051ms
2025-01-26 00:37:47.017 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 00:37:47.021 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 4.826ms
2025-01-26 00:37:52.301 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/basspro - null null
2025-01-26 00:37:52.306 +03:00 [INF] [Request] GET /Home/basspro

2025-01-26 00:37:52.307 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.basspro (MyShop)'
2025-01-26 00:37:52.309 +03:00 [INF] Route matched with {action = "basspro", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult basspro(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-26 00:37:52.311 +03:00 [INF] Executing ViewResult, running view basspro.
2025-01-26 00:37:52.319 +03:00 [INF] Executed ViewResult - view basspro executed in 8.9732ms.
2025-01-26 00:37:52.323 +03:00 [INF] Executed action MyShop.Controllers.HomeController.basspro (MyShop) in 13.4611ms
2025-01-26 00:37:52.324 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.basspro (MyShop)'
2025-01-26 00:37:52.326 +03:00 [INF] [Response] 200 - 19ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Professional Bass Guitar Guide - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
<style>
    /* General Styles */
    body {
        font-family: 'Roboto', sans-serif;
        margin: 0;
        padding: 0;
        background-color: #f4f4f4;
        color: #333;
        line-height: 1.6;
    }

    /* Header Phrase Styles */
    .header-phrase {
        background-color: #333; /* Black */
        color: #fff;
        padding: 20px;
        text-align: center;
    }

    .header-phrase h1 {
        margin: 0;
        font-size: 2.5rem;
    }

    /* Main Content Styles */
    main {
        padding: 20px;
        max-width: 1200px;
        margin: 0 auto;
    }

    section {
        margin-bottom: 40px;
    }

    h2 {
        color: #d32f2f; /* Red */
        border-bottom: 2px solid #d32f2f; /* Red */
        padding-bottom: 10px;
        margin-bottom: 20px;
    }

    .content-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 20px;
    }

    .content-card {
        background-color: #fff;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease;
    }

    .content-card:hover {
        transform: translateY(-5px);
    }

    .content-card img {
        width: 100%;
        height: 200px;
        object-fit: cover;
    }

    .content-card h3 {
        margin: 15px;
        color: #333;
    }

    .content-card p, .content-card ul {
        margin: 0 15px 15px;
        color: #555;
    }

    .content-card ul {
        list-style-type: disc;
        padding-left: 20px;
    }

    /* Footer Phrase Styles */
    .footer-phrase {
        background-color: #333; /* Black */
        color: #fff;
        text-align: center;
        padding: 15px;
        margin-top: 40px;
    }
</style>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Professional Bass Guitar Guide</title>
    <link rel="stylesheet" href="styles.css">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
</head>
<body>
    <!-- Header Phrase -->
    <div class="header-phrase">
        <h1>Professional Bass Guitar Guide</h1>
    </div>

    <!-- Main Content -->
    <main>
        <!-- Section 1: Choosing the Right Professional Bass -->
        <section class="choosing-guitar">
            <h2>1. Choosing the Right Professional Bass</h2>
            <div class="content-grid">
                <div class="content-card">
                    <img src="/Images/customer-3864813_1280.jpg" alt="High-End Bass Guitars">
                    <h3>High-End Options</h3>
                    <p>Consider premium models like the <strong>Fender American Ultra Jazz Bass</strong> or <strong>Music Man StingRay</strong> for unparalleled tone and playability.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/guitar-1995031_1280.jpg" alt="Custom Bass Guitars">
                    <h3>Custom Builds</h3>
                    <p>Explore custom options from brands like <strong>Sadowsky</strong> or <strong>Fodera</strong> for a unique instrument tailored to your needs.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/guitar-4670803_1280.jpg" alt="Extended Range Basses">
                    <h3>Extended Range</h3>
                    <p>For versatility, consider 5-string or 6-string basses like the <strong>Ibanez BTB</strong> series.</p>
                </div>
            </div>
        </section>

        <!-- Section 2: Advanced Bass Guitar Components -->
        <section class="guitar-components">
            <h2>2. Advanced Bass Guitar Components</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>Pickups</h3>
                    <ul>
                        <li><strong>Active Pickups:</strong> Deliver high output and clarity for all genres.</li>
                        <li><strong>Passive Pickups:</strong> Provide warm, vintage tones.</li>
                    </ul>
                </div>
                <div class="content-card">
                    <h3>Preamp and EQ</h3>
                    <ul>
                        <li><strong>Onboard Preamp:</strong> Adjust your tone directly on the bass.</li>
                        <li><strong>3-Band EQ:</strong> Fine-tune bass, mids, and treble for any style.</li>
                    </ul>
                </div>
                <div class="content-card">
                    <h3>Neck and Frets</h3>
                    <ul>
                        <li><strong>Neck Profile:</strong> Choose a profile that suits your playing style, such as a slim neck for speed.</li>
                        <li><strong>Fret Options:</strong> Consider fretless basses for smoother slides and a unique sound.</li>
                    </ul>
                </div>
            </div>
        </section>

        <!-- Section 3: Essential Gear for Professionals -->
        <section class="practice-essentials">
            <h2>3. Essential Gear for Professionals</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>Amplifiers</h3>
                    <p>Invest in high-quality amps like the <strong>Ampeg SVT</strong> or <strong>Markbass Little Mark</strong> series for powerful performance.</p>
                </div>
                <div class="content-card">
                    <h3>Effects Pedals</h3>
                    <p>Expand your sound with effects like compressors, overdrives, and chorus pedals from brands like <strong>Boss</strong> and <strong>Electro-Harmonix</strong>.</p>
                </div>
                <div class="content-card">
                    <h3>Wireless Systems</h3>
                    <p>Use professional-grade wireless systems for seamless stage performances.</p>
                </div>
            </div>
        </section>

        <!-- Section 4: Recommended Bass Guitars for Professionals -->
        <section class="recommended-guitars">
            <h2>4. Recommended Bass Guitars for Professionals</h2>
            <div class="content-grid">
                <div class="content-card">
                    <img src="/Images/music-756514_1280.jpg" alt="Fender American Ultra Jazz Bass">
                    <h3>Fender American Ultra Jazz Bass</h3>
                    <p>Known for its superior craftsmanship and versatile tone.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/bass-guitar-6875482_1280.jpg" alt="Music Man StingRay">
                    <h3>Music Man StingRay</h3>
                    <p>Offers a powerful, punchy sound perfect for rock and funk.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/guitarist-7060431_1280.jpg" alt="Sadowsky MetroLine">
                    <h3>Sadowsky MetroLine</h3>
                    <p>A lightweight bass with impeccable tone and playability.</p>
                </div>
            </div>
        </section>
    </main>

    <!-- Footer Phrase -->
    <div class="footer-phrase">
        <p>Elevate Your Bass Performance Today!</p>
    </div>
</body>
</html>

        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-26 00:37:52.371 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/basspro - 200 null text/html; charset=utf-8 69.8759ms
2025-01-26 00:37:52.383 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/customer-3864813_1280.jpg - null null
2025-01-26 00:37:52.384 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/styles.css - null null
2025-01-26 00:37:52.392 +03:00 [INF] [Request] GET /Home/styles.css

2025-01-26 00:37:52.392 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/guitar-4670803_1280.jpg - null null
2025-01-26 00:37:52.392 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/bass-guitar-6875482_1280.jpg - null null
2025-01-26 00:37:52.392 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 00:37:52.392 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/music-756514_1280.jpg - null null
2025-01-26 00:37:52.393 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/guitarist-7060431_1280.jpg - null null
2025-01-26 00:37:52.392 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/guitar-1995031_1280.jpg - null null
2025-01-26 00:37:52.393 +03:00 [INF] [Response] 404 - 1ms

2025-01-26 00:37:52.419 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/styles.css - 404 0 null 36.4532ms
2025-01-26 00:37:52.407 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-26 00:37:52.423 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/Home/styles.css, Response status code: 404
2025-01-26 00:37:52.426 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-26 00:37:52.429 +03:00 [INF] [Response] 404 - 2ms

2025-01-26 00:37:52.435 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-26 00:37:52.435 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 28.1299ms
2025-01-26 00:37:52.441 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 49.0856ms
2025-01-26 00:37:52.451 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-26 00:37:52.440 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-26 00:37:52.444 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-26 00:37:52.479 +03:00 [INF] [Response] 404 - 33ms

2025-01-26 00:37:52.483 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 48.3693ms
2025-01-26 00:37:52.520 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-26 00:37:52.556 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 116.0152ms
2025-01-26 00:37:52.559 +03:00 [INF] Sending file. Request path: '/Images/bass-guitar-6875482_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\bass-guitar-6875482_1280.jpg'
2025-01-26 00:37:52.559 +03:00 [INF] Sending file. Request path: '/Images/guitar-1995031_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\guitar-1995031_1280.jpg'
2025-01-26 00:37:52.559 +03:00 [INF] Sending file. Request path: '/Images/customer-3864813_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\customer-3864813_1280.jpg'
2025-01-26 00:37:52.559 +03:00 [INF] Sending file. Request path: '/Images/guitar-4670803_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\guitar-4670803_1280.jpg'
2025-01-26 00:37:52.565 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/guitar-4670803_1280.jpg - 200 200758 image/jpeg 172.2465ms
2025-01-26 00:37:52.559 +03:00 [INF] Sending file. Request path: '/Images/music-756514_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\music-756514_1280.jpg'
2025-01-26 00:37:52.560 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/bass-guitar-6875482_1280.jpg - 200 281291 image/jpeg 167.7392ms
2025-01-26 00:37:52.561 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/guitar-1995031_1280.jpg - 200 189559 image/jpeg 168.6091ms
2025-01-26 00:37:52.562 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/customer-3864813_1280.jpg - 200 249887 image/jpeg 179.6225ms
2025-01-26 00:37:52.559 +03:00 [INF] Sending file. Request path: '/Images/guitarist-7060431_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\guitarist-7060431_1280.jpg'
2025-01-26 00:37:52.570 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/music-756514_1280.jpg - 200 267681 image/jpeg 177.3819ms
2025-01-26 00:37:52.578 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/guitarist-7060431_1280.jpg - 200 246048 image/jpeg 185.1542ms
2025-01-26 00:51:04.064 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-26 00:51:04.319 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-26 00:51:04.321 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-26 00:51:04.396 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-26 00:51:04.399 +03:00 [INF] Hosting environment: Development
2025-01-26 00:51:04.400 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-26 00:51:05.076 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-26 00:51:05.291 +03:00 [INF] [Request] GET /

2025-01-26 00:51:05.329 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-26 00:51:05.349 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-26 00:51:05.372 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-26 00:51:05.435 +03:00 [INF] Executed ViewResult - view Index executed in 63.1778ms.
2025-01-26 00:51:05.440 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 88.1676ms
2025-01-26 00:51:05.442 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-26 00:51:05.444 +03:00 [INF] [Response] 200 - 158ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Home - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
    

 <style>
    .instrument-name {
        margin-top: 10px; /* Add space between the image and the text */
        font-size: 16px; /* Adjust the text size */
        font-weight: bold; /* Bold text */
        text-align: center; /* Center the text */
    }
  </style>

<section class="category-section py-4">
    <div class="category-section">
        <h3 style="text-align: center; margin-bottom: 20px;">Start Shopping Here</h3>
        <div class="row">
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Guitars'">
                <img src="/Images/pavlo-t-5rEyYBPLN-w-unsplash.jpg" alt="Guitars" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Guitars</p>
            </div>
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Keyboards & Pianos'">
                <img src="/Images/pexels-mikhail-nilov-7570112.jpg" alt="Keyboards & Pianos" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Keyboards & Pianos</p>
            </div>
            <!-- Drums & Percussion -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Drums & Percussion'">
                <img src="/Images/pexels-reneterp-1327430.jpg" alt="Drums & Percussion" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Drums & Percussion</p>
            </div>
            <!-- Pro Audio -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Pro Audio'">
                <img src="/Images/pexels-everson-mayer-478307-1481312.jpg" alt="Pro Audio" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Pro Audio</p>
            </div>
            <!-- Band & Orchestra -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Band & Orchestra'">
                <img src="/Images/pexels-shottrotter-752535.jpg" alt="Band & Orchestra" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Band & Orchestra</p>
            </div>
            <!-- Accessories -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Accessories'">
                <img src="/Images/pexels-rombo-1510555-5280438.jpg" alt="Accessories" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Accessories</p>
            </div>
        </div>
    </div>
</section>


    <section class="membership-section text-center bg-dark text-white py-5">
    <div class="membership-section">
        <h2>Have no clue what to buy ?</h2>
        <p>Check out our professional guide to get the perfect suited instrument !</p>
        <form class="d-inline-flex mt-2" action="/Home/Guide" method="get">
            
            <button class="btn btn-danger" type="submit">professional Guide</button>
        </form>
        </div>
    </section>

    <section class="features-section py-5 bg-light">
            <div class="container">
            <div class="row text-center">
                <div class="col-md-3">
                    <img src="/Images/box.png" alt="Same Day Delivery" class="mb-sm-1" style="width: 40px; height: 40px;">
                    <h5>Same Day/Next Day Delivery</h5>
                    <p>Next day delivery on most orders in Jordan - Same day available</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/shopping-cart.png" alt="Biggest Selection" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Biggest Selection</h5>
                    <p>Largest collection of any store in MENA</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/user-talking-with-speech-bubble.png" alt="Top-notch Support" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Top-notch Support</h5>
                    <p>We are always happy to help in any way we can</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/secure-payment.png" alt="Secure Payments" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Secure Payments</h5>
                    <p>Cash on Delivery available</p>
                </div>
            </div>
            </div>
     </section>


    

    <!-- JavaScript to Toggle Forms -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.js"></script>


        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-26 00:51:05.504 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 434.3885ms
2025-01-26 00:51:05.530 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-26 00:51:05.536 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-26 00:51:05.531 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-26 00:51:05.531 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 00:51:05.550 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-26 00:51:05.563 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-26 00:51:05.575 +03:00 [INF] [Response] 404 - 12ms

2025-01-26 00:51:05.575 +03:00 [INF] [Response] 404 - 24ms

2025-01-26 00:51:05.575 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 46.8761ms
2025-01-26 00:51:05.576 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 46.1139ms
2025-01-26 00:51:05.577 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 48.8341ms
2025-01-26 00:51:05.590 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-26 00:51:05.595 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-26 00:51:05.619 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 83.1344ms
2025-01-26 00:51:14.669 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Guide? - null null
2025-01-26 00:51:14.677 +03:00 [INF] [Request] GET /Home/Guide
[QueryString] ?

2025-01-26 00:51:14.682 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Guide (MyShop)'
2025-01-26 00:51:14.687 +03:00 [INF] Route matched with {action = "Guide", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Guide(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-26 00:51:14.726 +03:00 [INF] Executing ViewResult, running view Guide.
2025-01-26 00:51:14.736 +03:00 [INF] Executed ViewResult - view Guide executed in 10.2188ms.
2025-01-26 00:51:14.738 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Guide (MyShop) in 50.3802ms
2025-01-26 00:51:14.739 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Guide (MyShop)'
2025-01-26 00:51:14.741 +03:00 [INF] [Response] 200 - 63ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Guide - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
<style>

    .instruments-section h1 {
        font-size: 2.5rem;
        font-weight: bold;
        text-align: center;
    }

    .instruments-section p {
        font-size: 1.25rem;
        color: #555;
        text-align: center;
    }

    /* Black Line */
    hr.thick-black-line {
        border: none; /* Remove default borders */
        height: 5px; /* Set the height */
        background-color: black !important; /* Force black color */
        margin: 0 auto; /* Center it horizontally */
        width: 80%; /* Adjust width */
    }


    /* Dropdown Buttons Alignment */
    .instrument-buttons {
        display: flex;
        gap: 1rem; /* Add spacing between dropdown buttons */
        padding-left: 10%; /* Align dropdown buttons with the left edge of the line */
    }

        .instrument-buttons .dropdown {
            display: inline-block;
        }

        /* Styling for Buttons */
        .instrument-buttons .btn {
            font-size: 1rem;
            font-weight: bold;
            padding: 0.5rem 1.5rem;
        }

    /* Dropdown Menu Styling */
    .dropdown-menu {
        font-size: 1rem;
        text-align: left;
    }



</style>


<section class="instruments-section text-center py-5">
    <h1 class="mb-3">Instruments</h1>
    <p class="mb-4">
        Here, the SoundWave’s expert players guide you through the intricacies of the instruments they play.
        Choose an instrument from one of the sections.
    </p>
    <hr class="thick-black-line mb-4" />

    <!-- Dropdown Buttons -->
    <div class="instrument-buttons text-start">
        <!-- Dropdown for Instruments -->
        <div class="dropdown">
            <button class="btn btn-light border text-danger dropdown-toggle"
                    type="button"
                    id="instrumentDropdown"
                    data-bs-toggle="dropdown"
                    aria-expanded="false">
                Instruments
            </button>
            <ul class="dropdown-menu" aria-labelledby="instrumentDropdown">
                <li><a class="dropdown-item instrument-item" href="#">Guitars</a></li>
                <li><a class="dropdown-item instrument-item" href="#">Drums</a></li>
                <li><a class="dropdown-item instrument-item" href="#">Orchestra</a></li>
            </ul>
        </div>

        <!-- Dropdown for Level -->
        <div class="dropdown">
            <button class="btn btn-light border text-danger dropdown-toggle"
                    type="button"
                    id="levelDropdown"
                    data-bs-toggle="dropdown"
                    aria-expanded="false">
                Level
            </button>
            <ul class="dropdown-menu" aria-labelledby="levelDropdown">
                <li><a class="dropdown-item level-item" href="#">Beginner</a></li>
                <li><a class="dropdown-item level-item" href="#">Professional</a></li>
            </ul>
        </div>
    </div>
    
    <div id="card-container" class="d-flex justify-content-center gap-4 mt-5"></div>

</section>

<script>
    const instrumentDropdown = document.querySelectorAll('.instrument-item');
    const levelDropdown = document.querySelectorAll('.level-item');
    const cardContainer = document.getElementById('card-container');

    let selectedInstrument = '';
    let selectedLevel = '';

    const guitarsData = [
        {
            img: '/Images/guitar-4750599_1280.jpg',
            title: 'Acoustic Guitar',
            link: '#'
        },
        {
            img: '/Images/electric-guitar-7815026_1280.jpg',
            title: 'Electric Guitar',
            link: '#'
        },
        {
            img: '/Images/bass-guitar-913092_1280.jpg',
            title: 'Bass Guitar',
            link: '#'
        }
    ];

    const DrumsData = [
        {
            img: '/Images/african-2771092_1280.jpg',
            title: 'Hand Drums',
            link: '#'
        },
        {
            img: '/Images/electronic-drum-pad-5854409_1280.jpg',
            title: 'Electronic Drums',
            link: '#'
        },
        {
            img: '/Images/drum-set-1839383_1280.jpg',
            title: 'Acoustic Drums',
            link: '#'
        }
    ];

    const OrchestraData = [
        {
            img: '/Images/bowed-instrument-1853324_1280.jpg',
            title: 'Strings',
            link: '#'
        },
        {
            img: '/Images/saxophone-3246650_1280.jpg',
            title: 'Brass',
            link: '#'
        },
        
    ];

    instrumentDropdown.forEach(item => {
        item.addEventListener('click', function () {
            selectedInstrument = this.textContent.trim();
            checkSelection();
        });
    });

    levelDropdown.forEach(item => {
        item.addEventListener('click', function () {
            selectedLevel = this.textContent.trim();
            checkSelection();
        });
    });

    function checkSelection() {
        if (selectedInstrument === 'Guitars' && selectedLevel === 'Beginner') {
            renderCards(guitarsData);
        } 
        else if (selectedInstrument === 'Guitars' && selectedLevel === 'Professional') {
            renderCards(guitarsData);
        }
        else if (selectedInstrument === 'Drums' && (selectedLevel === 'Professional' || selectedLevel === 'Beginner')) {
            renderCards(DrumsData);

        }
        else if (selectedInstrument === 'Orchestra' && (selectedLevel === 'Professional' || selectedLevel === 'Beginner')) {
            renderCards(OrchestraData);

        }
        else {
            cardContainer.innerHTML = ''; // Clear cards
        }
    }

    function renderCards(data) {
        cardContainer.innerHTML = ''; // Clear previous cards

        data.forEach(item => {
            if (item.title.toLowerCase() === 'electric guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'electricguid'; // Set link to electricguid for Beginners
                } else {
                    item.link = 'proelectric'; // Set link to proelectric for other levels
                }
            } else if (item.title.toLowerCase() === 'acoustic guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'acousticpeg'; // Set link to acousticpeg for Beginners
                } else {
                    item.link = 'acousticpro'; // Set link to acousticpro for other levels
                }
            } else if (item.title.toLowerCase() === 'bass guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'bassbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'basspro'; // Set link to basspro for other levels
                }
            } else {
                // Default case if no matches found
                item.link = 'default'; // Default link or other fallback
            }


            const card = document.createElement('div');
            card.classList.add('card');
            card.style.width = '22rem';
            card.style.textAlign = 'center';
            card.style.border = '1px solid #ddd';
            card.style.boxShadow = '0 4px 6px rgba(0, 0, 0, 0.1)';
            card.style.borderRadius = '8px';

            card.innerHTML = `
                    <img src="${item.img}" alt="${item.title}" style="width:100%;border-bottom:1px solid #ddd;">
                    <h5 style="font-size:1.25rem;font-weight:bold;margin:1rem 0;">${item.title}</h5>
                    <a href="${item.link}" class="btn btn-danger" style="margin-bottom:1rem;font-weight:bold;">Read more</a>
                `;
            cardContainer.appendChild(card);
            
            
        });
    }
</script>


<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-26 00:51:14.799 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Guide? - 200 null text/html; charset=utf-8 129.7152ms
2025-01-26 00:51:14.815 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 00:51:14.816 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-26 00:51:14.816 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-26 00:51:14.821 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 5.6449ms
2025-01-26 00:51:14.831 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-26 00:51:14.815 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-26 00:51:14.836 +03:00 [INF] [Response] 404 - 5ms

2025-01-26 00:51:14.842 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 26.1418ms
2025-01-26 00:51:14.842 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-26 00:51:14.853 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-26 00:51:14.855 +03:00 [INF] [Response] 404 - 12ms

2025-01-26 00:51:14.857 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 41.5625ms
2025-01-26 00:51:14.858 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 42.6299ms
2025-01-26 00:51:14.868 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-26 00:51:25.469 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/acousticpeg - null null
2025-01-26 00:51:25.478 +03:00 [INF] [Request] GET /Home/acousticpeg

2025-01-26 00:51:25.482 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.acousticpeg (MyShop)'
2025-01-26 00:51:25.485 +03:00 [INF] Route matched with {action = "acousticpeg", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult acousticpeg(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-26 00:51:25.487 +03:00 [INF] Executing ViewResult, running view acousticpeg.
2025-01-26 00:51:25.494 +03:00 [INF] Executed ViewResult - view acousticpeg executed in 7.516ms.
2025-01-26 00:51:25.498 +03:00 [INF] Executed action MyShop.Controllers.HomeController.acousticpeg (MyShop) in 11.7803ms
2025-01-26 00:51:25.500 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.acousticpeg (MyShop)'
2025-01-26 00:51:25.501 +03:00 [INF] [Response] 200 - 22ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Beginner Acoustic Guitar Guide - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
<style>
    /* General Styles */
    body {
        font-family: 'Roboto', sans-serif;
        margin: 0;
        padding: 0;
        background-color: #f4f4f4;
        color: #333;
        line-height: 1.6;
    }

    /* Header Phrase Styles */
    .header-phrase {
        background-color: #333; /* Black */
        color: #fff;
        padding: 20px;
        text-align: center;
    }

    .header-phrase h1 {
        margin: 0;
        font-size: 2.5rem;
    }

    /* Main Content Styles */
    main {
        padding: 20px;
        max-width: 1200px;
        margin: 0 auto;
    }

    section {
        margin-bottom: 40px;
    }

    h2 {
        color: #d32f2f; /* Red */
        border-bottom: 2px solid #d32f2f; /* Red */
        padding-bottom: 10px;
        margin-bottom: 20px;
    }

    .content-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 20px;
    }

    .content-card {
        background-color: #fff;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease;
    }

    .content-card:hover {
        transform: translateY(-5px);
    }

    .content-card img {
        width: 100%;
        height: 200px;
        object-fit: cover;
    }

    .content-card h3 {
        margin: 15px;
        color: #333;
    }

    .content-card p, .content-card ul {
        margin: 0 15px 15px;
        color: #555;
    }

    .content-card ul {
        list-style-type: disc;
        padding-left: 20px;
    }

    /* Footer Phrase Styles */
    .footer-phrase {
        background-color: #333; /* Black */
        color: #fff;
        text-align: center;
        padding: 15px;
        margin-top: 40px;
    }
</style>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Beginner Acoustic Guitar Guide</title>
    <link rel="stylesheet" href="styles.css">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
</head>
<body>
    <!-- Header Phrase -->
    <div class="header-phrase">
        <h1>Beginner Acoustic Guitar Guide</h1>
    </div>

    <!-- Main Content -->
    <main>
        <!-- Section 1: Choosing Your First Acoustic Guitar -->
        <section class="choosing-guitar">
            <h2>1. Choosing Your First Acoustic Guitar</h2>
            <div class="content-grid">
                <div class="content-card">
                    <img src="/Images/wallet-2292428_1280.jpg" alt="Affordable Guitars">
                    <h3>Affordable Options</h3>
                    <p>Look for reliable beginner models like <strong>Yamaha FG800</strong> or <strong>Fender FA-115</strong>.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/guitar-5836611_1280.jpg" alt="Body Shapes">
                    <h3>Body Shapes</h3>
                    <p>Choose a dreadnought for a full sound or a concert body for smaller hands.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/floor-1256804_1280.jpg" alt="Guitar Materials">
                    <h3>Guitar Materials</h3>
                    <p>Opt for guitars with solid wood tops for better tone as you improve.</p>
                </div>
            </div>
        </section>

        <!-- Section 2: Learning the Basics -->
        <section class="learning-basics">
            <h2>2. Learning the Basics</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>Basic Chords</h3>
                    <ul>
                        <li>Start with easy chords like G, C, D, and E minor.</li>
                        <li>Practice switching between chords smoothly.</li>
                    </ul>
                </div>
                <div class="content-card">
                    <h3>Strumming Patterns</h3>
                    <ul>
                        <li>Learn simple down-up strumming patterns.</li>
                        <li>Focus on keeping a steady rhythm.</li>
                    </ul>
                </div>
                <div class="content-card">
                    <h3>Tuning Your Guitar</h3>
                    <ul>
                        <li>Use a clip-on tuner for quick and accurate tuning.</li>
                        <li>Learn standard tuning (EADGBE).</li>
                    </ul>
                </div>
            </div>
        </section>

        <!-- Section 3: Essential Accessories for Beginners -->
        <section class="practice-essentials">
            <h2>3. Essential Accessories for Beginners</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>Capo</h3>
                    <p>A capo lets you easily play songs in different keys.</p>
                </div>
                <div class="content-card">
                    <h3>Guitar Picks</h3>
                    <p>Experiment with different pick thicknesses to find what works best.</p>
                </div>
                <div class="content-card">
                    <h3>Guitar Stand</h3>
                    <p>A stand keeps your guitar safe and accessible.</p>
                </div>
            </div>
        </section>

        <!-- Section 4: Recommended Beginner Acoustic Guitars -->
        <section class="recommended-guitars">
            <h2>4. Recommended Beginner Acoustic Guitars</h2>
            <div class="content-grid">
                <div class="content-card">
                    <img src="/Images/instrument-6756408_1280.jpg" alt="Yamaha FG800">
                    <h3>Yamaha FG800</h3>
                    <p>Known for its excellent sound quality and affordable price.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/guitar-490310_1280.jpg" alt="Fender FA-115">
                    <h3>Fender FA-115</h3>
                    <p>A great entry-level guitar with a balanced tone.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/guitar-756326_1280.jpg" alt="Epiphone Dove Pro">
                    <h3>Epiphone Dove Pro</h3>
                    <p>Offers a classic look with great playability and sound.</p>
                </div>
            </div>
        </section>
    </main>

    <!-- Footer Phrase -->
    <div class="footer-phrase">
        <p>Start Your Acoustic Guitar Journey Today!</p>
    </div>
</body>
</html>

        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-26 00:51:25.547 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/acousticpeg - 200 null text/html; charset=utf-8 78.3533ms
2025-01-26 00:51:25.556 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/styles.css - null null
2025-01-26 00:51:25.561 +03:00 [INF] [Request] GET /Home/styles.css

2025-01-26 00:51:25.562 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/guitar-5836611_1280.jpg - null null
2025-01-26 00:51:25.564 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/instrument-6756408_1280.jpg - null null
2025-01-26 00:51:25.564 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/wallet-2292428_1280.jpg - null null
2025-01-26 00:51:25.562 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/floor-1256804_1280.jpg - null null
2025-01-26 00:51:25.564 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/guitar-490310_1280.jpg - null null
2025-01-26 00:51:25.562 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 00:51:25.563 +03:00 [INF] [Response] 404 - 2ms

2025-01-26 00:51:25.573 +03:00 [INF] The file /Images/wallet-2292428_1280.jpg was not modified
2025-01-26 00:51:25.564 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/guitar-756326_1280.jpg - null null
2025-01-26 00:51:25.581 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/styles.css - 404 0 null 24.901ms
2025-01-26 00:51:25.588 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/Home/styles.css, Response status code: 404
2025-01-26 00:51:25.582 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/wallet-2292428_1280.jpg - 304 null image/jpeg 18.3963ms
2025-01-26 00:51:25.581 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-26 00:51:25.601 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-26 00:51:25.608 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-26 00:51:25.620 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-26 00:51:25.623 +03:00 [INF] [Response] 404 - 15ms

2025-01-26 00:51:25.625 +03:00 [INF] [Response] 404 - 5ms

2025-01-26 00:51:25.629 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 48.6149ms
2025-01-26 00:51:25.632 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 30.461ms
2025-01-26 00:51:25.638 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-26 00:51:25.642 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-26 00:51:25.598 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 36.0492ms
2025-01-26 00:51:25.626 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-26 00:51:25.708 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 81.6144ms
2025-01-26 00:51:25.712 +03:00 [INF] Sending file. Request path: '/Images/guitar-756326_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\guitar-756326_1280.jpg'
2025-01-26 00:51:25.712 +03:00 [INF] Sending file. Request path: '/Images/floor-1256804_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\floor-1256804_1280.jpg'
2025-01-26 00:51:25.712 +03:00 [INF] Sending file. Request path: '/Images/guitar-5836611_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\guitar-5836611_1280.jpg'
2025-01-26 00:51:25.712 +03:00 [INF] Sending file. Request path: '/Images/instrument-6756408_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\instrument-6756408_1280.jpg'
2025-01-26 00:51:25.712 +03:00 [INF] Sending file. Request path: '/Images/guitar-490310_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\guitar-490310_1280.jpg'
2025-01-26 00:51:25.715 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/guitar-756326_1280.jpg - 200 171111 image/jpeg 150.6456ms
2025-01-26 00:51:25.716 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/floor-1256804_1280.jpg - 200 435189 image/jpeg 154.5427ms
2025-01-26 00:51:25.717 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/guitar-5836611_1280.jpg - 200 155904 image/jpeg 155.7695ms
2025-01-26 00:51:25.718 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/instrument-6756408_1280.jpg - 200 336726 image/jpeg 154.6966ms
2025-01-26 00:51:25.719 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/guitar-490310_1280.jpg - 200 401698 image/jpeg 155.6504ms
2025-01-26 01:13:18.941 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-26 01:13:19.334 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-26 01:13:19.338 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-26 01:13:19.424 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-26 01:13:19.427 +03:00 [INF] Hosting environment: Development
2025-01-26 01:13:19.428 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-26 01:13:19.636 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-26 01:13:19.843 +03:00 [INF] [Request] GET /

2025-01-26 01:13:19.879 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-26 01:13:19.897 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-26 01:13:19.929 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-26 01:13:19.987 +03:00 [INF] Executed ViewResult - view Index executed in 64.0074ms.
2025-01-26 01:13:19.994 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 94.3169ms
2025-01-26 01:13:19.997 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-26 01:13:20.000 +03:00 [INF] [Response] 200 - 164ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Home - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
    

 <style>
    .instrument-name {
        margin-top: 10px; /* Add space between the image and the text */
        font-size: 16px; /* Adjust the text size */
        font-weight: bold; /* Bold text */
        text-align: center; /* Center the text */
    }
  </style>

<section class="category-section py-4">
    <div class="category-section">
        <h3 style="text-align: center; margin-bottom: 20px;">Start Shopping Here</h3>
        <div class="row">
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Guitars'">
                <img src="/Images/pavlo-t-5rEyYBPLN-w-unsplash.jpg" alt="Guitars" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Guitars</p>
            </div>
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Keyboards & Pianos'">
                <img src="/Images/pexels-mikhail-nilov-7570112.jpg" alt="Keyboards & Pianos" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Keyboards & Pianos</p>
            </div>
            <!-- Drums & Percussion -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Drums & Percussion'">
                <img src="/Images/pexels-reneterp-1327430.jpg" alt="Drums & Percussion" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Drums & Percussion</p>
            </div>
            <!-- Pro Audio -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Pro Audio'">
                <img src="/Images/pexels-everson-mayer-478307-1481312.jpg" alt="Pro Audio" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Pro Audio</p>
            </div>
            <!-- Band & Orchestra -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Band & Orchestra'">
                <img src="/Images/pexels-shottrotter-752535.jpg" alt="Band & Orchestra" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Band & Orchestra</p>
            </div>
            <!-- Accessories -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Accessories'">
                <img src="/Images/pexels-rombo-1510555-5280438.jpg" alt="Accessories" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Accessories</p>
            </div>
        </div>
    </div>
</section>


    <section class="membership-section text-center bg-dark text-white py-5">
    <div class="membership-section">
        <h2>Have no clue what to buy ?</h2>
        <p>Check out our professional guide to get the perfect suited instrument !</p>
        <form class="d-inline-flex mt-2" action="/Home/Guide" method="get">
            
            <button class="btn btn-danger" type="submit">professional Guide</button>
        </form>
        </div>
    </section>

    <section class="features-section py-5 bg-light">
            <div class="container">
            <div class="row text-center">
                <div class="col-md-3">
                    <img src="/Images/box.png" alt="Same Day Delivery" class="mb-sm-1" style="width: 40px; height: 40px;">
                    <h5>Same Day/Next Day Delivery</h5>
                    <p>Next day delivery on most orders in Jordan - Same day available</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/shopping-cart.png" alt="Biggest Selection" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Biggest Selection</h5>
                    <p>Largest collection of any store in MENA</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/user-talking-with-speech-bubble.png" alt="Top-notch Support" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Top-notch Support</h5>
                    <p>We are always happy to help in any way we can</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/secure-payment.png" alt="Secure Payments" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Secure Payments</h5>
                    <p>Cash on Delivery available</p>
                </div>
            </div>
            </div>
     </section>


    

    <!-- JavaScript to Toggle Forms -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.js"></script>


        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-26 01:13:20.057 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 428.7198ms
2025-01-26 01:13:20.086 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 01:13:20.086 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-26 01:13:20.086 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-26 01:13:20.086 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-26 01:13:20.101 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 16.0842ms
2025-01-26 01:13:20.125 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-26 01:13:20.128 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-26 01:13:20.137 +03:00 [INF] [Response] 404 - 11ms

2025-01-26 01:13:20.137 +03:00 [INF] [Response] 404 - 8ms

2025-01-26 01:13:20.138 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 52.4892ms
2025-01-26 01:13:20.138 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 52.9274ms
2025-01-26 01:13:20.143 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-26 01:13:20.148 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-26 01:13:20.176 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 90.0112ms
2025-01-26 01:13:23.790 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Guide? - null null
2025-01-26 01:13:23.805 +03:00 [INF] [Request] GET /Home/Guide
[QueryString] ?

2025-01-26 01:13:23.810 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Guide (MyShop)'
2025-01-26 01:13:23.816 +03:00 [INF] Route matched with {action = "Guide", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Guide(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-26 01:13:23.864 +03:00 [INF] Executing ViewResult, running view Guide.
2025-01-26 01:13:23.880 +03:00 [INF] Executed ViewResult - view Guide executed in 17.1579ms.
2025-01-26 01:13:23.883 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Guide (MyShop) in 63.4752ms
2025-01-26 01:13:23.884 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Guide (MyShop)'
2025-01-26 01:13:23.885 +03:00 [INF] [Response] 200 - 78ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Guide - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
<style>

    .instruments-section h1 {
        font-size: 2.5rem;
        font-weight: bold;
        text-align: center;
    }

    .instruments-section p {
        font-size: 1.25rem;
        color: #555;
        text-align: center;
    }

    /* Black Line */
    hr.thick-black-line {
        border: none; /* Remove default borders */
        height: 5px; /* Set the height */
        background-color: black !important; /* Force black color */
        margin: 0 auto; /* Center it horizontally */
        width: 80%; /* Adjust width */
    }


    /* Dropdown Buttons Alignment */
    .instrument-buttons {
        display: flex;
        gap: 1rem; /* Add spacing between dropdown buttons */
        padding-left: 10%; /* Align dropdown buttons with the left edge of the line */
    }

        .instrument-buttons .dropdown {
            display: inline-block;
        }

        /* Styling for Buttons */
        .instrument-buttons .btn {
            font-size: 1rem;
            font-weight: bold;
            padding: 0.5rem 1.5rem;
        }

    /* Dropdown Menu Styling */
    .dropdown-menu {
        font-size: 1rem;
        text-align: left;
    }



</style>


<section class="instruments-section text-center py-5">
    <h1 class="mb-3">Instruments</h1>
    <p class="mb-4">
        Here, the SoundWave’s expert players guide you through the intricacies of the instruments they play.
        Choose an instrument from one of the sections.
    </p>
    <hr class="thick-black-line mb-4" />

    <!-- Dropdown Buttons -->
    <div class="instrument-buttons text-start">
        <!-- Dropdown for Instruments -->
        <div class="dropdown">
            <button class="btn btn-light border text-danger dropdown-toggle"
                    type="button"
                    id="instrumentDropdown"
                    data-bs-toggle="dropdown"
                    aria-expanded="false">
                Instruments
            </button>
            <ul class="dropdown-menu" aria-labelledby="instrumentDropdown">
                <li><a class="dropdown-item instrument-item" href="#">Guitars</a></li>
                <li><a class="dropdown-item instrument-item" href="#">Drums</a></li>
                <li><a class="dropdown-item instrument-item" href="#">Orchestra</a></li>
            </ul>
        </div>

        <!-- Dropdown for Level -->
        <div class="dropdown">
            <button class="btn btn-light border text-danger dropdown-toggle"
                    type="button"
                    id="levelDropdown"
                    data-bs-toggle="dropdown"
                    aria-expanded="false">
                Level
            </button>
            <ul class="dropdown-menu" aria-labelledby="levelDropdown">
                <li><a class="dropdown-item level-item" href="#">Beginner</a></li>
                <li><a class="dropdown-item level-item" href="#">Professional</a></li>
            </ul>
        </div>
    </div>
    
    <div id="card-container" class="d-flex justify-content-center gap-4 mt-5"></div>

</section>

<script>
    const instrumentDropdown = document.querySelectorAll('.instrument-item');
    const levelDropdown = document.querySelectorAll('.level-item');
    const cardContainer = document.getElementById('card-container');

    let selectedInstrument = '';
    let selectedLevel = '';

    const guitarsData = [
        {
            img: '/Images/guitar-4750599_1280.jpg',
            title: 'Acoustic Guitar',
            link: '#'
        },
        {
            img: '/Images/electric-guitar-7815026_1280.jpg',
            title: 'Electric Guitar',
            link: '#'
        },
        {
            img: '/Images/bass-guitar-913092_1280.jpg',
            title: 'Bass Guitar',
            link: '#'
        }
    ];

    const DrumsData = [
        {
            img: '/Images/african-2771092_1280.jpg',
            title: 'Hand Drums',
            link: '#'
        },
        {
            img: '/Images/electronic-drum-pad-5854409_1280.jpg',
            title: 'Electronic Drums',
            link: '#'
        },
        {
            img: '/Images/drum-set-1839383_1280.jpg',
            title: 'Acoustic Drums',
            link: '#'
        }
    ];

    const OrchestraData = [
        {
            img: '/Images/bowed-instrument-1853324_1280.jpg',
            title: 'Strings',
            link: '#'
        },
        {
            img: '/Images/saxophone-3246650_1280.jpg',
            title: 'Brass',
            link: '#'
        },
        
    ];

    instrumentDropdown.forEach(item => {
        item.addEventListener('click', function () {
            selectedInstrument = this.textContent.trim();
            checkSelection();
        });
    });

    levelDropdown.forEach(item => {
        item.addEventListener('click', function () {
            selectedLevel = this.textContent.trim();
            checkSelection();
        });
    });

    function checkSelection() {
        if (selectedInstrument === 'Guitars' && selectedLevel === 'Beginner') {
            renderCards(guitarsData);
        } 
        else if (selectedInstrument === 'Guitars' && selectedLevel === 'Professional') {
            renderCards(guitarsData);
        }
        else if (selectedInstrument === 'Drums' && (selectedLevel === 'Professional' || selectedLevel === 'Beginner')) {
            renderCards(DrumsData);

        }
        else if (selectedInstrument === 'Orchestra' && (selectedLevel === 'Professional' || selectedLevel === 'Beginner')) {
            renderCards(OrchestraData);

        }
        else {
            cardContainer.innerHTML = ''; // Clear cards
        }
    }

    function renderCards(data) {
        cardContainer.innerHTML = ''; // Clear previous cards

        data.forEach(item => {
            if (item.title.toLowerCase() === 'electric guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'electricguid'; // Set link to electricguid for Beginners
                } else {
                    item.link = 'proelectric'; // Set link to proelectric for other levels
                }
            } else if (item.title.toLowerCase() === 'acoustic guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'acousticpeg'; // Set link to acousticpeg for Beginners
                } else {
                    item.link = 'acousticpro'; // Set link to acousticpro for other levels
                }
            } else if (item.title.toLowerCase() === 'bass guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'bassbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'basspro'; // Set link to basspro for other levels
                }
            } else {
                // Default case if no matches found
                item.link = 'default'; // Default link or other fallback
            }


            const card = document.createElement('div');
            card.classList.add('card');
            card.style.width = '22rem';
            card.style.textAlign = 'center';
            card.style.border = '1px solid #ddd';
            card.style.boxShadow = '0 4px 6px rgba(0, 0, 0, 0.1)';
            card.style.borderRadius = '8px';

            card.innerHTML = `
                    <img src="${item.img}" alt="${item.title}" style="width:100%;border-bottom:1px solid #ddd;">
                    <h5 style="font-size:1.25rem;font-weight:bold;margin:1rem 0;">${item.title}</h5>
                    <a href="${item.link}" class="btn btn-danger" style="margin-bottom:1rem;font-weight:bold;">Read more</a>
                `;
            cardContainer.appendChild(card);
            
            
        });
    }
</script>


<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-26 01:13:23.937 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Guide? - 200 null text/html; charset=utf-8 147.2998ms
2025-01-26 01:13:23.954 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-26 01:13:23.954 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 01:13:23.954 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-26 01:13:23.954 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-26 01:13:23.957 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-26 01:13:23.965 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-26 01:13:23.968 +03:00 [INF] [Response] 404 - 10ms

2025-01-26 01:13:23.962 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 8.0256ms
2025-01-26 01:13:23.971 +03:00 [INF] [Response] 404 - 6ms

2025-01-26 01:13:23.972 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 17.7106ms
2025-01-26 01:13:23.980 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 26.3877ms
2025-01-26 01:13:23.986 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-26 01:13:23.993 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-26 01:13:24.000 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 46.2174ms
2025-01-26 01:13:29.914 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/acousticpro - null null
2025-01-26 01:13:29.923 +03:00 [INF] [Request] GET /Home/acousticpro

2025-01-26 01:13:29.929 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.acousticpro (MyShop)'
2025-01-26 01:13:29.931 +03:00 [INF] Route matched with {action = "acousticpro", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult acousticpro(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-26 01:13:29.948 +03:00 [INF] Executing ViewResult, running view acousticpro.
2025-01-26 01:13:29.971 +03:00 [INF] Executed ViewResult - view acousticpro executed in 37.9833ms.
2025-01-26 01:13:29.976 +03:00 [INF] Executed action MyShop.Controllers.HomeController.acousticpro (MyShop) in 43.1013ms
2025-01-26 01:13:29.978 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.acousticpro (MyShop)'
2025-01-26 01:13:29.979 +03:00 [INF] [Response] 200 - 56ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Professional Acoustic Guitar Guide - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
<style>
    /* General Styles */
    body {
        font-family: 'Roboto', sans-serif;
        margin: 0;
        padding: 0;
        background-color: #f4f4f4;
        color: #333;
        line-height: 1.6;
    }

    /* Header Phrase Styles */
    .header-phrase {
        background-color: #333; /* Black */
        color: #fff;
        padding: 20px;
        text-align: center;
    }

    .header-phrase h1 {
        margin: 0;
        font-size: 2.5rem;
    }

    /* Main Content Styles */
    main {
        padding: 20px;
        max-width: 1200px;
        margin: 0 auto;
    }

    section {
        margin-bottom: 40px;
    }

    h2 {
        color: #d32f2f; /* Red */
        border-bottom: 2px solid #d32f2f; /* Red */
        padding-bottom: 10px;
        margin-bottom: 20px;
    }

    .content-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 20px;
    }

    .content-card {
        background-color: #fff;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease;
    }

    .content-card:hover {
        transform: translateY(-5px);
    }

    .content-card img {
        width: 100%;
        height: 200px;
        object-fit: cover;
    }

    .content-card h3 {
        margin: 15px;
        color: #333;
    }

    .content-card p, .content-card ul {
        margin: 0 15px 15px;
        color: #555;
    }

    .content-card ul {
        list-style-type: disc;
        padding-left: 20px;
    }

    /* Footer Phrase Styles */
    .footer-phrase {
        background-color: #333; /* Black */
        color: #fff;
        text-align: center;
        padding: 15px;
        margin-top: 40px;
    }
</style>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Professional Acoustic Guitar Guide</title>
    <link rel="stylesheet" href="styles.css">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
</head>
<body>
    <!-- Header Phrase -->
    <div class="header-phrase">
        <h1>Professional Acoustic Guitar Guide</h1>
    </div>

    <!-- Main Content -->
    <main>
        <!-- Section 1: Selecting a High-End Acoustic Guitar -->
        <section class="choosing-guitar">
            <h2>1. Selecting a High-End Acoustic Guitar</h2>
            <div class="content-grid">
                <div class="content-card">
                    <img src="/Images/stars-1128772_1280.jpg" alt="Premium Guitars">
                    <h3>Premium Materials</h3>
                    <p>Choose guitars with solid spruce, cedar tops, and rosewood or mahogany backs for superior sound.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/guitar-5837061_1280.jpg" alt="Cutaway Design">
                    <h3>Cutaway Design</h3>
                    <p>Consider cutaway bodies for easier access to higher frets during advanced play.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/luthier-5132460_1280.jpg" alt="Tonewood Selection">
                    <h3>Tonewood Selection</h3>
                    <p>Invest in guitars with unique tonewoods like koa or maple for a distinct tonal character.</p>
                </div>
            </div>
        </section>

        <!-- Section 2: Advanced Playing Techniques -->
        <section class="advanced-techniques">
            <h2>2. Advanced Playing Techniques</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>Fingerpicking</h3>
                    <ul>
                        <li>Master complex fingerpicking patterns for genres like classical and folk.</li>
                        <li>Experiment with thumb picks for better control.</li>
                    </ul>
                </div>
                <div class="content-card">
                    <h3>Slide Guitar</h3>
                    <ul>
                        <li>Use a glass or metal slide for unique blues tones.</li>
                        <li>Practice alternate tunings like open G or D for slide playing.</li>
                    </ul>
                </div>
                <div class="content-card">
                    <h3>Harmonics</h3>
                    <ul>
                        <li>Learn natural and artificial harmonics to add texture to your music.</li>
                        <li>Incorporate harmonics into fingerstyle compositions.</li>
                    </ul>
                </div>
            </div>
        </section>

        <!-- Section 3: Professional Accessories -->
        <section class="professional-accessories">
            <h2>3. Professional Accessories</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>High-End Capo</h3>
                    <p>Invest in a professional-grade capo for smooth and precise key changes.</p>
                </div>
                <div class="content-card">
                    <h3>Custom Picks</h3>
                    <p>Experiment with picks made from exotic materials like tortoiseshell or carbon fiber.</p>
                </div>
                <div class="content-card">
                    <h3>Acoustic Preamp</h3>
                    <p>Enhance your live performances with a high-quality preamp for rich amplified sound.</p>
                </div>
            </div>
        </section>

        <!-- Section 4: Recommended Professional Acoustic Guitars -->
        <section class="recommended-guitars">
            <h2>4. Recommended Professional Acoustic Guitars</h2>
            <div class="content-grid">
                <div class="content-card">
                    <img src="/Images/guitar-7137186_1280.jpg" alt="Taylor 814ce">
                    <h3>Taylor 814ce</h3>
                    <p>Known for its exceptional clarity, playability, and dynamic range.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/guitar-1130593_1280.jpg" alt="Martin D-28">
                    <h3>Martin D-28</h3>
                    <p>A legendary choice for professionals seeking rich, balanced tones.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/guitar-player-6231910_1280.jpg" alt="Gibson J-200">
                    <h3>Gibson J-200</h3>
                    <p>The iconic "King of the Flat-Tops," ideal for powerful strumming and projection.</p>
                </div>
            </div>
        </section>
    </main>

    <!-- Footer Phrase -->
    <div class="footer-phrase">
        <p>Elevate Your Acoustic Guitar Experience!</p>
    </div>
</body>
</html>

        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-26 01:13:30.027 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/acousticpro - 200 null text/html; charset=utf-8 112.7365ms
2025-01-26 01:13:30.038 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/styles.css - null null
2025-01-26 01:13:30.039 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/stars-1128772_1280.jpg - null null
2025-01-26 01:13:30.044 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/guitar-player-6231910_1280.jpg - null null
2025-01-26 01:13:30.043 +03:00 [INF] [Request] GET /Home/styles.css

2025-01-26 01:13:30.043 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/luthier-5132460_1280.jpg - null null
2025-01-26 01:13:30.044 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/guitar-1130593_1280.jpg - null null
2025-01-26 01:13:30.041 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 01:13:30.041 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/guitar-5837061_1280.jpg - null null
2025-01-26 01:13:30.052 +03:00 [INF] [Response] 404 - 9ms

2025-01-26 01:13:30.043 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/guitar-7137186_1280.jpg - null null
2025-01-26 01:13:30.050 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-26 01:13:30.063 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-26 01:13:30.066 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/styles.css - 404 0 null 28.6804ms
2025-01-26 01:13:30.075 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-26 01:13:30.072 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-26 01:13:30.081 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/Home/styles.css, Response status code: 404
2025-01-26 01:13:30.082 +03:00 [INF] [Response] 404 - 9ms

2025-01-26 01:13:30.083 +03:00 [INF] [Response] 404 - 11ms

2025-01-26 01:13:30.087 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 24.212ms
2025-01-26 01:13:30.096 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-26 01:13:30.096 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 55.4327ms
2025-01-26 01:13:30.097 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-26 01:13:30.089 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 38.6009ms
2025-01-26 01:13:30.122 +03:00 [INF] Sending file. Request path: '/Images/guitar-7137186_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\guitar-7137186_1280.jpg'
2025-01-26 01:13:30.131 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-26 01:13:30.134 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/guitar-7137186_1280.jpg - 200 53707 image/jpeg 91.022ms
2025-01-26 01:13:30.144 +03:00 [INF] Sending file. Request path: '/Images/guitar-5837061_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\guitar-5837061_1280.jpg'
2025-01-26 01:13:30.148 +03:00 [INF] Sending file. Request path: '/Images/guitar-1130593_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\guitar-1130593_1280.jpg'
2025-01-26 01:13:30.150 +03:00 [INF] Sending file. Request path: '/Images/luthier-5132460_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\luthier-5132460_1280.jpg'
2025-01-26 01:13:30.153 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/guitar-1130593_1280.jpg - 200 329085 image/jpeg 108.4867ms
2025-01-26 01:13:30.155 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/luthier-5132460_1280.jpg - 200 317504 image/jpeg 111.6591ms
2025-01-26 01:13:30.151 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/guitar-5837061_1280.jpg - 200 268855 image/jpeg 111.0006ms
2025-01-26 01:13:30.149 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 53.0269ms
2025-01-26 01:13:30.144 +03:00 [INF] Sending file. Request path: '/Images/guitar-player-6231910_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\guitar-player-6231910_1280.jpg'
2025-01-26 01:13:30.176 +03:00 [INF] Sending file. Request path: '/Images/stars-1128772_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\stars-1128772_1280.jpg'
2025-01-26 01:13:30.183 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/guitar-player-6231910_1280.jpg - 200 267715 image/jpeg 138.3251ms
2025-01-26 01:13:30.184 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/stars-1128772_1280.jpg - 200 580575 image/jpeg 145.2788ms
2025-01-26 02:25:11.110 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-26 02:25:11.414 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-26 02:25:11.416 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-26 02:25:11.490 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-26 02:25:11.493 +03:00 [INF] Hosting environment: Development
2025-01-26 02:25:11.495 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-26 02:25:12.082 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-26 02:25:12.307 +03:00 [INF] [Request] GET /

2025-01-26 02:25:12.350 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-26 02:25:12.370 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-26 02:25:12.397 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-26 02:25:12.459 +03:00 [INF] Executed ViewResult - view Index executed in 66.42ms.
2025-01-26 02:25:12.465 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 92.781ms
2025-01-26 02:25:12.467 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-26 02:25:12.469 +03:00 [INF] [Response] 200 - 171ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Home - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
    

 <style>
    .instrument-name {
        margin-top: 10px; /* Add space between the image and the text */
        font-size: 16px; /* Adjust the text size */
        font-weight: bold; /* Bold text */
        text-align: center; /* Center the text */
    }
  </style>

<section class="category-section py-4">
    <div class="category-section">
        <h3 style="text-align: center; margin-bottom: 20px;">Start Shopping Here</h3>
        <div class="row">
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Guitars'">
                <img src="/Images/pavlo-t-5rEyYBPLN-w-unsplash.jpg" alt="Guitars" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Guitars</p>
            </div>
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Keyboards & Pianos'">
                <img src="/Images/pexels-mikhail-nilov-7570112.jpg" alt="Keyboards & Pianos" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Keyboards & Pianos</p>
            </div>
            <!-- Drums & Percussion -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Drums & Percussion'">
                <img src="/Images/pexels-reneterp-1327430.jpg" alt="Drums & Percussion" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Drums & Percussion</p>
            </div>
            <!-- Pro Audio -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Pro Audio'">
                <img src="/Images/pexels-everson-mayer-478307-1481312.jpg" alt="Pro Audio" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Pro Audio</p>
            </div>
            <!-- Band & Orchestra -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Band & Orchestra'">
                <img src="/Images/pexels-shottrotter-752535.jpg" alt="Band & Orchestra" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Band & Orchestra</p>
            </div>
            <!-- Accessories -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Accessories'">
                <img src="/Images/pexels-rombo-1510555-5280438.jpg" alt="Accessories" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Accessories</p>
            </div>
        </div>
    </div>
</section>


    <section class="membership-section text-center bg-dark text-white py-5">
    <div class="membership-section">
        <h2>Have no clue what to buy ?</h2>
        <p>Check out our professional guide to get the perfect suited instrument !</p>
        <form class="d-inline-flex mt-2" action="/Home/Guide" method="get">
            
            <button class="btn btn-danger" type="submit">professional Guide</button>
        </form>
        </div>
    </section>

    <section class="features-section py-5 bg-light">
            <div class="container">
            <div class="row text-center">
                <div class="col-md-3">
                    <img src="/Images/box.png" alt="Same Day Delivery" class="mb-sm-1" style="width: 40px; height: 40px;">
                    <h5>Same Day/Next Day Delivery</h5>
                    <p>Next day delivery on most orders in Jordan - Same day available</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/shopping-cart.png" alt="Biggest Selection" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Biggest Selection</h5>
                    <p>Largest collection of any store in MENA</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/user-talking-with-speech-bubble.png" alt="Top-notch Support" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Top-notch Support</h5>
                    <p>We are always happy to help in any way we can</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/secure-payment.png" alt="Secure Payments" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Secure Payments</h5>
                    <p>Cash on Delivery available</p>
                </div>
            </div>
            </div>
     </section>


    

    <!-- JavaScript to Toggle Forms -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.js"></script>


        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-26 02:25:12.546 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 474.1353ms
2025-01-26 02:25:12.565 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 02:25:12.565 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-26 02:25:12.565 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-26 02:25:12.568 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-26 02:25:12.615 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-26 02:25:12.617 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-26 02:25:12.617 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 52.791ms
2025-01-26 02:25:12.623 +03:00 [INF] [Response] 404 - 14ms

2025-01-26 02:25:12.623 +03:00 [INF] [Response] 404 - 6ms

2025-01-26 02:25:12.627 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 62.3949ms
2025-01-26 02:25:12.630 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 64.7711ms
2025-01-26 02:25:12.635 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-26 02:25:12.637 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-26 02:25:12.672 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 103.2645ms
2025-01-26 02:25:16.189 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Guide? - null null
2025-01-26 02:25:16.200 +03:00 [INF] [Request] GET /Home/Guide
[QueryString] ?

2025-01-26 02:25:16.204 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Guide (MyShop)'
2025-01-26 02:25:16.206 +03:00 [INF] Route matched with {action = "Guide", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Guide(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-26 02:25:16.269 +03:00 [INF] Executing ViewResult, running view Guide.
2025-01-26 02:25:16.282 +03:00 [INF] Executed ViewResult - view Guide executed in 13.9082ms.
2025-01-26 02:25:16.285 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Guide (MyShop) in 76.992ms
2025-01-26 02:25:16.286 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Guide (MyShop)'
2025-01-26 02:25:16.288 +03:00 [INF] [Response] 200 - 86ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Guide - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
<style>

    .instruments-section h1 {
        font-size: 2.5rem;
        font-weight: bold;
        text-align: center;
    }

    .instruments-section p {
        font-size: 1.25rem;
        color: #555;
        text-align: center;
    }

    /* Black Line */
    hr.thick-black-line {
        border: none; /* Remove default borders */
        height: 5px; /* Set the height */
        background-color: black !important; /* Force black color */
        margin: 0 auto; /* Center it horizontally */
        width: 80%; /* Adjust width */
    }


    /* Dropdown Buttons Alignment */
    .instrument-buttons {
        display: flex;
        gap: 1rem; /* Add spacing between dropdown buttons */
        padding-left: 10%; /* Align dropdown buttons with the left edge of the line */
    }

        .instrument-buttons .dropdown {
            display: inline-block;
        }

        /* Styling for Buttons */
        .instrument-buttons .btn {
            font-size: 1rem;
            font-weight: bold;
            padding: 0.5rem 1.5rem;
        }

    /* Dropdown Menu Styling */
    .dropdown-menu {
        font-size: 1rem;
        text-align: left;
    }



</style>


<section class="instruments-section text-center py-5">
    <h1 class="mb-3">Instruments</h1>
    <p class="mb-4">
        Here, the SoundWave’s expert players guide you through the intricacies of the instruments they play.
        Choose an instrument from one of the sections.
    </p>
    <hr class="thick-black-line mb-4" />

    <!-- Dropdown Buttons -->
    <div class="instrument-buttons text-start">
        <!-- Dropdown for Instruments -->
        <div class="dropdown">
            <button class="btn btn-light border text-danger dropdown-toggle"
                    type="button"
                    id="instrumentDropdown"
                    data-bs-toggle="dropdown"
                    aria-expanded="false">
                Instruments
            </button>
            <ul class="dropdown-menu" aria-labelledby="instrumentDropdown">
                <li><a class="dropdown-item instrument-item" href="#">Guitars</a></li>
                <li><a class="dropdown-item instrument-item" href="#">Drums</a></li>
                <li><a class="dropdown-item instrument-item" href="#">Orchestra</a></li>
            </ul>
        </div>

        <!-- Dropdown for Level -->
        <div class="dropdown">
            <button class="btn btn-light border text-danger dropdown-toggle"
                    type="button"
                    id="levelDropdown"
                    data-bs-toggle="dropdown"
                    aria-expanded="false">
                Level
            </button>
            <ul class="dropdown-menu" aria-labelledby="levelDropdown">
                <li><a class="dropdown-item level-item" href="#">Beginner</a></li>
                <li><a class="dropdown-item level-item" href="#">Professional</a></li>
            </ul>
        </div>
    </div>
    
    <div id="card-container" class="d-flex justify-content-center gap-4 mt-5"></div>

</section>

<script>
    const instrumentDropdown = document.querySelectorAll('.instrument-item');
    const levelDropdown = document.querySelectorAll('.level-item');
    const cardContainer = document.getElementById('card-container');

    let selectedInstrument = '';
    let selectedLevel = '';

    const guitarsData = [
        {
            img: '/Images/guitar-4750599_1280.jpg',
            title: 'Acoustic Guitar',
            link: '#'
        },
        {
            img: '/Images/electric-guitar-7815026_1280.jpg',
            title: 'Electric Guitar',
            link: '#'
        },
        {
            img: '/Images/bass-guitar-913092_1280.jpg',
            title: 'Bass Guitar',
            link: '#'
        }
    ];

    const DrumsData = [
        {
            img: '/Images/african-2771092_1280.jpg',
            title: 'Hand Drums',
            link: '#'
        },
        {
            img: '/Images/electronic-drum-pad-5854409_1280.jpg',
            title: 'Electronic Drums',
            link: '#'
        },
        {
            img: '/Images/drum-set-1839383_1280.jpg',
            title: 'Acoustic Drums',
            link: '#'
        }
    ];

    const OrchestraData = [
        {
            img: '/Images/bowed-instrument-1853324_1280.jpg',
            title: 'Strings',
            link: '#'
        },
        {
            img: '/Images/saxophone-3246650_1280.jpg',
            title: 'Brass',
            link: '#'
        },
        
    ];

    instrumentDropdown.forEach(item => {
        item.addEventListener('click', function () {
            selectedInstrument = this.textContent.trim();
            checkSelection();
        });
    });

    levelDropdown.forEach(item => {
        item.addEventListener('click', function () {
            selectedLevel = this.textContent.trim();
            checkSelection();
        });
    });

    function checkSelection() {
        if (selectedInstrument === 'Guitars' && selectedLevel === 'Beginner') {
            renderCards(guitarsData);
        } 
        else if (selectedInstrument === 'Guitars' && selectedLevel === 'Professional') {
            renderCards(guitarsData);
        }
        else if (selectedInstrument === 'Drums' && (selectedLevel === 'Professional' || selectedLevel === 'Beginner')) {
            renderCards(DrumsData);

        }
        else if (selectedInstrument === 'Orchestra' && (selectedLevel === 'Professional' || selectedLevel === 'Beginner')) {
            renderCards(OrchestraData);

        }
        else {
            cardContainer.innerHTML = ''; // Clear cards
        }
    }

    function renderCards(data) {
        cardContainer.innerHTML = ''; // Clear previous cards

        data.forEach(item => {
            if (item.title.toLowerCase() === 'electric guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'electricguid'; // Set link to electricguid for Beginners
                } else {
                    item.link = 'proelectric'; // Set link to proelectric for other levels
                }
            } else if (item.title.toLowerCase() === 'acoustic guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'acousticpeg'; // Set link to acousticpeg for Beginners
                } else {
                    item.link = 'acousticpro'; // Set link to acousticpro for other levels
                }
            } else if (item.title.toLowerCase() === 'bass guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'bassbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'basspro'; // Set link to basspro for other levels
                }
            } else {
                // Default case if no matches found
                item.link = 'default'; // Default link or other fallback
            }


            const card = document.createElement('div');
            card.classList.add('card');
            card.style.width = '22rem';
            card.style.textAlign = 'center';
            card.style.border = '1px solid #ddd';
            card.style.boxShadow = '0 4px 6px rgba(0, 0, 0, 0.1)';
            card.style.borderRadius = '8px';

            card.innerHTML = `
                    <img src="${item.img}" alt="${item.title}" style="width:100%;border-bottom:1px solid #ddd;">
                    <h5 style="font-size:1.25rem;font-weight:bold;margin:1rem 0;">${item.title}</h5>
                    <a href="${item.link}" class="btn btn-danger" style="margin-bottom:1rem;font-weight:bold;">Read more</a>
                `;
            cardContainer.appendChild(card);
            
            
        });
    }
</script>


<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-26 02:25:16.385 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Guide? - 200 null text/html; charset=utf-8 196.2029ms
2025-01-26 02:25:16.434 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-26 02:25:16.434 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 02:25:16.435 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-26 02:25:16.442 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-26 02:25:16.435 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-26 02:25:16.449 +03:00 [INF] [Response] 404 - 7ms

2025-01-26 02:25:16.447 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 11.0678ms
2025-01-26 02:25:16.453 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 18.4606ms
2025-01-26 02:25:16.453 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-26 02:25:16.465 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-26 02:25:16.465 +03:00 [INF] [Response] 404 - 12ms

2025-01-26 02:25:16.475 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 39.5143ms
2025-01-26 02:25:16.482 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 47.3252ms
2025-01-26 02:25:16.483 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-26 02:25:22.820 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/drum-set-1839383_1280.jpg - null null
2025-01-26 02:25:22.820 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/african-2771092_1280.jpg - null null
2025-01-26 02:25:22.821 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/electronic-drum-pad-5854409_1280.jpg - null null
2025-01-26 02:25:22.889 +03:00 [INF] Sending file. Request path: '/Images/african-2771092_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\african-2771092_1280.jpg'
2025-01-26 02:25:22.889 +03:00 [INF] Sending file. Request path: '/Images/drum-set-1839383_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\drum-set-1839383_1280.jpg'
2025-01-26 02:25:22.889 +03:00 [INF] Sending file. Request path: '/Images/electronic-drum-pad-5854409_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\electronic-drum-pad-5854409_1280.jpg'
2025-01-26 02:25:22.892 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/african-2771092_1280.jpg - 200 218601 image/jpeg 72.6135ms
2025-01-26 02:25:22.894 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/drum-set-1839383_1280.jpg - 200 231840 image/jpeg 74.1709ms
2025-01-26 02:25:22.895 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/electronic-drum-pad-5854409_1280.jpg - 200 225961 image/jpeg 75.8997ms
2025-01-26 02:36:02.169 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-26 02:36:02.515 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-26 02:36:02.519 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-26 02:36:02.600 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-26 02:36:02.604 +03:00 [INF] Hosting environment: Development
2025-01-26 02:36:02.605 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-26 02:36:03.319 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-26 02:36:03.631 +03:00 [INF] [Request] GET /

2025-01-26 02:36:03.701 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-26 02:36:03.736 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-26 02:36:03.768 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-26 02:36:03.849 +03:00 [INF] Executed ViewResult - view Index executed in 79.4946ms.
2025-01-26 02:36:03.853 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 114.5204ms
2025-01-26 02:36:03.854 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-26 02:36:03.859 +03:00 [INF] [Response] 200 - 235ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Home - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
    

 <style>
    .instrument-name {
        margin-top: 10px; /* Add space between the image and the text */
        font-size: 16px; /* Adjust the text size */
        font-weight: bold; /* Bold text */
        text-align: center; /* Center the text */
    }
  </style>

<section class="category-section py-4">
    <div class="category-section">
        <h3 style="text-align: center; margin-bottom: 20px;">Start Shopping Here</h3>
        <div class="row">
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Guitars'">
                <img src="/Images/pavlo-t-5rEyYBPLN-w-unsplash.jpg" alt="Guitars" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Guitars</p>
            </div>
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Keyboards & Pianos'">
                <img src="/Images/pexels-mikhail-nilov-7570112.jpg" alt="Keyboards & Pianos" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Keyboards & Pianos</p>
            </div>
            <!-- Drums & Percussion -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Drums & Percussion'">
                <img src="/Images/pexels-reneterp-1327430.jpg" alt="Drums & Percussion" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Drums & Percussion</p>
            </div>
            <!-- Pro Audio -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Pro Audio'">
                <img src="/Images/pexels-everson-mayer-478307-1481312.jpg" alt="Pro Audio" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Pro Audio</p>
            </div>
            <!-- Band & Orchestra -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Band & Orchestra'">
                <img src="/Images/pexels-shottrotter-752535.jpg" alt="Band & Orchestra" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Band & Orchestra</p>
            </div>
            <!-- Accessories -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Accessories'">
                <img src="/Images/pexels-rombo-1510555-5280438.jpg" alt="Accessories" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Accessories</p>
            </div>
        </div>
    </div>
</section>


    <section class="membership-section text-center bg-dark text-white py-5">
    <div class="membership-section">
        <h2>Have no clue what to buy ?</h2>
        <p>Check out our professional guide to get the perfect suited instrument !</p>
        <form class="d-inline-flex mt-2" action="/Home/Guide" method="get">
            
            <button class="btn btn-danger" type="submit">professional Guide</button>
        </form>
        </div>
    </section>

    <section class="features-section py-5 bg-light">
            <div class="container">
            <div class="row text-center">
                <div class="col-md-3">
                    <img src="/Images/box.png" alt="Same Day Delivery" class="mb-sm-1" style="width: 40px; height: 40px;">
                    <h5>Same Day/Next Day Delivery</h5>
                    <p>Next day delivery on most orders in Jordan - Same day available</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/shopping-cart.png" alt="Biggest Selection" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Biggest Selection</h5>
                    <p>Largest collection of any store in MENA</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/user-talking-with-speech-bubble.png" alt="Top-notch Support" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Top-notch Support</h5>
                    <p>We are always happy to help in any way we can</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/secure-payment.png" alt="Secure Payments" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Secure Payments</h5>
                    <p>Cash on Delivery available</p>
                </div>
            </div>
            </div>
     </section>


    

    <!-- JavaScript to Toggle Forms -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.js"></script>


        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-26 02:36:03.939 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 628.0186ms
2025-01-26 02:36:03.970 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-26 02:36:03.970 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-26 02:36:03.981 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-26 02:36:03.970 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 02:36:04.022 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-26 02:36:04.029 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-26 02:36:04.053 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 83.3388ms
2025-01-26 02:36:04.055 +03:00 [INF] [Response] 404 - 25ms

2025-01-26 02:36:04.058 +03:00 [INF] [Response] 404 - 34ms

2025-01-26 02:36:04.076 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 106.1347ms
2025-01-26 02:36:04.078 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 108.8511ms
2025-01-26 02:36:04.085 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-26 02:36:04.089 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-26 02:36:04.116 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 140.6243ms
2025-01-26 02:37:07.278 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-26 02:37:07.579 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-26 02:37:07.583 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-26 02:37:07.658 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-26 02:37:07.660 +03:00 [INF] Hosting environment: Development
2025-01-26 02:37:07.661 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-26 02:37:08.346 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-26 02:37:08.616 +03:00 [INF] [Request] GET /

2025-01-26 02:37:08.666 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-26 02:37:08.699 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-26 02:37:08.738 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-26 02:37:08.793 +03:00 [INF] Executed ViewResult - view Index executed in 59.8434ms.
2025-01-26 02:37:08.797 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 92.2854ms
2025-01-26 02:37:08.798 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-26 02:37:08.800 +03:00 [INF] [Response] 200 - 191ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Home - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
    

 <style>
    .instrument-name {
        margin-top: 10px; /* Add space between the image and the text */
        font-size: 16px; /* Adjust the text size */
        font-weight: bold; /* Bold text */
        text-align: center; /* Center the text */
    }
  </style>

<section class="category-section py-4">
    <div class="category-section">
        <h3 style="text-align: center; margin-bottom: 20px;">Start Shopping Here</h3>
        <div class="row">
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Guitars'">
                <img src="/Images/pavlo-t-5rEyYBPLN-w-unsplash.jpg" alt="Guitars" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Guitars</p>
            </div>
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Keyboards & Pianos'">
                <img src="/Images/pexels-mikhail-nilov-7570112.jpg" alt="Keyboards & Pianos" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Keyboards & Pianos</p>
            </div>
            <!-- Drums & Percussion -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Drums & Percussion'">
                <img src="/Images/pexels-reneterp-1327430.jpg" alt="Drums & Percussion" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Drums & Percussion</p>
            </div>
            <!-- Pro Audio -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Pro Audio'">
                <img src="/Images/pexels-everson-mayer-478307-1481312.jpg" alt="Pro Audio" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Pro Audio</p>
            </div>
            <!-- Band & Orchestra -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Band & Orchestra'">
                <img src="/Images/pexels-shottrotter-752535.jpg" alt="Band & Orchestra" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Band & Orchestra</p>
            </div>
            <!-- Accessories -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Accessories'">
                <img src="/Images/pexels-rombo-1510555-5280438.jpg" alt="Accessories" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Accessories</p>
            </div>
        </div>
    </div>
</section>


    <section class="membership-section text-center bg-dark text-white py-5">
    <div class="membership-section">
        <h2>Have no clue what to buy ?</h2>
        <p>Check out our professional guide to get the perfect suited instrument !</p>
        <form class="d-inline-flex mt-2" action="/Home/Guide" method="get">
            
            <button class="btn btn-danger" type="submit">professional Guide</button>
        </form>
        </div>
    </section>

    <section class="features-section py-5 bg-light">
            <div class="container">
            <div class="row text-center">
                <div class="col-md-3">
                    <img src="/Images/box.png" alt="Same Day Delivery" class="mb-sm-1" style="width: 40px; height: 40px;">
                    <h5>Same Day/Next Day Delivery</h5>
                    <p>Next day delivery on most orders in Jordan - Same day available</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/shopping-cart.png" alt="Biggest Selection" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Biggest Selection</h5>
                    <p>Largest collection of any store in MENA</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/user-talking-with-speech-bubble.png" alt="Top-notch Support" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Top-notch Support</h5>
                    <p>We are always happy to help in any way we can</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/secure-payment.png" alt="Secure Payments" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Secure Payments</h5>
                    <p>Cash on Delivery available</p>
                </div>
            </div>
            </div>
     </section>


    

    <!-- JavaScript to Toggle Forms -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.js"></script>


        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-26 02:37:08.896 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 559.8021ms
2025-01-26 02:37:08.916 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-26 02:37:08.916 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 02:37:08.919 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-26 02:37:08.963 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-26 02:37:08.916 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-26 02:37:08.990 +03:00 [INF] [Response] 404 - 26ms

2025-01-26 02:37:08.982 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 65.5618ms
2025-01-26 02:37:09.015 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 100.1577ms
2025-01-26 02:37:09.020 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-26 02:37:09.030 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-26 02:37:09.034 +03:00 [INF] [Response] 404 - 14ms

2025-01-26 02:37:09.049 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 134.623ms
2025-01-26 02:37:09.065 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-26 02:37:09.097 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 178.5259ms
2025-01-26 02:37:11.427 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Guide? - null null
2025-01-26 02:37:11.442 +03:00 [INF] [Request] GET /Home/Guide
[QueryString] ?

2025-01-26 02:37:11.444 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Guide (MyShop)'
2025-01-26 02:37:11.447 +03:00 [INF] Route matched with {action = "Guide", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Guide(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-26 02:37:11.499 +03:00 [INF] Executing ViewResult, running view Guide.
2025-01-26 02:37:11.509 +03:00 [INF] Executed ViewResult - view Guide executed in 10.1847ms.
2025-01-26 02:37:11.511 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Guide (MyShop) in 62.5757ms
2025-01-26 02:37:11.512 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Guide (MyShop)'
2025-01-26 02:37:11.513 +03:00 [INF] [Response] 200 - 70ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Guide - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
<style>

    .instruments-section h1 {
        font-size: 2.5rem;
        font-weight: bold;
        text-align: center;
    }

    .instruments-section p {
        font-size: 1.25rem;
        color: #555;
        text-align: center;
    }

    /* Black Line */
    hr.thick-black-line {
        border: none; /* Remove default borders */
        height: 5px; /* Set the height */
        background-color: black !important; /* Force black color */
        margin: 0 auto; /* Center it horizontally */
        width: 80%; /* Adjust width */
    }


    /* Dropdown Buttons Alignment */
    .instrument-buttons {
        display: flex;
        gap: 1rem; /* Add spacing between dropdown buttons */
        padding-left: 10%; /* Align dropdown buttons with the left edge of the line */
    }

        .instrument-buttons .dropdown {
            display: inline-block;
        }

        /* Styling for Buttons */
        .instrument-buttons .btn {
            font-size: 1rem;
            font-weight: bold;
            padding: 0.5rem 1.5rem;
        }

    /* Dropdown Menu Styling */
    .dropdown-menu {
        font-size: 1rem;
        text-align: left;
    }



</style>


<section class="instruments-section text-center py-5">
    <h1 class="mb-3">Instruments</h1>
    <p class="mb-4">
        Here, the SoundWave’s expert players guide you through the intricacies of the instruments they play.
        Choose an instrument from one of the sections.
    </p>
    <hr class="thick-black-line mb-4" />

    <!-- Dropdown Buttons -->
    <div class="instrument-buttons text-start">
        <!-- Dropdown for Instruments -->
        <div class="dropdown">
            <button class="btn btn-light border text-danger dropdown-toggle"
                    type="button"
                    id="instrumentDropdown"
                    data-bs-toggle="dropdown"
                    aria-expanded="false">
                Instruments
            </button>
            <ul class="dropdown-menu" aria-labelledby="instrumentDropdown">
                <li><a class="dropdown-item instrument-item" href="#">Guitars</a></li>
                <li><a class="dropdown-item instrument-item" href="#">Drums</a></li>
                <li><a class="dropdown-item instrument-item" href="#">Orchestra</a></li>
            </ul>
        </div>

        <!-- Dropdown for Level -->
        <div class="dropdown">
            <button class="btn btn-light border text-danger dropdown-toggle"
                    type="button"
                    id="levelDropdown"
                    data-bs-toggle="dropdown"
                    aria-expanded="false">
                Level
            </button>
            <ul class="dropdown-menu" aria-labelledby="levelDropdown">
                <li><a class="dropdown-item level-item" href="#">Beginner</a></li>
                <li><a class="dropdown-item level-item" href="#">Professional</a></li>
            </ul>
        </div>
    </div>
    
    <div id="card-container" class="d-flex justify-content-center gap-4 mt-5"></div>

</section>

<script>
    const instrumentDropdown = document.querySelectorAll('.instrument-item');
    const levelDropdown = document.querySelectorAll('.level-item');
    const cardContainer = document.getElementById('card-container');

    let selectedInstrument = '';
    let selectedLevel = '';

    const guitarsData = [
        {
            img: '/Images/guitar-4750599_1280.jpg',
            title: 'Acoustic Guitar',
            link: '#'
        },
        {
            img: '/Images/electric-guitar-7815026_1280.jpg',
            title: 'Electric Guitar',
            link: '#'
        },
        {
            img: '/Images/bass-guitar-913092_1280.jpg',
            title: 'Bass Guitar',
            link: '#'
        }
    ];

    const DrumsData = [
        {
            img: '/Images/african-2771092_1280.jpg',
            title: 'Hand Drums',
            link: '#'
        },
        {
            img: '/Images/electronic-drum-pad-5854409_1280.jpg',
            title: 'Electronic Drums',
            link: '#'
        },
        {
            img: '/Images/drum-set-1839383_1280.jpg',
            title: 'Acoustic Drums',
            link: '#'
        }
    ];

    const OrchestraData = [
        {
            img: '/Images/bowed-instrument-1853324_1280.jpg',
            title: 'Strings',
            link: '#'
        },
        {
            img: '/Images/saxophone-3246650_1280.jpg',
            title: 'Brass',
            link: '#'
        },
        
    ];

    instrumentDropdown.forEach(item => {
        item.addEventListener('click', function () {
            selectedInstrument = this.textContent.trim();
            checkSelection();
        });
    });

    levelDropdown.forEach(item => {
        item.addEventListener('click', function () {
            selectedLevel = this.textContent.trim();
            checkSelection();
        });
    });

    function checkSelection() {
        if (selectedInstrument === 'Guitars' && selectedLevel === 'Beginner') {
            renderCards(guitarsData);
        } 
        else if (selectedInstrument === 'Guitars' && selectedLevel === 'Professional') {
            renderCards(guitarsData);
        }
        else if (selectedInstrument === 'Drums' && (selectedLevel === 'Professional' || selectedLevel === 'Beginner')) {
            renderCards(DrumsData);

        }
        else if (selectedInstrument === 'Orchestra' && (selectedLevel === 'Professional' || selectedLevel === 'Beginner')) {
            renderCards(OrchestraData);

        }
        else {
            cardContainer.innerHTML = ''; // Clear cards
        }
    }

    function renderCards(data) {
        cardContainer.innerHTML = ''; // Clear previous cards

        data.forEach(item => {
            if (item.title.toLowerCase() === 'electric guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'electricguid'; // Set link to electricguid for Beginners
                } else {
                    item.link = 'proelectric'; // Set link to proelectric for other levels
                }
            } else if (item.title.toLowerCase() === 'acoustic guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'acousticpeg'; // Set link to acousticpeg for Beginners
                } else {
                    item.link = 'acousticpro'; // Set link to acousticpro for other levels
                }
            } else if (item.title.toLowerCase() === 'bass guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'bassbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'basspro'; // Set link to basspro for other levels
                }
            }
            else if (item.title.toLowerCase() === 'Hand Drums') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'handbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'handpro'; // Set link to basspro for other levels
                }
            }
            else {
                // Default case if no matches found
                item.link = 'default'; // Default link or other fallback
            }


            const card = document.createElement('div');
            card.classList.add('card');
            card.style.width = '22rem';
            card.style.textAlign = 'center';
            card.style.border = '1px solid #ddd';
            card.style.boxShadow = '0 4px 6px rgba(0, 0, 0, 0.1)';
            card.style.borderRadius = '8px';

            card.innerHTML = `
                    <img src="${item.img}" alt="${item.title}" style="width:100%;border-bottom:1px solid #ddd;">
                    <h5 style="font-size:1.25rem;font-weight:bold;margin:1rem 0;">${item.title}</h5>
                    <a href="${item.link}" class="btn btn-danger" style="margin-bottom:1rem;font-weight:bold;">Read more</a>
                `;
            cardContainer.appendChild(card);
            
            
        });
    }
</script>


<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-26 02:37:11.575 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Guide? - 200 null text/html; charset=utf-8 148.0139ms
2025-01-26 02:37:11.594 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 02:37:11.595 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-26 02:37:11.595 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-26 02:37:11.595 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-26 02:37:11.598 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 5.021ms
2025-01-26 02:37:11.603 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-26 02:37:11.639 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-26 02:37:11.644 +03:00 [INF] [Response] 404 - 41ms

2025-01-26 02:37:11.645 +03:00 [INF] [Response] 404 - 6ms

2025-01-26 02:37:11.646 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 51.3984ms
2025-01-26 02:37:11.647 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 52.2535ms
2025-01-26 02:37:11.655 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-26 02:37:11.659 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-26 02:37:11.664 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 69.4286ms
2025-01-26 02:37:17.908 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/default - null null
2025-01-26 02:37:17.921 +03:00 [INF] [Request] GET /Home/default

2025-01-26 02:37:17.926 +03:00 [INF] [Response] 404 - 5ms

2025-01-26 02:37:17.928 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/default - 404 0 null 20.4674ms
2025-01-26 02:37:17.932 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/Home/default, Response status code: 404
2025-01-26 02:37:20.506 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/default - null null
2025-01-26 02:37:20.515 +03:00 [INF] [Request] GET /Home/default

2025-01-26 02:37:20.522 +03:00 [INF] [Response] 404 - 7ms

2025-01-26 02:37:20.524 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/default - 404 0 null 18.1841ms
2025-01-26 02:37:20.528 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/Home/default, Response status code: 404
2025-01-26 02:40:54.869 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-26 02:40:55.155 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-26 02:40:55.158 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-26 02:40:55.254 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-26 02:40:55.259 +03:00 [INF] Hosting environment: Development
2025-01-26 02:40:55.260 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-26 02:40:55.874 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-26 02:40:56.161 +03:00 [INF] [Request] GET /

2025-01-26 02:40:56.224 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-26 02:40:56.246 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-26 02:40:56.281 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-26 02:40:56.388 +03:00 [INF] Executed ViewResult - view Index executed in 118.8373ms.
2025-01-26 02:40:56.396 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 146.3227ms
2025-01-26 02:40:56.399 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-26 02:40:56.402 +03:00 [INF] [Response] 200 - 248ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Home - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
    

 <style>
    .instrument-name {
        margin-top: 10px; /* Add space between the image and the text */
        font-size: 16px; /* Adjust the text size */
        font-weight: bold; /* Bold text */
        text-align: center; /* Center the text */
    }
  </style>

<section class="category-section py-4">
    <div class="category-section">
        <h3 style="text-align: center; margin-bottom: 20px;">Start Shopping Here</h3>
        <div class="row">
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Guitars'">
                <img src="/Images/pavlo-t-5rEyYBPLN-w-unsplash.jpg" alt="Guitars" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Guitars</p>
            </div>
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Keyboards & Pianos'">
                <img src="/Images/pexels-mikhail-nilov-7570112.jpg" alt="Keyboards & Pianos" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Keyboards & Pianos</p>
            </div>
            <!-- Drums & Percussion -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Drums & Percussion'">
                <img src="/Images/pexels-reneterp-1327430.jpg" alt="Drums & Percussion" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Drums & Percussion</p>
            </div>
            <!-- Pro Audio -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Pro Audio'">
                <img src="/Images/pexels-everson-mayer-478307-1481312.jpg" alt="Pro Audio" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Pro Audio</p>
            </div>
            <!-- Band & Orchestra -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Band & Orchestra'">
                <img src="/Images/pexels-shottrotter-752535.jpg" alt="Band & Orchestra" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Band & Orchestra</p>
            </div>
            <!-- Accessories -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Accessories'">
                <img src="/Images/pexels-rombo-1510555-5280438.jpg" alt="Accessories" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Accessories</p>
            </div>
        </div>
    </div>
</section>


    <section class="membership-section text-center bg-dark text-white py-5">
    <div class="membership-section">
        <h2>Have no clue what to buy ?</h2>
        <p>Check out our professional guide to get the perfect suited instrument !</p>
        <form class="d-inline-flex mt-2" action="/Home/Guide" method="get">
            
            <button class="btn btn-danger" type="submit">professional Guide</button>
        </form>
        </div>
    </section>

    <section class="features-section py-5 bg-light">
            <div class="container">
            <div class="row text-center">
                <div class="col-md-3">
                    <img src="/Images/box.png" alt="Same Day Delivery" class="mb-sm-1" style="width: 40px; height: 40px;">
                    <h5>Same Day/Next Day Delivery</h5>
                    <p>Next day delivery on most orders in Jordan - Same day available</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/shopping-cart.png" alt="Biggest Selection" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Biggest Selection</h5>
                    <p>Largest collection of any store in MENA</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/user-talking-with-speech-bubble.png" alt="Top-notch Support" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Top-notch Support</h5>
                    <p>We are always happy to help in any way we can</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/secure-payment.png" alt="Secure Payments" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Secure Payments</h5>
                    <p>Cash on Delivery available</p>
                </div>
            </div>
            </div>
     </section>


    

    <!-- JavaScript to Toggle Forms -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.js"></script>


        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-26 02:40:56.516 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 650.5564ms
2025-01-26 02:40:56.565 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-26 02:40:56.566 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-26 02:40:56.566 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 02:40:56.567 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-26 02:40:56.605 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-26 02:40:56.632 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-26 02:40:56.621 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 55.0414ms
2025-01-26 02:40:56.649 +03:00 [INF] [Response] 404 - 17ms

2025-01-26 02:40:56.649 +03:00 [INF] [Response] 404 - 44ms

2025-01-26 02:40:56.682 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 115.4697ms
2025-01-26 02:40:56.685 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 119.8615ms
2025-01-26 02:40:56.697 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-26 02:40:56.699 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-26 02:40:56.721 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 154.9484ms
2025-01-26 02:40:58.913 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Guide? - null null
2025-01-26 02:40:58.942 +03:00 [INF] [Request] GET /Home/Guide
[QueryString] ?

2025-01-26 02:40:58.946 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Guide (MyShop)'
2025-01-26 02:40:58.948 +03:00 [INF] Route matched with {action = "Guide", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Guide(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-26 02:40:58.996 +03:00 [INF] Executing ViewResult, running view Guide.
2025-01-26 02:40:59.002 +03:00 [INF] Executed ViewResult - view Guide executed in 7.3022ms.
2025-01-26 02:40:59.004 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Guide (MyShop) in 54.4811ms
2025-01-26 02:40:59.007 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Guide (MyShop)'
2025-01-26 02:40:59.010 +03:00 [INF] [Response] 200 - 67ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Guide - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
<style>

    .instruments-section h1 {
        font-size: 2.5rem;
        font-weight: bold;
        text-align: center;
    }

    .instruments-section p {
        font-size: 1.25rem;
        color: #555;
        text-align: center;
    }

    /* Black Line */
    hr.thick-black-line {
        border: none; /* Remove default borders */
        height: 5px; /* Set the height */
        background-color: black !important; /* Force black color */
        margin: 0 auto; /* Center it horizontally */
        width: 80%; /* Adjust width */
    }


    /* Dropdown Buttons Alignment */
    .instrument-buttons {
        display: flex;
        gap: 1rem; /* Add spacing between dropdown buttons */
        padding-left: 10%; /* Align dropdown buttons with the left edge of the line */
    }

        .instrument-buttons .dropdown {
            display: inline-block;
        }

        /* Styling for Buttons */
        .instrument-buttons .btn {
            font-size: 1rem;
            font-weight: bold;
            padding: 0.5rem 1.5rem;
        }

    /* Dropdown Menu Styling */
    .dropdown-menu {
        font-size: 1rem;
        text-align: left;
    }



</style>


<section class="instruments-section text-center py-5">
    <h1 class="mb-3">Instruments</h1>
    <p class="mb-4">
        Here, the SoundWave’s expert players guide you through the intricacies of the instruments they play.
        Choose an instrument from one of the sections.
    </p>
    <hr class="thick-black-line mb-4" />

    <!-- Dropdown Buttons -->
    <div class="instrument-buttons text-start">
        <!-- Dropdown for Instruments -->
        <div class="dropdown">
            <button class="btn btn-light border text-danger dropdown-toggle"
                    type="button"
                    id="instrumentDropdown"
                    data-bs-toggle="dropdown"
                    aria-expanded="false">
                Instruments
            </button>
            <ul class="dropdown-menu" aria-labelledby="instrumentDropdown">
                <li><a class="dropdown-item instrument-item" href="#">Guitars</a></li>
                <li><a class="dropdown-item instrument-item" href="#">Drums</a></li>
                <li><a class="dropdown-item instrument-item" href="#">Orchestra</a></li>
            </ul>
        </div>

        <!-- Dropdown for Level -->
        <div class="dropdown">
            <button class="btn btn-light border text-danger dropdown-toggle"
                    type="button"
                    id="levelDropdown"
                    data-bs-toggle="dropdown"
                    aria-expanded="false">
                Level
            </button>
            <ul class="dropdown-menu" aria-labelledby="levelDropdown">
                <li><a class="dropdown-item level-item" href="#">Beginner</a></li>
                <li><a class="dropdown-item level-item" href="#">Professional</a></li>
            </ul>
        </div>
    </div>
    
    <div id="card-container" class="d-flex justify-content-center gap-4 mt-5"></div>

</section>

<script>
    const instrumentDropdown = document.querySelectorAll('.instrument-item');
    const levelDropdown = document.querySelectorAll('.level-item');
    const cardContainer = document.getElementById('card-container');

    let selectedInstrument = '';
    let selectedLevel = '';

    const guitarsData = [
        {
            img: '/Images/guitar-4750599_1280.jpg',
            title: 'Acoustic Guitar',
            link: '#'
        },
        {
            img: '/Images/electric-guitar-7815026_1280.jpg',
            title: 'Electric Guitar',
            link: '#'
        },
        {
            img: '/Images/bass-guitar-913092_1280.jpg',
            title: 'Bass Guitar',
            link: '#'
        }
    ];

    const DrumsData = [
        {
            img: '/Images/african-2771092_1280.jpg',
            title: 'Hand Drums',
            link: '#'
        },
        {
            img: '/Images/electronic-drum-pad-5854409_1280.jpg',
            title: 'Electronic Drums',
            link: '#'
        },
        {
            img: '/Images/drum-set-1839383_1280.jpg',
            title: 'Acoustic Drums',
            link: '#'
        }
    ];

    const OrchestraData = [
        {
            img: '/Images/bowed-instrument-1853324_1280.jpg',
            title: 'Strings',
            link: '#'
        },
        {
            img: '/Images/saxophone-3246650_1280.jpg',
            title: 'Brass',
            link: '#'
        },
        
    ];

    instrumentDropdown.forEach(item => {
        item.addEventListener('click', function () {
            selectedInstrument = this.textContent.trim();
            checkSelection();
        });
    });

    levelDropdown.forEach(item => {
        item.addEventListener('click', function () {
            selectedLevel = this.textContent.trim();
            checkSelection();
        });
    });

    function checkSelection() {
        if (selectedInstrument === 'Guitars' && selectedLevel === 'Beginner') {
            renderCards(guitarsData);
        } 
        else if (selectedInstrument === 'Guitars' && selectedLevel === 'Professional') {
            renderCards(guitarsData);
        }
        else if (selectedInstrument === 'Drums' && (selectedLevel === 'Professional' || selectedLevel === 'Beginner')) {
            renderCards(DrumsData);

        }
        else if (selectedInstrument === 'Orchestra' && (selectedLevel === 'Professional' || selectedLevel === 'Beginner')) {
            renderCards(OrchestraData);

        }
        else {
            cardContainer.innerHTML = ''; // Clear cards
        }
    }

    function renderCards(data) {
        cardContainer.innerHTML = ''; // Clear previous cards

        data.forEach(item => {
            if (item.title.toLowerCase() === 'electric guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'electricguid'; // Set link to electricguid for Beginners
                } else {
                    item.link = 'proelectric'; // Set link to proelectric for other levels
                }
            } else if (item.title.toLowerCase() === 'acoustic guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'acousticpeg'; // Set link to acousticpeg for Beginners
                } else {
                    item.link = 'acousticpro'; // Set link to acousticpro for other levels
                }
            } else if (item.title.toLowerCase() === 'bass guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'bassbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'basspro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'hand drums') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'handbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'handpro'; // Set link to basspro for other levels
                }
            } else {
                // Default case if no matches found
                item.link = 'default'; // Default link or other fallback
            }


            const card = document.createElement('div');
            card.classList.add('card');
            card.style.width = '22rem';
            card.style.textAlign = 'center';
            card.style.border = '1px solid #ddd';
            card.style.boxShadow = '0 4px 6px rgba(0, 0, 0, 0.1)';
            card.style.borderRadius = '8px';

            card.innerHTML = `
                    <img src="${item.img}" alt="${item.title}" style="width:100%;border-bottom:1px solid #ddd;">
                    <h5 style="font-size:1.25rem;font-weight:bold;margin:1rem 0;">${item.title}</h5>
                    <a href="${item.link}" class="btn btn-danger" style="margin-bottom:1rem;font-weight:bold;">Read more</a>
                `;
            cardContainer.appendChild(card);
            
            
        });
    }
</script>


<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-26 02:40:59.064 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Guide? - 200 null text/html; charset=utf-8 151.7295ms
2025-01-26 02:40:59.084 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 02:40:59.085 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-26 02:40:59.085 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-26 02:40:59.085 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-26 02:40:59.089 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 6.0115ms
2025-01-26 02:40:59.093 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-26 02:40:59.130 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-26 02:40:59.139 +03:00 [INF] [Response] 404 - 46ms

2025-01-26 02:40:59.141 +03:00 [INF] [Response] 404 - 11ms

2025-01-26 02:40:59.142 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 57.3193ms
2025-01-26 02:40:59.142 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 57.9802ms
2025-01-26 02:40:59.148 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-26 02:40:59.152 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-26 02:40:59.164 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 79.3923ms
2025-01-26 02:41:07.980 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/handbeg - null null
2025-01-26 02:41:07.990 +03:00 [INF] [Request] GET /Home/handbeg

2025-01-26 02:41:07.994 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.handbeg (MyShop)'
2025-01-26 02:41:07.997 +03:00 [INF] Route matched with {action = "handbeg", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult handbeg(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-26 02:41:07.999 +03:00 [INF] Executing ViewResult, running view handbeg.
2025-01-26 02:41:08.010 +03:00 [INF] Executed ViewResult - view handbeg executed in 10.8757ms.
2025-01-26 02:41:08.013 +03:00 [INF] Executed action MyShop.Controllers.HomeController.handbeg (MyShop) in 14.331ms
2025-01-26 02:41:08.014 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.handbeg (MyShop)'
2025-01-26 02:41:08.015 +03:00 [INF] [Response] 200 - 25ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Beginner Hand Drum Guide - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
<style>
    /* General Styles */
    body {
        font-family: 'Roboto', sans-serif;
        margin: 0;
        padding: 0;
        background-color: #f4f4f4;
        color: #333;
        line-height: 1.6;
    }

    /* Header Phrase Styles */
    .header-phrase {
        background-color: #333; /* Black */
        color: #fff;
        padding: 20px;
        text-align: center;
    }

    .header-phrase h1 {
        margin: 0;
        font-size: 2.5rem;
    }

    /* Main Content Styles */
    main {
        padding: 20px;
        max-width: 1200px;
        margin: 0 auto;
    }

    section {
        margin-bottom: 40px;
    }

    h2 {
        color: #d32f2f; /* Red */
        border-bottom: 2px solid #d32f2f; /* Red */
        padding-bottom: 10px;
        margin-bottom: 20px;
    }

    .content-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 20px;
    }

    .content-card {
        background-color: #fff;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease;
    }

    .content-card:hover {
        transform: translateY(-5px);
    }

    .content-card img {
        width: 100%;
        height: 200px;
        object-fit: cover;
    }

    .content-card h3 {
        margin: 15px;
        color: #333;
    }

    .content-card p, .content-card ul {
        margin: 0 15px 15px;
        color: #555;
    }

    .content-card ul {
        list-style-type: disc;
        padding-left: 20px;
    }

    /* Footer Phrase Styles */
    .footer-phrase {
        background-color: #333; /* Black */
        color: #fff;
        text-align: center;
        padding: 15px;
        margin-top: 40px;
    }
</style>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Beginner Hand Drum Guide</title>
    <link rel="stylesheet" href="styles.css">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
</head>
<body>
    <!-- Header Phrase -->
    <div class="header-phrase">
        <h1>Beginner Hand Drum Guide</h1>
    </div>

    <!-- Main Content -->
    <main>
        <!-- Section 1: Choosing Your First Hand Drum -->
        <section class="choosing-drum">
            <h2>1. Choosing Your First Hand Drum</h2>
            <div class="content-grid">
                <div class="content-card">
                    <img src="/Images/djembe.jpg" alt="Djembe Drum">
                    <h3>Djembe</h3>
                    <p>Great for beginners, the djembe is versatile and easy to play. Look for one with a sturdy wood body and natural drumhead.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/conga.jpg" alt="Conga Drum">
                    <h3>Conga</h3>
                    <p>A bit larger, congas are ideal for Latin and Afro-Cuban rhythms. Start with a single conga drum before expanding to a set.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/bongo.jpg" alt="Bongo Drums">
                    <h3>Bongos</h3>
                    <p>Compact and lightweight, bongos are perfect for small hands and learning simple rhythms.</p>
                </div>
            </div>
        </section>

        <!-- Section 2: Basic Playing Techniques -->
        <section class="basic-techniques">
            <h2>2. Basic Playing Techniques</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>Hand Positions</h3>
                    <ul>
                        <li>Use the pads of your fingers for softer tones.</li>
                        <li>Strike with the palm for deeper, resonant sounds.</li>
                    </ul>
                </div>
                <div class="content-card">
                    <h3>Basic Rhythms</h3>
                    <ul>
                        <li>Start with simple beats like "dum-dum-ta-ta" to build confidence.</li>
                        <li>Practice steady timing with a metronome.</li>
                    </ul>
                </div>
                <div class="content-card">
                    <h3>Posture</h3>
                    <ul>
                        <li>Sit comfortably with the drum between your knees or on a stand.</li>
                        <li>Keep your back straight to avoid strain.</li>
                    </ul>
                </div>
            </div>
        </section>

        <!-- Section 3: Accessories for Beginners -->
        <section class="accessories">
            <h2>3. Accessories for Beginners</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>Drum Bag</h3>
                    <p>Invest in a padded bag to protect your drum during transport.</p>
                </div>
                <div class="content-card">
                    <h3>Hand Cream</h3>
                    <p>Keep your hands moisturized to prevent discomfort during long practice sessions.</p>
                </div>
                <div class="content-card">
                    <h3>Practice Pad</h3>
                    <p>A rubber practice pad can help you work on rhythms quietly.</p>
                </div>
            </div>
        </section>

        <!-- Section 4: Recommended Starter Drums -->
        <section class="recommended-drums">
            <h2>4. Recommended Starter Drums</h2>
            <div class="content-grid">
                <div class="content-card">
                    <img src="/Images/rope-djembe.jpg" alt="Rope-Tuned Djembe">
                    <h3>Rope-Tuned Djembe</h3>
                    <p>Lightweight and portable, this drum is ideal for beginners exploring world rhythms.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/bongo-set.jpg" alt="Beginner Bongo Set">
                    <h3>Beginner Bongo Set</h3>
                    <p>An affordable and compact option for learning basic hand percussion techniques.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/compact-conga.jpg" alt="Compact Conga">
                    <h3>Compact Conga</h3>
                    <p>Perfect for smaller spaces, this drum offers great sound without being bulky.</p>
                </div>
            </div>
        </section>
    </main>

    <!-- Footer Phrase -->
    <div class="footer-phrase">
        <p>Start Your Hand Drumming Journey Today!</p>
    </div>
</body>
</html>

        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-26 02:41:08.054 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/handbeg - 200 null text/html; charset=utf-8 74.5193ms
2025-01-26 02:41:08.076 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/styles.css - null null
2025-01-26 02:41:08.085 +03:00 [INF] [Request] GET /Home/styles.css

2025-01-26 02:41:08.088 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/rope-djembe.jpg - null null
2025-01-26 02:41:08.090 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/bongo-set.jpg - null null
2025-01-26 02:41:08.086 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/djembe.jpg - null null
2025-01-26 02:41:08.087 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/bongo.jpg - null null
2025-01-26 02:41:08.086 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 02:41:08.091 +03:00 [INF] [Response] 404 - 5ms

2025-01-26 02:41:08.103 +03:00 [INF] [Request] GET /Images/rope-djembe.jpg

2025-01-26 02:41:08.107 +03:00 [INF] [Request] GET /Images/bongo-set.jpg

2025-01-26 02:41:08.112 +03:00 [INF] [Request] GET /Images/djembe.jpg

2025-01-26 02:41:08.114 +03:00 [INF] [Request] GET /Images/bongo.jpg

2025-01-26 02:41:08.086 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/conga.jpg - null null
2025-01-26 02:41:08.090 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/compact-conga.jpg - null null
2025-01-26 02:41:08.100 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-26 02:41:08.116 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-26 02:41:08.117 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/styles.css - 404 0 null 40.9251ms
2025-01-26 02:41:08.117 +03:00 [INF] [Response] 404 - 13ms

2025-01-26 02:41:08.118 +03:00 [INF] [Response] 404 - 10ms

2025-01-26 02:41:08.119 +03:00 [INF] [Response] 404 - 7ms

2025-01-26 02:41:08.119 +03:00 [INF] [Response] 404 - 5ms

2025-01-26 02:41:08.123 +03:00 [INF] [Request] GET /Images/conga.jpg

2025-01-26 02:41:08.126 +03:00 [INF] [Request] GET /Images/compact-conga.jpg

2025-01-26 02:41:08.127 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-26 02:41:08.129 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-26 02:41:08.131 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/Home/styles.css, Response status code: 404
2025-01-26 02:41:08.132 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/rope-djembe.jpg - 404 0 null 43.7492ms
2025-01-26 02:41:08.132 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/bongo-set.jpg - 404 0 null 42.8467ms
2025-01-26 02:41:08.133 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/djembe.jpg - 404 0 null 47.3723ms
2025-01-26 02:41:08.134 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/bongo.jpg - 404 0 null 47.0851ms
2025-01-26 02:41:08.135 +03:00 [INF] [Response] 404 - 11ms

2025-01-26 02:41:08.136 +03:00 [INF] [Response] 404 - 10ms

2025-01-26 02:41:08.136 +03:00 [INF] [Response] 404 - 9ms

2025-01-26 02:41:08.137 +03:00 [INF] [Response] 404 - 8ms

2025-01-26 02:41:08.141 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-26 02:41:08.144 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/Images/rope-djembe.jpg, Response status code: 404
2025-01-26 02:41:08.146 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/Images/bongo-set.jpg, Response status code: 404
2025-01-26 02:41:08.148 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/Images/djembe.jpg, Response status code: 404
2025-01-26 02:41:08.151 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/Images/bongo.jpg, Response status code: 404
2025-01-26 02:41:08.155 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 39.2285ms
2025-01-26 02:41:08.162 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 76.5059ms
2025-01-26 02:41:08.152 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/conga.jpg - 404 0 null 65.9869ms
2025-01-26 02:41:08.153 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/compact-conga.jpg - 404 0 null 63.0435ms
2025-01-26 02:41:08.154 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 53.6097ms
2025-01-26 02:41:08.181 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 40.5331ms
2025-01-26 02:41:08.186 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-26 02:41:08.193 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/Images/conga.jpg, Response status code: 404
2025-01-26 02:41:08.195 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/Images/compact-conga.jpg, Response status code: 404
2025-01-26 02:41:08.198 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-26 02:48:38.480 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-26 02:48:38.836 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-26 02:48:38.839 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-26 02:48:38.935 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-26 02:48:38.938 +03:00 [INF] Hosting environment: Development
2025-01-26 02:48:38.939 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-26 02:48:39.516 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-26 02:48:39.798 +03:00 [INF] [Request] GET /

2025-01-26 02:48:39.863 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-26 02:48:39.940 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-26 02:48:39.979 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-26 02:48:40.068 +03:00 [INF] Executed ViewResult - view Index executed in 88.4621ms.
2025-01-26 02:48:40.071 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 126.3183ms
2025-01-26 02:48:40.072 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-26 02:48:40.075 +03:00 [INF] [Response] 200 - 285ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Home - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
    

 <style>
    .instrument-name {
        margin-top: 10px; /* Add space between the image and the text */
        font-size: 16px; /* Adjust the text size */
        font-weight: bold; /* Bold text */
        text-align: center; /* Center the text */
    }
  </style>

<section class="category-section py-4">
    <div class="category-section">
        <h3 style="text-align: center; margin-bottom: 20px;">Start Shopping Here</h3>
        <div class="row">
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Guitars'">
                <img src="/Images/pavlo-t-5rEyYBPLN-w-unsplash.jpg" alt="Guitars" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Guitars</p>
            </div>
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Keyboards & Pianos'">
                <img src="/Images/pexels-mikhail-nilov-7570112.jpg" alt="Keyboards & Pianos" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Keyboards & Pianos</p>
            </div>
            <!-- Drums & Percussion -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Drums & Percussion'">
                <img src="/Images/pexels-reneterp-1327430.jpg" alt="Drums & Percussion" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Drums & Percussion</p>
            </div>
            <!-- Pro Audio -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Pro Audio'">
                <img src="/Images/pexels-everson-mayer-478307-1481312.jpg" alt="Pro Audio" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Pro Audio</p>
            </div>
            <!-- Band & Orchestra -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Band & Orchestra'">
                <img src="/Images/pexels-shottrotter-752535.jpg" alt="Band & Orchestra" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Band & Orchestra</p>
            </div>
            <!-- Accessories -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Accessories'">
                <img src="/Images/pexels-rombo-1510555-5280438.jpg" alt="Accessories" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Accessories</p>
            </div>
        </div>
    </div>
</section>


    <section class="membership-section text-center bg-dark text-white py-5">
    <div class="membership-section">
        <h2>Have no clue what to buy ?</h2>
        <p>Check out our professional guide to get the perfect suited instrument !</p>
        <form class="d-inline-flex mt-2" action="/Home/Guide" method="get">
            
            <button class="btn btn-danger" type="submit">professional Guide</button>
        </form>
        </div>
    </section>

    <section class="features-section py-5 bg-light">
            <div class="container">
            <div class="row text-center">
                <div class="col-md-3">
                    <img src="/Images/box.png" alt="Same Day Delivery" class="mb-sm-1" style="width: 40px; height: 40px;">
                    <h5>Same Day/Next Day Delivery</h5>
                    <p>Next day delivery on most orders in Jordan - Same day available</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/shopping-cart.png" alt="Biggest Selection" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Biggest Selection</h5>
                    <p>Largest collection of any store in MENA</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/user-talking-with-speech-bubble.png" alt="Top-notch Support" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Top-notch Support</h5>
                    <p>We are always happy to help in any way we can</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/secure-payment.png" alt="Secure Payments" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Secure Payments</h5>
                    <p>Cash on Delivery available</p>
                </div>
            </div>
            </div>
     </section>


    

    <!-- JavaScript to Toggle Forms -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.js"></script>


        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-26 02:48:40.167 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 669.0764ms
2025-01-26 02:48:40.185 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 02:48:40.185 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-26 02:48:40.185 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-26 02:48:40.221 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-26 02:48:40.226 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 42.7677ms
2025-01-26 02:48:40.235 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-26 02:48:40.238 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-26 02:48:40.250 +03:00 [INF] [Response] 404 - 12ms

2025-01-26 02:48:40.250 +03:00 [INF] [Response] 404 - 15ms

2025-01-26 02:48:40.252 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 69.2ms
2025-01-26 02:48:40.253 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 69.637ms
2025-01-26 02:48:40.260 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-26 02:48:40.274 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-26 02:48:40.333 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 111.8684ms
2025-01-26 02:48:44.118 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Guide? - null null
2025-01-26 02:48:44.140 +03:00 [INF] [Request] GET /Home/Guide
[QueryString] ?

2025-01-26 02:48:44.172 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Guide (MyShop)'
2025-01-26 02:48:44.181 +03:00 [INF] Route matched with {action = "Guide", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Guide(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-26 02:48:44.290 +03:00 [INF] Executing ViewResult, running view Guide.
2025-01-26 02:48:44.301 +03:00 [INF] Executed ViewResult - view Guide executed in 11.8699ms.
2025-01-26 02:48:44.303 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Guide (MyShop) in 117.74ms
2025-01-26 02:48:44.304 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Guide (MyShop)'
2025-01-26 02:48:44.306 +03:00 [INF] [Response] 200 - 165ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Guide - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
<style>

    .instruments-section h1 {
        font-size: 2.5rem;
        font-weight: bold;
        text-align: center;
    }

    .instruments-section p {
        font-size: 1.25rem;
        color: #555;
        text-align: center;
    }

    /* Black Line */
    hr.thick-black-line {
        border: none; /* Remove default borders */
        height: 5px; /* Set the height */
        background-color: black !important; /* Force black color */
        margin: 0 auto; /* Center it horizontally */
        width: 80%; /* Adjust width */
    }


    /* Dropdown Buttons Alignment */
    .instrument-buttons {
        display: flex;
        gap: 1rem; /* Add spacing between dropdown buttons */
        padding-left: 10%; /* Align dropdown buttons with the left edge of the line */
    }

        .instrument-buttons .dropdown {
            display: inline-block;
        }

        /* Styling for Buttons */
        .instrument-buttons .btn {
            font-size: 1rem;
            font-weight: bold;
            padding: 0.5rem 1.5rem;
        }

    /* Dropdown Menu Styling */
    .dropdown-menu {
        font-size: 1rem;
        text-align: left;
    }



</style>


<section class="instruments-section text-center py-5">
    <h1 class="mb-3">Instruments</h1>
    <p class="mb-4">
        Here, the SoundWave’s expert players guide you through the intricacies of the instruments they play.
        Choose an instrument from one of the sections.
    </p>
    <hr class="thick-black-line mb-4" />

    <!-- Dropdown Buttons -->
    <div class="instrument-buttons text-start">
        <!-- Dropdown for Instruments -->
        <div class="dropdown">
            <button class="btn btn-light border text-danger dropdown-toggle"
                    type="button"
                    id="instrumentDropdown"
                    data-bs-toggle="dropdown"
                    aria-expanded="false">
                Instruments
            </button>
            <ul class="dropdown-menu" aria-labelledby="instrumentDropdown">
                <li><a class="dropdown-item instrument-item" href="#">Guitars</a></li>
                <li><a class="dropdown-item instrument-item" href="#">Drums</a></li>
                <li><a class="dropdown-item instrument-item" href="#">Orchestra</a></li>
            </ul>
        </div>

        <!-- Dropdown for Level -->
        <div class="dropdown">
            <button class="btn btn-light border text-danger dropdown-toggle"
                    type="button"
                    id="levelDropdown"
                    data-bs-toggle="dropdown"
                    aria-expanded="false">
                Level
            </button>
            <ul class="dropdown-menu" aria-labelledby="levelDropdown">
                <li><a class="dropdown-item level-item" href="#">Beginner</a></li>
                <li><a class="dropdown-item level-item" href="#">Professional</a></li>
            </ul>
        </div>
    </div>
    
    <div id="card-container" class="d-flex justify-content-center gap-4 mt-5"></div>

</section>

<script>
    const instrumentDropdown = document.querySelectorAll('.instrument-item');
    const levelDropdown = document.querySelectorAll('.level-item');
    const cardContainer = document.getElementById('card-container');

    let selectedInstrument = '';
    let selectedLevel = '';

    const guitarsData = [
        {
            img: '/Images/guitar-4750599_1280.jpg',
            title: 'Acoustic Guitar',
            link: '#'
        },
        {
            img: '/Images/electric-guitar-7815026_1280.jpg',
            title: 'Electric Guitar',
            link: '#'
        },
        {
            img: '/Images/bass-guitar-913092_1280.jpg',
            title: 'Bass Guitar',
            link: '#'
        }
    ];

    const DrumsData = [
        {
            img: '/Images/african-2771092_1280.jpg',
            title: 'Hand Drums',
            link: '#'
        },
        {
            img: '/Images/electronic-drum-pad-5854409_1280.jpg',
            title: 'Electronic Drums',
            link: '#'
        },
        {
            img: '/Images/drum-set-1839383_1280.jpg',
            title: 'Acoustic Drums',
            link: '#'
        }
    ];

    const OrchestraData = [
        {
            img: '/Images/bowed-instrument-1853324_1280.jpg',
            title: 'Strings',
            link: '#'
        },
        {
            img: '/Images/saxophone-3246650_1280.jpg',
            title: 'Brass',
            link: '#'
        },
        
    ];

    instrumentDropdown.forEach(item => {
        item.addEventListener('click', function () {
            selectedInstrument = this.textContent.trim();
            checkSelection();
        });
    });

    levelDropdown.forEach(item => {
        item.addEventListener('click', function () {
            selectedLevel = this.textContent.trim();
            checkSelection();
        });
    });

    function checkSelection() {
        if (selectedInstrument === 'Guitars' && selectedLevel === 'Beginner') {
            renderCards(guitarsData);
        } 
        else if (selectedInstrument === 'Guitars' && selectedLevel === 'Professional') {
            renderCards(guitarsData);
        }
        else if (selectedInstrument === 'Drums' && (selectedLevel === 'Professional' || selectedLevel === 'Beginner')) {
            renderCards(DrumsData);

        }
        else if (selectedInstrument === 'Orchestra' && (selectedLevel === 'Professional' || selectedLevel === 'Beginner')) {
            renderCards(OrchestraData);

        }
        else {
            cardContainer.innerHTML = ''; // Clear cards
        }
    }

    function renderCards(data) {
        cardContainer.innerHTML = ''; // Clear previous cards

        data.forEach(item => {
            if (item.title.toLowerCase() === 'electric guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'electricguid'; // Set link to electricguid for Beginners
                } else {
                    item.link = 'proelectric'; // Set link to proelectric for other levels
                }
            } else if (item.title.toLowerCase() === 'acoustic guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'acousticpeg'; // Set link to acousticpeg for Beginners
                } else {
                    item.link = 'acousticpro'; // Set link to acousticpro for other levels
                }
            } else if (item.title.toLowerCase() === 'bass guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'bassbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'basspro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'hand drums') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'handbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'handpro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'electronic drums') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'delebeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'delepro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'acoustic drums') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'dacosticbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'dacousticpro'; // Set link to basspro for other levels
                }
            } else {
                // Default case if no matches found
                item.link = 'default'; // Default link or other fallback
            }


            const card = document.createElement('div');
            card.classList.add('card');
            card.style.width = '22rem';
            card.style.textAlign = 'center';
            card.style.border = '1px solid #ddd';
            card.style.boxShadow = '0 4px 6px rgba(0, 0, 0, 0.1)';
            card.style.borderRadius = '8px';

            card.innerHTML = `
                    <img src="${item.img}" alt="${item.title}" style="width:100%;border-bottom:1px solid #ddd;">
                    <h5 style="font-size:1.25rem;font-weight:bold;margin:1rem 0;">${item.title}</h5>
                    <a href="${item.link}" class="btn btn-danger" style="margin-bottom:1rem;font-weight:bold;">Read more</a>
                `;
            cardContainer.appendChild(card);
            
            
        });
    }
</script>


<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-26 02:48:44.364 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Guide? - 200 null text/html; charset=utf-8 246.2471ms
2025-01-26 02:48:44.393 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 02:48:44.395 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-26 02:48:44.399 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-26 02:48:44.403 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 10.6682ms
2025-01-26 02:48:44.406 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-26 02:48:44.395 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-26 02:48:44.424 +03:00 [INF] [Response] 404 - 17ms

2025-01-26 02:48:44.428 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 33.3475ms
2025-01-26 02:48:44.428 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-26 02:48:44.431 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-26 02:48:44.432 +03:00 [INF] [Response] 404 - 4ms

2025-01-26 02:48:44.435 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 40.9778ms
2025-01-26 02:48:44.440 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-26 02:48:44.443 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 45.1277ms
2025-01-26 02:48:51.857 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/handbeg - null null
2025-01-26 02:48:51.870 +03:00 [INF] [Request] GET /Home/handbeg

2025-01-26 02:48:51.876 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.handbeg (MyShop)'
2025-01-26 02:48:51.880 +03:00 [INF] Route matched with {action = "handbeg", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult handbeg(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-26 02:48:51.886 +03:00 [INF] Executing ViewResult, running view handbeg.
2025-01-26 02:48:51.907 +03:00 [INF] Executed ViewResult - view handbeg executed in 20.8258ms.
2025-01-26 02:48:51.909 +03:00 [INF] Executed action MyShop.Controllers.HomeController.handbeg (MyShop) in 24.6447ms
2025-01-26 02:48:51.910 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.handbeg (MyShop)'
2025-01-26 02:48:51.911 +03:00 [INF] [Response] 200 - 40ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Beginner Hand Drum Guide - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
<style>
    /* General Styles */
    body {
        font-family: 'Roboto', sans-serif;
        margin: 0;
        padding: 0;
        background-color: #f4f4f4;
        color: #333;
        line-height: 1.6;
    }

    /* Header Phrase Styles */
    .header-phrase {
        background-color: #333; /* Black */
        color: #fff;
        padding: 20px;
        text-align: center;
    }

    .header-phrase h1 {
        margin: 0;
        font-size: 2.5rem;
    }

    /* Main Content Styles */
    main {
        padding: 20px;
        max-width: 1200px;
        margin: 0 auto;
    }

    section {
        margin-bottom: 40px;
    }

    h2 {
        color: #d32f2f; /* Red */
        border-bottom: 2px solid #d32f2f; /* Red */
        padding-bottom: 10px;
        margin-bottom: 20px;
    }

    .content-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 20px;
    }

    .content-card {
        background-color: #fff;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease;
    }

    .content-card:hover {
        transform: translateY(-5px);
    }

    .content-card img {
        width: 100%;
        height: 200px;
        object-fit: cover;
    }

    .content-card h3 {
        margin: 15px;
        color: #333;
    }

    .content-card p, .content-card ul {
        margin: 0 15px 15px;
        color: #555;
    }

    .content-card ul {
        list-style-type: disc;
        padding-left: 20px;
    }

    /* Footer Phrase Styles */
    .footer-phrase {
        background-color: #333; /* Black */
        color: #fff;
        text-align: center;
        padding: 15px;
        margin-top: 40px;
    }
</style>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Beginner Hand Drum Guide</title>
    <link rel="stylesheet" href="styles.css">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
</head>
<body>
    <!-- Header Phrase -->
    <div class="header-phrase">
        <h1>Beginner Hand Drum Guide</h1>
    </div>

    <!-- Main Content -->
    <main>
        <!-- Section 1: Choosing Your First Hand Drum -->
        <section class="choosing-drum">
            <h2>1. Choosing Your First Hand Drum</h2>
            <div class="content-grid">
                <div class="content-card">
                    <img src="/Images/djembe.jpg" alt="Djembe Drum">
                    <h3>Djembe</h3>
                    <p>Great for beginners, the djembe is versatile and easy to play. Look for one with a sturdy wood body and natural drumhead.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/conga.jpg" alt="Conga Drum">
                    <h3>Conga</h3>
                    <p>A bit larger, congas are ideal for Latin and Afro-Cuban rhythms. Start with a single conga drum before expanding to a set.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/bongo.jpg" alt="Bongo Drums">
                    <h3>Bongos</h3>
                    <p>Compact and lightweight, bongos are perfect for small hands and learning simple rhythms.</p>
                </div>
            </div>
        </section>

        <!-- Section 2: Basic Playing Techniques -->
        <section class="basic-techniques">
            <h2>2. Basic Playing Techniques</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>Hand Positions</h3>
                    <ul>
                        <li>Use the pads of your fingers for softer tones.</li>
                        <li>Strike with the palm for deeper, resonant sounds.</li>
                    </ul>
                </div>
                <div class="content-card">
                    <h3>Basic Rhythms</h3>
                    <ul>
                        <li>Start with simple beats like "dum-dum-ta-ta" to build confidence.</li>
                        <li>Practice steady timing with a metronome.</li>
                    </ul>
                </div>
                <div class="content-card">
                    <h3>Posture</h3>
                    <ul>
                        <li>Sit comfortably with the drum between your knees or on a stand.</li>
                        <li>Keep your back straight to avoid strain.</li>
                    </ul>
                </div>
            </div>
        </section>

        <!-- Section 3: Accessories for Beginners -->
        <section class="accessories">
            <h2>3. Accessories for Beginners</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>Drum Bag</h3>
                    <p>Invest in a padded bag to protect your drum during transport.</p>
                </div>
                <div class="content-card">
                    <h3>Hand Cream</h3>
                    <p>Keep your hands moisturized to prevent discomfort during long practice sessions.</p>
                </div>
                <div class="content-card">
                    <h3>Practice Pad</h3>
                    <p>A rubber practice pad can help you work on rhythms quietly.</p>
                </div>
            </div>
        </section>

        <!-- Section 4: Recommended Starter Drums -->
        <section class="recommended-drums">
            <h2>4. Recommended Starter Drums</h2>
            <div class="content-grid">
                <div class="content-card">
                    <img src="/Images/rope-djembe.jpg" alt="Rope-Tuned Djembe">
                    <h3>Rope-Tuned Djembe</h3>
                    <p>Lightweight and portable, this drum is ideal for beginners exploring world rhythms.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/bongo-set.jpg" alt="Beginner Bongo Set">
                    <h3>Beginner Bongo Set</h3>
                    <p>An affordable and compact option for learning basic hand percussion techniques.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/compact-conga.jpg" alt="Compact Conga">
                    <h3>Compact Conga</h3>
                    <p>Perfect for smaller spaces, this drum offers great sound without being bulky.</p>
                </div>
            </div>
        </section>
    </main>

    <!-- Footer Phrase -->
    <div class="footer-phrase">
        <p>Start Your Hand Drumming Journey Today!</p>
    </div>
</body>
</html>

        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-26 02:48:51.963 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/handbeg - 200 null text/html; charset=utf-8 107.0544ms
2025-01-26 02:48:51.979 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/styles.css - null null
2025-01-26 02:48:51.984 +03:00 [INF] [Request] GET /Home/styles.css

2025-01-26 02:48:51.985 +03:00 [INF] [Response] 404 - 1ms

2025-01-26 02:48:51.987 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 02:48:52.009 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/bongo-set.jpg - null null
2025-01-26 02:48:51.989 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/bongo.jpg - null null
2025-01-26 02:48:51.988 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/djembe.jpg - null null
2025-01-26 02:48:51.988 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-26 02:48:51.988 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/conga.jpg - null null
2025-01-26 02:48:51.988 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-26 02:48:51.987 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/styles.css - 404 0 null 8.1733ms
2025-01-26 02:48:52.009 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/rope-djembe.jpg - null null
2025-01-26 02:48:52.011 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/compact-conga.jpg - null null
2025-01-26 02:48:52.019 +03:00 [INF] [Request] GET /Images/bongo-set.jpg

2025-01-26 02:48:52.024 +03:00 [INF] [Request] GET /Images/bongo.jpg

2025-01-26 02:48:52.025 +03:00 [INF] [Request] GET /Images/djembe.jpg

2025-01-26 02:48:52.028 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-26 02:48:52.034 +03:00 [INF] [Request] GET /Images/conga.jpg

2025-01-26 02:48:52.038 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-26 02:48:52.043 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/Home/styles.css, Response status code: 404
2025-01-26 02:48:52.053 +03:00 [INF] [Request] GET /Images/rope-djembe.jpg

2025-01-26 02:48:52.061 +03:00 [INF] [Request] GET /Images/compact-conga.jpg

2025-01-26 02:48:52.065 +03:00 [INF] [Response] 404 - 46ms

2025-01-26 02:48:52.067 +03:00 [INF] [Response] 404 - 43ms

2025-01-26 02:48:52.069 +03:00 [INF] [Response] 404 - 44ms

2025-01-26 02:48:52.073 +03:00 [INF] [Response] 404 - 44ms

2025-01-26 02:48:52.076 +03:00 [INF] [Response] 404 - 42ms

2025-01-26 02:48:52.079 +03:00 [INF] [Response] 404 - 40ms

2025-01-26 02:48:52.083 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-26 02:48:52.084 +03:00 [INF] [Response] 404 - 31ms

2025-01-26 02:48:52.089 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/bongo.jpg - 404 0 null 99.6705ms
2025-01-26 02:48:52.091 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/djembe.jpg - 404 0 null 102.6795ms
2025-01-26 02:48:52.092 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 103.7383ms
2025-01-26 02:48:52.094 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/conga.jpg - 404 0 null 105.3107ms
2025-01-26 02:48:52.097 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 108.4003ms
2025-01-26 02:48:52.087 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/bongo-set.jpg - 404 0 null 78.3176ms
2025-01-26 02:48:52.086 +03:00 [INF] [Response] 404 - 24ms

2025-01-26 02:48:52.102 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/rope-djembe.jpg - 404 0 null 93.413ms
2025-01-26 02:48:52.103 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 116.828ms
2025-01-26 02:48:52.107 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/Images/bongo.jpg, Response status code: 404
2025-01-26 02:48:52.110 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/Images/djembe.jpg, Response status code: 404
2025-01-26 02:48:52.116 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-26 02:48:52.119 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/Images/conga.jpg, Response status code: 404
2025-01-26 02:48:52.132 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-26 02:48:52.138 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/Images/bongo-set.jpg, Response status code: 404
2025-01-26 02:48:52.139 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/compact-conga.jpg - 404 0 null 128.8232ms
2025-01-26 02:48:52.143 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/Images/rope-djembe.jpg, Response status code: 404
2025-01-26 02:48:52.172 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 88.7768ms
2025-01-26 02:48:52.173 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/Images/compact-conga.jpg, Response status code: 404
2025-01-26 02:48:54.153 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 02:48:54.158 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 5.2602ms
2025-01-26 02:49:00.183 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/delebeg - null null
2025-01-26 02:49:00.198 +03:00 [INF] [Request] GET /Home/delebeg

2025-01-26 02:49:00.201 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.delebeg (MyShop)'
2025-01-26 02:49:00.204 +03:00 [INF] Route matched with {action = "delebeg", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult delebeg(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-26 02:49:00.209 +03:00 [INF] Executing ViewResult, running view delebeg.
2025-01-26 02:49:00.216 +03:00 [INF] Executed ViewResult - view delebeg executed in 8.0511ms.
2025-01-26 02:49:00.221 +03:00 [INF] Executed action MyShop.Controllers.HomeController.delebeg (MyShop) in 13.0328ms
2025-01-26 02:49:00.222 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.delebeg (MyShop)'
2025-01-26 02:49:00.223 +03:00 [INF] [Response] 200 - 25ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title> - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-26 02:49:00.270 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/delebeg - 200 null text/html; charset=utf-8 87.3895ms
2025-01-26 02:49:00.293 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-26 02:49:00.300 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 02:49:00.300 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-26 02:49:00.301 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-26 02:49:00.300 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-26 02:49:00.304 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 5.0577ms
2025-01-26 02:49:00.309 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-26 02:49:00.312 +03:00 [INF] [Response] 404 - 11ms

2025-01-26 02:49:00.324 +03:00 [INF] [Response] 404 - 15ms

2025-01-26 02:49:00.326 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 25.3982ms
2025-01-26 02:49:00.326 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 33.5992ms
2025-01-26 02:49:00.331 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 30.3171ms
2025-01-26 02:49:00.341 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-26 02:49:00.346 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-26 02:49:05.232 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 02:49:05.250 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 18.0093ms
2025-01-26 02:49:11.418 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/dacosticbeg - null null
2025-01-26 02:49:11.435 +03:00 [INF] [Request] GET /Home/dacosticbeg

2025-01-26 02:49:11.439 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.dacosticbeg (MyShop)'
2025-01-26 02:49:11.441 +03:00 [INF] Route matched with {action = "dacosticbeg", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult dacosticbeg(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-26 02:49:11.447 +03:00 [INF] Executing ViewResult, running view dacosticbeg.
2025-01-26 02:49:11.451 +03:00 [INF] Executed ViewResult - view dacosticbeg executed in 4.9697ms.
2025-01-26 02:49:11.452 +03:00 [INF] Executed action MyShop.Controllers.HomeController.dacosticbeg (MyShop) in 6.6761ms
2025-01-26 02:49:11.452 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.dacosticbeg (MyShop)'
2025-01-26 02:49:11.453 +03:00 [INF] [Response] 200 - 18ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title> - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-26 02:49:11.504 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/dacosticbeg - 200 null text/html; charset=utf-8 85.9607ms
2025-01-26 02:49:11.526 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-26 02:49:11.528 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-26 02:49:11.534 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 02:49:11.534 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-26 02:49:11.537 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-26 02:49:11.544 +03:00 [INF] [Response] 404 - 6ms

2025-01-26 02:49:11.540 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 5.9306ms
2025-01-26 02:49:11.547 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 21.7066ms
2025-01-26 02:49:11.534 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-26 02:49:11.564 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 29.8691ms
2025-01-26 02:49:11.566 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-26 02:49:11.568 +03:00 [INF] [Response] 404 - 33ms

2025-01-26 02:49:11.573 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 48.0137ms
2025-01-26 02:49:11.584 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-26 02:49:13.763 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 02:49:13.771 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 8.1393ms
2025-01-26 02:49:19.450 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/handpro - null null
2025-01-26 02:49:19.460 +03:00 [INF] [Request] GET /Home/handpro

2025-01-26 02:49:19.462 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.handpro (MyShop)'
2025-01-26 02:49:19.464 +03:00 [INF] Route matched with {action = "handpro", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult handpro(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-26 02:49:19.467 +03:00 [INF] Executing ViewResult, running view handpro.
2025-01-26 02:49:19.469 +03:00 [INF] Executed ViewResult - view handpro executed in 2.5299ms.
2025-01-26 02:49:19.471 +03:00 [INF] Executed action MyShop.Controllers.HomeController.handpro (MyShop) in 4.4791ms
2025-01-26 02:49:19.472 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.handpro (MyShop)'
2025-01-26 02:49:19.473 +03:00 [INF] [Response] 200 - 12ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title> - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-26 02:49:19.510 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/handpro - 200 null text/html; charset=utf-8 60.1174ms
2025-01-26 02:49:19.547 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 02:49:19.547 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-26 02:49:19.548 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-26 02:49:19.547 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-26 02:49:19.559 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-26 02:49:19.554 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 7.6558ms
2025-01-26 02:49:19.568 +03:00 [INF] [Response] 404 - 9ms

2025-01-26 02:49:19.568 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-26 02:49:19.572 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 23.9568ms
2025-01-26 02:49:19.574 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 26.7514ms
2025-01-26 02:49:19.574 +03:00 [INF] [Response] 404 - 6ms

2025-01-26 02:49:19.587 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-26 02:49:19.588 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 41.5346ms
2025-01-26 02:49:19.593 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-26 02:49:21.512 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 02:49:21.521 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 8.4151ms
2025-01-26 02:49:27.332 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/delepro - null null
2025-01-26 02:49:27.354 +03:00 [INF] [Request] GET /Home/delepro

2025-01-26 02:49:27.357 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.delepro (MyShop)'
2025-01-26 02:49:27.362 +03:00 [INF] Route matched with {action = "delepro", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult delepro(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-26 02:49:27.367 +03:00 [INF] Executing ViewResult, running view delepro.
2025-01-26 02:49:27.370 +03:00 [INF] Executed ViewResult - view delepro executed in 2.8435ms.
2025-01-26 02:49:27.371 +03:00 [INF] Executed action MyShop.Controllers.HomeController.delepro (MyShop) in 4.9138ms
2025-01-26 02:49:27.372 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.delepro (MyShop)'
2025-01-26 02:49:27.373 +03:00 [INF] [Response] 200 - 18ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title> - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-26 02:49:27.425 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/delepro - 200 null text/html; charset=utf-8 94.1376ms
2025-01-26 02:49:27.466 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-26 02:49:27.466 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 02:49:27.466 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-26 02:49:27.471 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-26 02:49:27.466 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-26 02:49:27.476 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 9.636ms
2025-01-26 02:49:27.484 +03:00 [INF] [Response] 404 - 12ms

2025-01-26 02:49:27.483 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-26 02:49:27.493 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 27.7242ms
2025-01-26 02:49:27.495 +03:00 [INF] [Response] 404 - 11ms

2025-01-26 02:49:27.497 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 30.9014ms
2025-01-26 02:49:27.501 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-26 02:49:27.502 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 36.094ms
2025-01-26 02:49:27.514 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-26 02:49:29.324 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 02:49:29.329 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 5.7239ms
2025-01-26 02:49:35.617 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/dacousticpro - null null
2025-01-26 02:49:35.628 +03:00 [INF] [Request] GET /Home/dacousticpro

2025-01-26 02:49:35.632 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.dacousticpro (MyShop)'
2025-01-26 02:49:35.643 +03:00 [INF] Route matched with {action = "dacousticpro", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult dacousticpro(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-26 02:49:35.652 +03:00 [INF] Executing ViewResult, running view dacousticpro.
2025-01-26 02:49:35.654 +03:00 [INF] Executed ViewResult - view dacousticpro executed in 2.8777ms.
2025-01-26 02:49:35.656 +03:00 [INF] Executed action MyShop.Controllers.HomeController.dacousticpro (MyShop) in 5.3534ms
2025-01-26 02:49:35.658 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.dacousticpro (MyShop)'
2025-01-26 02:49:35.661 +03:00 [INF] [Response] 200 - 33ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title> - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-26 02:49:35.697 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/dacousticpro - 200 null text/html; charset=utf-8 79.9953ms
2025-01-26 02:49:35.712 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-26 02:49:35.716 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-26 02:49:35.716 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-26 02:49:35.718 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-26 02:49:35.731 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-26 02:49:35.732 +03:00 [INF] [Response] 404 - 13ms

2025-01-26 02:49:35.736 +03:00 [INF] [Response] 404 - 4ms

2025-01-26 02:49:35.716 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 02:49:35.745 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 34.1268ms
2025-01-26 02:49:35.746 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 29.9798ms
2025-01-26 02:49:35.748 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 32.1472ms
2025-01-26 02:49:35.755 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 38.7081ms
2025-01-26 02:49:35.762 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-26 02:49:35.767 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-26 02:49:37.611 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 02:49:37.616 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 5.1993ms
2025-01-26 03:00:10.419 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-26 03:00:10.707 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-26 03:00:10.713 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-26 03:00:10.909 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-26 03:00:10.912 +03:00 [INF] Hosting environment: Development
2025-01-26 03:00:10.913 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-26 03:00:11.168 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-26 03:00:11.502 +03:00 [INF] [Request] GET /

2025-01-26 03:00:11.541 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-26 03:00:11.566 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-26 03:00:11.637 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-26 03:00:11.709 +03:00 [INF] Executed ViewResult - view Index executed in 75.8573ms.
2025-01-26 03:00:11.714 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 129.9842ms
2025-01-26 03:00:11.715 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-26 03:00:11.718 +03:00 [INF] [Response] 200 - 231ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Home - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
    

 <style>
    .instrument-name {
        margin-top: 10px; /* Add space between the image and the text */
        font-size: 16px; /* Adjust the text size */
        font-weight: bold; /* Bold text */
        text-align: center; /* Center the text */
    }
  </style>

<section class="category-section py-4">
    <div class="category-section">
        <h3 style="text-align: center; margin-bottom: 20px;">Start Shopping Here</h3>
        <div class="row">
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Guitars'">
                <img src="/Images/pavlo-t-5rEyYBPLN-w-unsplash.jpg" alt="Guitars" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Guitars</p>
            </div>
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Keyboards & Pianos'">
                <img src="/Images/pexels-mikhail-nilov-7570112.jpg" alt="Keyboards & Pianos" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Keyboards & Pianos</p>
            </div>
            <!-- Drums & Percussion -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Drums & Percussion'">
                <img src="/Images/pexels-reneterp-1327430.jpg" alt="Drums & Percussion" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Drums & Percussion</p>
            </div>
            <!-- Pro Audio -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Pro Audio'">
                <img src="/Images/pexels-everson-mayer-478307-1481312.jpg" alt="Pro Audio" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Pro Audio</p>
            </div>
            <!-- Band & Orchestra -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Band & Orchestra'">
                <img src="/Images/pexels-shottrotter-752535.jpg" alt="Band & Orchestra" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Band & Orchestra</p>
            </div>
            <!-- Accessories -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Accessories'">
                <img src="/Images/pexels-rombo-1510555-5280438.jpg" alt="Accessories" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Accessories</p>
            </div>
        </div>
    </div>
</section>


    <section class="membership-section text-center bg-dark text-white py-5">
    <div class="membership-section">
        <h2>Have no clue what to buy ?</h2>
        <p>Check out our professional guide to get the perfect suited instrument !</p>
        <form class="d-inline-flex mt-2" action="/Home/Guide" method="get">
            
            <button class="btn btn-danger" type="submit">professional Guide</button>
        </form>
        </div>
    </section>

    <section class="features-section py-5 bg-light">
            <div class="container">
            <div class="row text-center">
                <div class="col-md-3">
                    <img src="/Images/box.png" alt="Same Day Delivery" class="mb-sm-1" style="width: 40px; height: 40px;">
                    <h5>Same Day/Next Day Delivery</h5>
                    <p>Next day delivery on most orders in Jordan - Same day available</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/shopping-cart.png" alt="Biggest Selection" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Biggest Selection</h5>
                    <p>Largest collection of any store in MENA</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/user-talking-with-speech-bubble.png" alt="Top-notch Support" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Top-notch Support</h5>
                    <p>We are always happy to help in any way we can</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/secure-payment.png" alt="Secure Payments" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Secure Payments</h5>
                    <p>Cash on Delivery available</p>
                </div>
            </div>
            </div>
     </section>


    

    <!-- JavaScript to Toggle Forms -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.js"></script>


        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-26 03:00:11.834 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 677.3637ms
2025-01-26 03:00:11.837 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-26 03:00:11.837 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-26 03:00:11.839 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-26 03:00:11.837 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 03:00:11.865 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-26 03:00:11.870 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-26 03:00:11.887 +03:00 [INF] [Response] 404 - 17ms

2025-01-26 03:00:11.888 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 51.1513ms
2025-01-26 03:00:11.887 +03:00 [INF] [Response] 404 - 21ms

2025-01-26 03:00:11.903 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 65.5998ms
2025-01-26 03:00:11.910 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 73.1325ms
2025-01-26 03:00:11.917 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-26 03:00:11.920 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-26 03:00:11.959 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 120.4355ms
2025-01-26 03:00:14.730 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Guide? - null null
2025-01-26 03:00:14.750 +03:00 [INF] [Request] GET /Home/Guide
[QueryString] ?

2025-01-26 03:00:14.754 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Guide (MyShop)'
2025-01-26 03:00:14.758 +03:00 [INF] Route matched with {action = "Guide", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Guide(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-26 03:00:14.821 +03:00 [INF] Executing ViewResult, running view Guide.
2025-01-26 03:00:14.845 +03:00 [INF] Executed ViewResult - view Guide executed in 26.5719ms.
2025-01-26 03:00:14.847 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Guide (MyShop) in 86.9076ms
2025-01-26 03:00:14.849 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Guide (MyShop)'
2025-01-26 03:00:14.856 +03:00 [INF] [Response] 200 - 103ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Guide - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
<style>

    .instruments-section h1 {
        font-size: 2.5rem;
        font-weight: bold;
        text-align: center;
    }

    .instruments-section p {
        font-size: 1.25rem;
        color: #555;
        text-align: center;
    }

    /* Black Line */
    hr.thick-black-line {
        border: none; /* Remove default borders */
        height: 5px; /* Set the height */
        background-color: black !important; /* Force black color */
        margin: 0 auto; /* Center it horizontally */
        width: 80%; /* Adjust width */
    }


    /* Dropdown Buttons Alignment */
    .instrument-buttons {
        display: flex;
        gap: 1rem; /* Add spacing between dropdown buttons */
        padding-left: 10%; /* Align dropdown buttons with the left edge of the line */
    }

        .instrument-buttons .dropdown {
            display: inline-block;
        }

        /* Styling for Buttons */
        .instrument-buttons .btn {
            font-size: 1rem;
            font-weight: bold;
            padding: 0.5rem 1.5rem;
        }

    /* Dropdown Menu Styling */
    .dropdown-menu {
        font-size: 1rem;
        text-align: left;
    }



</style>


<section class="instruments-section text-center py-5">
    <h1 class="mb-3">Instruments</h1>
    <p class="mb-4">
        Here, the SoundWave’s expert players guide you through the intricacies of the instruments they play.
        Choose an instrument from one of the sections.
    </p>
    <hr class="thick-black-line mb-4" />

    <!-- Dropdown Buttons -->
    <div class="instrument-buttons text-start">
        <!-- Dropdown for Instruments -->
        <div class="dropdown">
            <button class="btn btn-light border text-danger dropdown-toggle"
                    type="button"
                    id="instrumentDropdown"
                    data-bs-toggle="dropdown"
                    aria-expanded="false">
                Instruments
            </button>
            <ul class="dropdown-menu" aria-labelledby="instrumentDropdown">
                <li><a class="dropdown-item instrument-item" href="#">Guitars</a></li>
                <li><a class="dropdown-item instrument-item" href="#">Drums</a></li>
                <li><a class="dropdown-item instrument-item" href="#">Orchestra</a></li>
            </ul>
        </div>

        <!-- Dropdown for Level -->
        <div class="dropdown">
            <button class="btn btn-light border text-danger dropdown-toggle"
                    type="button"
                    id="levelDropdown"
                    data-bs-toggle="dropdown"
                    aria-expanded="false">
                Level
            </button>
            <ul class="dropdown-menu" aria-labelledby="levelDropdown">
                <li><a class="dropdown-item level-item" href="#">Beginner</a></li>
                <li><a class="dropdown-item level-item" href="#">Professional</a></li>
            </ul>
        </div>
    </div>
    
    <div id="card-container" class="d-flex justify-content-center gap-4 mt-5"></div>

</section>

<script>
    const instrumentDropdown = document.querySelectorAll('.instrument-item');
    const levelDropdown = document.querySelectorAll('.level-item');
    const cardContainer = document.getElementById('card-container');

    let selectedInstrument = '';
    let selectedLevel = '';

    const guitarsData = [
        {
            img: '/Images/guitar-4750599_1280.jpg',
            title: 'Acoustic Guitar',
            link: '#'
        },
        {
            img: '/Images/electric-guitar-7815026_1280.jpg',
            title: 'Electric Guitar',
            link: '#'
        },
        {
            img: '/Images/bass-guitar-913092_1280.jpg',
            title: 'Bass Guitar',
            link: '#'
        }
    ];

    const DrumsData = [
        {
            img: '/Images/african-2771092_1280.jpg',
            title: 'Hand Drums',
            link: '#'
        },
        {
            img: '/Images/electronic-drum-pad-5854409_1280.jpg',
            title: 'Electronic Drums',
            link: '#'
        },
        {
            img: '/Images/drum-set-1839383_1280.jpg',
            title: 'Acoustic Drums',
            link: '#'
        }
    ];

    const OrchestraData = [
        {
            img: '/Images/bowed-instrument-1853324_1280.jpg',
            title: 'Strings',
            link: '#'
        },
        {
            img: '/Images/saxophone-3246650_1280.jpg',
            title: 'Brass',
            link: '#'
        },
        
    ];

    instrumentDropdown.forEach(item => {
        item.addEventListener('click', function () {
            selectedInstrument = this.textContent.trim();
            checkSelection();
        });
    });

    levelDropdown.forEach(item => {
        item.addEventListener('click', function () {
            selectedLevel = this.textContent.trim();
            checkSelection();
        });
    });

    function checkSelection() {
        if (selectedInstrument === 'Guitars' && selectedLevel === 'Beginner') {
            renderCards(guitarsData);
        } 
        else if (selectedInstrument === 'Guitars' && selectedLevel === 'Professional') {
            renderCards(guitarsData);
        }
        else if (selectedInstrument === 'Drums' && (selectedLevel === 'Professional' || selectedLevel === 'Beginner')) {
            renderCards(DrumsData);

        }
        else if (selectedInstrument === 'Orchestra' && (selectedLevel === 'Professional' || selectedLevel === 'Beginner')) {
            renderCards(OrchestraData);

        }
        else {
            cardContainer.innerHTML = ''; // Clear cards
        }
    }

    function renderCards(data) {
        cardContainer.innerHTML = ''; // Clear previous cards

        data.forEach(item => {
            if (item.title.toLowerCase() === 'electric guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'electricguid'; // Set link to electricguid for Beginners
                } else {
                    item.link = 'proelectric'; // Set link to proelectric for other levels
                }
            } else if (item.title.toLowerCase() === 'acoustic guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'acousticpeg'; // Set link to acousticpeg for Beginners
                } else {
                    item.link = 'acousticpro'; // Set link to acousticpro for other levels
                }
            } else if (item.title.toLowerCase() === 'bass guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'bassbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'basspro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'hand drums') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'handbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'handpro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'electronic drums') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'delebeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'delepro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'acoustic drums') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'dacosticbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'dacousticpro'; // Set link to basspro for other levels
                }
            } else {
                // Default case if no matches found
                item.link = 'default'; // Default link or other fallback
            }


            const card = document.createElement('div');
            card.classList.add('card');
            card.style.width = '22rem';
            card.style.textAlign = 'center';
            card.style.border = '1px solid #ddd';
            card.style.boxShadow = '0 4px 6px rgba(0, 0, 0, 0.1)';
            card.style.borderRadius = '8px';

            card.innerHTML = `
                    <img src="${item.img}" alt="${item.title}" style="width:100%;border-bottom:1px solid #ddd;">
                    <h5 style="font-size:1.25rem;font-weight:bold;margin:1rem 0;">${item.title}</h5>
                    <a href="${item.link}" class="btn btn-danger" style="margin-bottom:1rem;font-weight:bold;">Read more</a>
                `;
            cardContainer.appendChild(card);
            
            
        });
    }
</script>


<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-26 03:00:14.937 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Guide? - 200 null text/html; charset=utf-8 207.3042ms
2025-01-26 03:00:14.981 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 03:00:14.982 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-26 03:00:14.982 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-26 03:00:14.982 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-26 03:00:14.989 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 10.6228ms
2025-01-26 03:00:14.997 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-26 03:00:14.993 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-26 03:00:15.010 +03:00 [INF] [Response] 404 - 13ms

2025-01-26 03:00:15.014 +03:00 [INF] [Response] 404 - 20ms

2025-01-26 03:00:15.015 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 33.3026ms
2025-01-26 03:00:15.016 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 34.5382ms
2025-01-26 03:00:15.018 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-26 03:00:15.034 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-26 03:00:15.092 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 110.505ms
2025-01-26 03:00:20.996 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/handbeg - null null
2025-01-26 03:00:21.005 +03:00 [INF] [Request] GET /Home/handbeg

2025-01-26 03:00:21.010 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.handbeg (MyShop)'
2025-01-26 03:00:21.014 +03:00 [INF] Route matched with {action = "handbeg", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult handbeg(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-26 03:00:21.018 +03:00 [INF] Executing ViewResult, running view handbeg.
2025-01-26 03:00:21.032 +03:00 [INF] Executed ViewResult - view handbeg executed in 15.3042ms.
2025-01-26 03:00:21.035 +03:00 [INF] Executed action MyShop.Controllers.HomeController.handbeg (MyShop) in 19.0241ms
2025-01-26 03:00:21.036 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.handbeg (MyShop)'
2025-01-26 03:00:21.037 +03:00 [INF] [Response] 200 - 31ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Beginner Hand Drum Guide - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
<style>
    /* General Styles */
    body {
        font-family: 'Roboto', sans-serif;
        margin: 0;
        padding: 0;
        background-color: #f4f4f4;
        color: #333;
        line-height: 1.6;
    }

    /* Header Phrase Styles */
    .header-phrase {
        background-color: #333; /* Black */
        color: #fff;
        padding: 20px;
        text-align: center;
    }

    .header-phrase h1 {
        margin: 0;
        font-size: 2.5rem;
    }

    /* Main Content Styles */
    main {
        padding: 20px;
        max-width: 1200px;
        margin: 0 auto;
    }

    section {
        margin-bottom: 40px;
    }

    h2 {
        color: #d32f2f; /* Red */
        border-bottom: 2px solid #d32f2f; /* Red */
        padding-bottom: 10px;
        margin-bottom: 20px;
    }

    .content-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 20px;
    }

    .content-card {
        background-color: #fff;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease;
    }

    .content-card:hover {
        transform: translateY(-5px);
    }

    .content-card img {
        width: 100%;
        height: 200px;
        object-fit: cover;
    }

    .content-card h3 {
        margin: 15px;
        color: #333;
    }

    .content-card p, .content-card ul {
        margin: 0 15px 15px;
        color: #555;
    }

    .content-card ul {
        list-style-type: disc;
        padding-left: 20px;
    }

    /* Footer Phrase Styles */
    .footer-phrase {
        background-color: #333; /* Black */
        color: #fff;
        text-align: center;
        padding: 15px;
        margin-top: 40px;
    }
</style>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Beginner Hand Drum Guide</title>
    <link rel="stylesheet" href="styles.css">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
</head>
<body>
    <!-- Header Phrase -->
    <div class="header-phrase">
        <h1>Beginner Hand Drum Guide</h1>
    </div>

    <!-- Main Content -->
    <main>
        <!-- Section 1: Choosing Your First Hand Drum -->
        <section class="choosing-drum">
            <h2>1. Choosing Your First Hand Drum</h2>
            <div class="content-grid">
                <div class="content-card">
                    <img src="/Images/djembe-2413970_1280.jpg" alt="Djembe Drum">
                    <h3>Djembe</h3>
                    <p>Great for beginners, the djembe is versatile and easy to play. Look for one with a sturdy wood body and natural drumhead.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/conga-4590194_1280.jpg" alt="Conga Drum">
                    <h3>Conga</h3>
                    <p>A bit larger, congas are ideal for Latin and Afro-Cuban rhythms. Start with a single conga drum before expanding to a set.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/tape-1582143_1280.jpg" alt="Bongo Drums">
                    <h3>Bongos</h3>
                    <p>Compact and lightweight, bongos are perfect for small hands and learning simple rhythms.</p>
                </div>
            </div>
        </section>

        <!-- Section 2: Basic Playing Techniques -->
        <section class="basic-techniques">
            <h2>2. Basic Playing Techniques</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>Hand Positions</h3>
                    <ul>
                        <li>Use the pads of your fingers for softer tones.</li>
                        <li>Strike with the palm for deeper, resonant sounds.</li>
                    </ul>
                </div>
                <div class="content-card">
                    <h3>Basic Rhythms</h3>
                    <ul>
                        <li>Start with simple beats like "dum-dum-ta-ta" to build confidence.</li>
                        <li>Practice steady timing with a metronome.</li>
                    </ul>
                </div>
                <div class="content-card">
                    <h3>Posture</h3>
                    <ul>
                        <li>Sit comfortably with the drum between your knees or on a stand.</li>
                        <li>Keep your back straight to avoid strain.</li>
                    </ul>
                </div>
            </div>
        </section>

        <!-- Section 3: Accessories for Beginners -->
        <section class="accessories">
            <h2>3. Accessories for Beginners</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>Drum Bag</h3>
                    <p>Invest in a padded bag to protect your drum during transport.</p>
                </div>
                <div class="content-card">
                    <h3>Hand Cream</h3>
                    <p>Keep your hands moisturized to prevent discomfort during long practice sessions.</p>
                </div>
                <div class="content-card">
                    <h3>Practice Pad</h3>
                    <p>A rubber practice pad can help you work on rhythms quietly.</p>
                </div>
            </div>
        </section>

        <!-- Section 4: Recommended Starter Drums -->
        <section class="recommended-drums">
            <h2>4. Recommended Starter Drums</h2>
            <div class="content-grid">
                <div class="content-card">
                    <img src="/Images/african-1060423_1280.jpg" alt="Rope-Tuned Djembe">
                    <h3>Rope-Tuned Djembe</h3>
                    <p>Lightweight and portable, this drum is ideal for beginners exploring world rhythms.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/africa-2941133_1280.jpg" alt="Beginner Bongo Set">
                    <h3>Beginner Bongo Set</h3>
                    <p>An affordable and compact option for learning basic hand percussion techniques.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/compact.jpg" alt="Compact Conga">
                    <h3>Compact Conga</h3>
                    <p>Perfect for smaller spaces, this drum offers great sound without being bulky.</p>
                </div>
            </div>
        </section>
    </main>

    <!-- Footer Phrase -->
    <div class="footer-phrase">
        <p>Start Your Hand Drumming Journey Today!</p>
    </div>
</body>
</html>

        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-26 03:00:21.088 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/handbeg - 200 null text/html; charset=utf-8 91.8536ms
2025-01-26 03:00:21.113 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/styles.css - null null
2025-01-26 03:00:21.120 +03:00 [INF] [Request] GET /Home/styles.css

2025-01-26 03:00:21.121 +03:00 [INF] [Response] 404 - 1ms

2025-01-26 03:00:21.123 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/djembe-2413970_1280.jpg - null null
2025-01-26 03:00:21.125 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/tape-1582143_1280.jpg - null null
2025-01-26 03:00:21.126 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/african-1060423_1280.jpg - null null
2025-01-26 03:00:21.125 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 03:00:21.125 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/styles.css - 404 0 null 12.9405ms
2025-01-26 03:00:21.126 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/africa-2941133_1280.jpg - null null
2025-01-26 03:00:21.123 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/conga-4590194_1280.jpg - null null
2025-01-26 03:00:21.126 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/compact.jpg - null null
2025-01-26 03:00:21.135 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-26 03:00:21.149 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-26 03:00:21.154 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/Home/styles.css, Response status code: 404
2025-01-26 03:00:21.216 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-26 03:00:21.201 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-26 03:00:21.224 +03:00 [INF] [Response] 404 - 8ms

2025-01-26 03:00:21.227 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-26 03:00:21.229 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 80.5873ms
2025-01-26 03:00:21.230 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 105.7837ms
2025-01-26 03:00:21.245 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-26 03:00:21.227 +03:00 [INF] [Response] 404 - 26ms

2025-01-26 03:00:21.255 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 119.5757ms
2025-01-26 03:00:21.265 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-26 03:00:21.293 +03:00 [INF] Sending file. Request path: '/Images/africa-2941133_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\africa-2941133_1280.jpg'
2025-01-26 03:00:21.293 +03:00 [INF] Sending file. Request path: '/Images/djembe-2413970_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\djembe-2413970_1280.jpg'
2025-01-26 03:00:21.293 +03:00 [INF] Sending file. Request path: '/Images/compact.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\compact.jpg'
2025-01-26 03:00:21.304 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/djembe-2413970_1280.jpg - 200 182828 image/jpeg 181.5985ms
2025-01-26 03:00:21.312 +03:00 [INF] Sending file. Request path: '/Images/tape-1582143_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\tape-1582143_1280.jpg'
2025-01-26 03:00:21.312 +03:00 [INF] Sending file. Request path: '/Images/conga-4590194_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\conga-4590194_1280.jpg'
2025-01-26 03:00:21.298 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/africa-2941133_1280.jpg - 200 178967 image/jpeg 172.2489ms
2025-01-26 03:00:21.309 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 81.6633ms
2025-01-26 03:00:21.315 +03:00 [INF] Sending file. Request path: '/Images/african-1060423_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\african-1060423_1280.jpg'
2025-01-26 03:00:21.315 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/compact.jpg - 200 46591 image/jpeg 189.5099ms
2025-01-26 03:00:21.330 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/tape-1582143_1280.jpg - 200 287481 image/jpeg 205.0155ms
2025-01-26 03:00:21.333 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/conga-4590194_1280.jpg - 200 312720 image/jpeg 210.5311ms
2025-01-26 03:00:21.365 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/african-1060423_1280.jpg - 200 360050 image/jpeg 238.8903ms
2025-01-26 03:09:59.925 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-26 03:10:00.315 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-26 03:10:00.319 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-26 03:10:00.427 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-26 03:10:00.430 +03:00 [INF] Hosting environment: Development
2025-01-26 03:10:00.433 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-26 03:10:00.828 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-26 03:10:01.153 +03:00 [INF] [Request] GET /

2025-01-26 03:10:01.229 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-26 03:10:01.301 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-26 03:10:01.337 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-26 03:10:01.428 +03:00 [INF] Executed ViewResult - view Index executed in 97.434ms.
2025-01-26 03:10:01.431 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 126.0629ms
2025-01-26 03:10:01.432 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-26 03:10:01.436 +03:00 [INF] [Response] 200 - 295ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Home - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
    

 <style>
    .instrument-name {
        margin-top: 10px; /* Add space between the image and the text */
        font-size: 16px; /* Adjust the text size */
        font-weight: bold; /* Bold text */
        text-align: center; /* Center the text */
    }
  </style>

<section class="category-section py-4">
    <div class="category-section">
        <h3 style="text-align: center; margin-bottom: 20px;">Start Shopping Here</h3>
        <div class="row">
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Guitars'">
                <img src="/Images/pavlo-t-5rEyYBPLN-w-unsplash.jpg" alt="Guitars" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Guitars</p>
            </div>
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Keyboards & Pianos'">
                <img src="/Images/pexels-mikhail-nilov-7570112.jpg" alt="Keyboards & Pianos" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Keyboards & Pianos</p>
            </div>
            <!-- Drums & Percussion -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Drums & Percussion'">
                <img src="/Images/pexels-reneterp-1327430.jpg" alt="Drums & Percussion" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Drums & Percussion</p>
            </div>
            <!-- Pro Audio -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Pro Audio'">
                <img src="/Images/pexels-everson-mayer-478307-1481312.jpg" alt="Pro Audio" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Pro Audio</p>
            </div>
            <!-- Band & Orchestra -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Band & Orchestra'">
                <img src="/Images/pexels-shottrotter-752535.jpg" alt="Band & Orchestra" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Band & Orchestra</p>
            </div>
            <!-- Accessories -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Accessories'">
                <img src="/Images/pexels-rombo-1510555-5280438.jpg" alt="Accessories" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Accessories</p>
            </div>
        </div>
    </div>
</section>


    <section class="membership-section text-center bg-dark text-white py-5">
    <div class="membership-section">
        <h2>Have no clue what to buy ?</h2>
        <p>Check out our professional guide to get the perfect suited instrument !</p>
        <form class="d-inline-flex mt-2" action="/Home/Guide" method="get">
            
            <button class="btn btn-danger" type="submit">professional Guide</button>
        </form>
        </div>
    </section>

    <section class="features-section py-5 bg-light">
            <div class="container">
            <div class="row text-center">
                <div class="col-md-3">
                    <img src="/Images/box.png" alt="Same Day Delivery" class="mb-sm-1" style="width: 40px; height: 40px;">
                    <h5>Same Day/Next Day Delivery</h5>
                    <p>Next day delivery on most orders in Jordan - Same day available</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/shopping-cart.png" alt="Biggest Selection" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Biggest Selection</h5>
                    <p>Largest collection of any store in MENA</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/user-talking-with-speech-bubble.png" alt="Top-notch Support" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Top-notch Support</h5>
                    <p>We are always happy to help in any way we can</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/secure-payment.png" alt="Secure Payments" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Secure Payments</h5>
                    <p>Cash on Delivery available</p>
                </div>
            </div>
            </div>
     </section>


    

    <!-- JavaScript to Toggle Forms -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.js"></script>


        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-26 03:10:01.516 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 697.364ms
2025-01-26 03:10:01.528 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 03:10:01.529 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-26 03:10:01.534 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-26 03:10:01.529 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-26 03:10:01.560 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 32.5472ms
2025-01-26 03:10:01.565 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-26 03:10:01.571 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-26 03:10:01.602 +03:00 [INF] [Response] 404 - 36ms

2025-01-26 03:10:01.604 +03:00 [INF] [Response] 404 - 32ms

2025-01-26 03:10:01.606 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 76.3745ms
2025-01-26 03:10:01.606 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 77.1879ms
2025-01-26 03:10:01.613 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-26 03:10:01.620 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-26 03:10:01.669 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 135.6917ms
2025-01-26 03:10:04.893 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Guide? - null null
2025-01-26 03:10:04.911 +03:00 [INF] [Request] GET /Home/Guide
[QueryString] ?

2025-01-26 03:10:04.914 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Guide (MyShop)'
2025-01-26 03:10:04.922 +03:00 [INF] Route matched with {action = "Guide", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Guide(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-26 03:10:04.997 +03:00 [INF] Executing ViewResult, running view Guide.
2025-01-26 03:10:05.028 +03:00 [INF] Executed ViewResult - view Guide executed in 31.2729ms.
2025-01-26 03:10:05.045 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Guide (MyShop) in 118.5353ms
2025-01-26 03:10:05.055 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Guide (MyShop)'
2025-01-26 03:10:05.057 +03:00 [INF] [Response] 200 - 145ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Guide - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
<style>

    .instruments-section h1 {
        font-size: 2.5rem;
        font-weight: bold;
        text-align: center;
    }

    .instruments-section p {
        font-size: 1.25rem;
        color: #555;
        text-align: center;
    }

    /* Black Line */
    hr.thick-black-line {
        border: none; /* Remove default borders */
        height: 5px; /* Set the height */
        background-color: black !important; /* Force black color */
        margin: 0 auto; /* Center it horizontally */
        width: 80%; /* Adjust width */
    }


    /* Dropdown Buttons Alignment */
    .instrument-buttons {
        display: flex;
        gap: 1rem; /* Add spacing between dropdown buttons */
        padding-left: 10%; /* Align dropdown buttons with the left edge of the line */
    }

        .instrument-buttons .dropdown {
            display: inline-block;
        }

        /* Styling for Buttons */
        .instrument-buttons .btn {
            font-size: 1rem;
            font-weight: bold;
            padding: 0.5rem 1.5rem;
        }

    /* Dropdown Menu Styling */
    .dropdown-menu {
        font-size: 1rem;
        text-align: left;
    }



</style>


<section class="instruments-section text-center py-5">
    <h1 class="mb-3">Instruments</h1>
    <p class="mb-4">
        Here, the SoundWave’s expert players guide you through the intricacies of the instruments they play.
        Choose an instrument from one of the sections.
    </p>
    <hr class="thick-black-line mb-4" />

    <!-- Dropdown Buttons -->
    <div class="instrument-buttons text-start">
        <!-- Dropdown for Instruments -->
        <div class="dropdown">
            <button class="btn btn-light border text-danger dropdown-toggle"
                    type="button"
                    id="instrumentDropdown"
                    data-bs-toggle="dropdown"
                    aria-expanded="false">
                Instruments
            </button>
            <ul class="dropdown-menu" aria-labelledby="instrumentDropdown">
                <li><a class="dropdown-item instrument-item" href="#">Guitars</a></li>
                <li><a class="dropdown-item instrument-item" href="#">Drums</a></li>
                <li><a class="dropdown-item instrument-item" href="#">Orchestra</a></li>
            </ul>
        </div>

        <!-- Dropdown for Level -->
        <div class="dropdown">
            <button class="btn btn-light border text-danger dropdown-toggle"
                    type="button"
                    id="levelDropdown"
                    data-bs-toggle="dropdown"
                    aria-expanded="false">
                Level
            </button>
            <ul class="dropdown-menu" aria-labelledby="levelDropdown">
                <li><a class="dropdown-item level-item" href="#">Beginner</a></li>
                <li><a class="dropdown-item level-item" href="#">Professional</a></li>
            </ul>
        </div>
    </div>
    
    <div id="card-container" class="d-flex justify-content-center gap-4 mt-5"></div>

</section>

<script>
    const instrumentDropdown = document.querySelectorAll('.instrument-item');
    const levelDropdown = document.querySelectorAll('.level-item');
    const cardContainer = document.getElementById('card-container');

    let selectedInstrument = '';
    let selectedLevel = '';

    const guitarsData = [
        {
            img: '/Images/guitar-4750599_1280.jpg',
            title: 'Acoustic Guitar',
            link: '#'
        },
        {
            img: '/Images/electric-guitar-7815026_1280.jpg',
            title: 'Electric Guitar',
            link: '#'
        },
        {
            img: '/Images/bass-guitar-913092_1280.jpg',
            title: 'Bass Guitar',
            link: '#'
        }
    ];

    const DrumsData = [
        {
            img: '/Images/african-2771092_1280.jpg',
            title: 'Hand Drums',
            link: '#'
        },
        {
            img: '/Images/electronic-drum-pad-5854409_1280.jpg',
            title: 'Electronic Drums',
            link: '#'
        },
        {
            img: '/Images/drum-set-1839383_1280.jpg',
            title: 'Acoustic Drums',
            link: '#'
        }
    ];

    const OrchestraData = [
        {
            img: '/Images/bowed-instrument-1853324_1280.jpg',
            title: 'Strings',
            link: '#'
        },
        {
            img: '/Images/saxophone-3246650_1280.jpg',
            title: 'Brass',
            link: '#'
        },
        
    ];

    instrumentDropdown.forEach(item => {
        item.addEventListener('click', function () {
            selectedInstrument = this.textContent.trim();
            checkSelection();
        });
    });

    levelDropdown.forEach(item => {
        item.addEventListener('click', function () {
            selectedLevel = this.textContent.trim();
            checkSelection();
        });
    });

    function checkSelection() {
        if (selectedInstrument === 'Guitars' && selectedLevel === 'Beginner') {
            renderCards(guitarsData);
        } 
        else if (selectedInstrument === 'Guitars' && selectedLevel === 'Professional') {
            renderCards(guitarsData);
        }
        else if (selectedInstrument === 'Drums' && (selectedLevel === 'Professional' || selectedLevel === 'Beginner')) {
            renderCards(DrumsData);

        }
        else if (selectedInstrument === 'Orchestra' && (selectedLevel === 'Professional' || selectedLevel === 'Beginner')) {
            renderCards(OrchestraData);

        }
        else {
            cardContainer.innerHTML = ''; // Clear cards
        }
    }

    function renderCards(data) {
        cardContainer.innerHTML = ''; // Clear previous cards

        data.forEach(item => {
            if (item.title.toLowerCase() === 'electric guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'electricguid'; // Set link to electricguid for Beginners
                } else {
                    item.link = 'proelectric'; // Set link to proelectric for other levels
                }
            } else if (item.title.toLowerCase() === 'acoustic guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'acousticpeg'; // Set link to acousticpeg for Beginners
                } else {
                    item.link = 'acousticpro'; // Set link to acousticpro for other levels
                }
            } else if (item.title.toLowerCase() === 'bass guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'bassbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'basspro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'hand drums') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'handbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'handpro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'electronic drums') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'delebeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'delepro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'acoustic drums') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'dacosticbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'dacousticpro'; // Set link to basspro for other levels
                }
            } else {
                // Default case if no matches found
                item.link = 'default'; // Default link or other fallback
            }


            const card = document.createElement('div');
            card.classList.add('card');
            card.style.width = '22rem';
            card.style.textAlign = 'center';
            card.style.border = '1px solid #ddd';
            card.style.boxShadow = '0 4px 6px rgba(0, 0, 0, 0.1)';
            card.style.borderRadius = '8px';

            card.innerHTML = `
                    <img src="${item.img}" alt="${item.title}" style="width:100%;border-bottom:1px solid #ddd;">
                    <h5 style="font-size:1.25rem;font-weight:bold;margin:1rem 0;">${item.title}</h5>
                    <a href="${item.link}" class="btn btn-danger" style="margin-bottom:1rem;font-weight:bold;">Read more</a>
                `;
            cardContainer.appendChild(card);
            
            
        });
    }
</script>


<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-26 03:10:05.179 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Guide? - 200 null text/html; charset=utf-8 285.234ms
2025-01-26 03:10:05.223 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 03:10:05.224 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-26 03:10:05.224 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-26 03:10:05.224 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-26 03:10:05.230 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 6.9832ms
2025-01-26 03:10:05.234 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-26 03:10:05.236 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-26 03:10:05.247 +03:00 [INF] [Response] 404 - 12ms

2025-01-26 03:10:05.248 +03:00 [INF] [Response] 404 - 12ms

2025-01-26 03:10:05.251 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 27.0969ms
2025-01-26 03:10:05.252 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 28.6903ms
2025-01-26 03:10:05.257 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-26 03:10:05.267 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-26 03:10:05.280 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 55.7315ms
2025-01-26 03:10:12.920 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/handpro - null null
2025-01-26 03:10:12.928 +03:00 [INF] [Request] GET /Home/handpro

2025-01-26 03:10:12.935 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.handpro (MyShop)'
2025-01-26 03:10:12.940 +03:00 [INF] Route matched with {action = "handpro", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult handpro(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-26 03:10:12.944 +03:00 [INF] Executing ViewResult, running view handpro.
2025-01-26 03:10:12.972 +03:00 [INF] Executed ViewResult - view handpro executed in 28.7426ms.
2025-01-26 03:10:12.976 +03:00 [INF] Executed action MyShop.Controllers.HomeController.handpro (MyShop) in 33.3ms
2025-01-26 03:10:12.976 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.handpro (MyShop)'
2025-01-26 03:10:12.978 +03:00 [INF] [Response] 200 - 49ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Professional Hand Drum Guide - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
<style>
    /* General Styles */
    body {
        font-family: 'Roboto', sans-serif;
        margin: 0;
        padding: 0;
        background-color: #f4f4f4;
        color: #333;
        line-height: 1.6;
    }

    /* Header Phrase Styles */
    .header-phrase {
        background-color: #333; /* Black */
        color: #fff;
        padding: 20px;
        text-align: center;
    }

    .header-phrase h1 {
        margin: 0;
        font-size: 2.5rem;
    }

    /* Main Content Styles */
    main {
        padding: 20px;
        max-width: 1200px;
        margin: 0 auto;
    }

    section {
        margin-bottom: 40px;
    }

    h2 {
        color: #d32f2f; /* Red */
        border-bottom: 2px solid #d32f2f; /* Red */
        padding-bottom: 10px;
        margin-bottom: 20px;
    }

    .content-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 20px;
    }

    .content-card {
        background-color: #fff;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease;
    }

    .content-card:hover {
        transform: translateY(-5px);
    }

    .content-card img {
        width: 100%;
        height: 200px;
        object-fit: cover;
    }

    .content-card h3 {
        margin: 15px;
        color: #333;
    }

    .content-card p, .content-card ul {
        margin: 0 15px 15px;
        color: #555;
    }

    .content-card ul {
        list-style-type: disc;
        padding-left: 20px;
    }

    /* Footer Phrase Styles */
    .footer-phrase {
        background-color: #333; /* Black */
        color: #fff;
        text-align: center;
        padding: 15px;
        margin-top: 40px;
    }
</style>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Professional Hand Drum Guide</title>
    <link rel="stylesheet" href="styles.css">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
</head>
<body>
    <!-- Header Phrase -->
    <div class="header-phrase">
        <h1>Professional Hand Drum Guide</h1>
    </div>

    <!-- Main Content -->
    <main>
        <!-- Section 1: Selecting the Right Hand Drum -->
        <section class="choosing-drum">
            <h2>1. Selecting the Right Hand Drum</h2>
            <div class="content-grid">
                <div class="content-card">
                    <img src="/Images/djembe-2413970_1280.jpg" alt="Djembe Drum">
                    <h3>Djembe</h3>
                    <p>A versatile choice for intricate rhythms. Opt for a professional-grade djembe with a hardwood body and premium goat skin head.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/conga-4590194_1280.jpg" alt="Conga Drum">
                    <h3>Conga</h3>
                    <p>Ideal for Latin and Afro-Cuban styles. Invest in a matched pair (quinto and tumba) made from quality wood and hardware.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/tape-1582143_1280.jpg" alt="Bongo Drums">
                    <h3>Bongos</h3>
                    <p>Compact and precise, professional bongos should have robust tuning mechanisms and natural drumheads.</p>
                </div>
            </div>
        </section>

        <!-- Section 2: Advanced Playing Techniques -->
        <section class="advanced-techniques">
            <h2>2. Advanced Playing Techniques</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>Complex Rhythms</h3>
                    <ul>
                        <li>Master polyrhythms and syncopation for dynamic performances.</li>
                        <li>Explore traditional rhythms from various cultures.</li>
                    </ul>
                </div>
                <div class="content-card">
                    <h3>Sound Variation</h3>
                    <ul>
                        <li>Experiment with hand placement and striking angles to alter tones.</li>
                        <li>Incorporate finger rolls and slaps for expressive dynamics.</li>
                    </ul>
                </div>
                <div class="content-card">
                    <h3>Ensemble Techniques</h3>
                    <ul>
                        <li>Learn to blend with other instruments and percussionists.</li>
                        <li>Focus on maintaining consistent timing and volume balance.</li>
                    </ul>
                </div>
            </div>
        </section>

        <!-- Section 3: Accessories for Professionals -->
        <section class="accessories">
            <h2>3. Accessories for Professionals</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>High-Quality Cases</h3>
                    <p>Protect your investment with durable, padded cases designed for your drum type.</p>
                </div>
                <div class="content-card">
                    <h3>Drum Tuning Tools</h3>
                    <p>Maintain optimal sound with tuning wrenches and tension adjusters.</p>
                </div>
                <div class="content-card">
                    <h3>Microphones</h3>
                    <p>Use professional drum mics for live performances and recordings.</p>
                </div>
            </div>
        </section>

        <!-- Section 4: Recommended Professional Drums -->
        <section class="recommended-drums">
            <h2>4. Recommended Professional Drums</h2>
            <div class="content-grid">
                <div class="content-card">
                    <img src="/Images/woman-6659562_1280.jpg" alt="Professional Djembe">
                    <h3>Professional Djembe</h3>
                    <p>Handcrafted with premium materials for exceptional tonal range and durability.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/highconga.jpg" alt="High-End Congas">
                    <h3>High-End Congas</h3>
                    <p>Designed for experts, these drums deliver deep, resonant bass and crisp highs.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/prembonga.jpg" alt="Premium Bongos">
                    <h3>Premium Bongos</h3>
                    <p>Crafted for precise articulation, ideal for studio recordings and live performances.</p>
                </div>
            </div>
        </section>
    </main>

    <!-- Footer Phrase -->
    <div class="footer-phrase">
        <p>Elevate Your Hand Drumming Skills Today!</p>
    </div>
</body>
</html>

        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-26 03:10:13.040 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/handpro - 200 null text/html; charset=utf-8 120.669ms
2025-01-26 03:10:13.067 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 03:10:13.069 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/conga-4590194_1280.jpg - null null
2025-01-26 03:10:13.067 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/prembonga.jpg - null null
2025-01-26 03:10:13.068 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/djembe-2413970_1280.jpg - null null
2025-01-26 03:10:13.067 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/woman-6659562_1280.jpg - null null
2025-01-26 03:10:13.067 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/highconga.jpg - null null
2025-01-26 03:10:13.067 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/styles.css - null null
2025-01-26 03:10:13.074 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-26 03:10:13.075 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-26 03:10:13.094 +03:00 [INF] The file /Images/conga-4590194_1280.jpg was not modified
2025-01-26 03:10:13.097 +03:00 [INF] The file /Images/djembe-2413970_1280.jpg was not modified
2025-01-26 03:10:13.123 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/conga-4590194_1280.jpg - 304 null image/jpeg 54.2783ms
2025-01-26 03:10:13.124 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/djembe-2413970_1280.jpg - 304 null image/jpeg 55.7331ms
2025-01-26 03:10:13.133 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 66.4525ms
2025-01-26 03:10:13.128 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-26 03:10:13.111 +03:00 [INF] [Request] GET /Home/styles.css

2025-01-26 03:10:13.117 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-26 03:10:13.152 +03:00 [INF] [Response] 404 - 41ms

2025-01-26 03:10:13.154 +03:00 [INF] [Response] 404 - 36ms

2025-01-26 03:10:13.159 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/styles.css - 404 0 null 92.5601ms
2025-01-26 03:10:13.175 +03:00 [INF] Sending file. Request path: '/Images/prembonga.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\prembonga.jpg'
2025-01-26 03:10:13.177 +03:00 [INF] Sending file. Request path: '/Images/highconga.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\highconga.jpg'
2025-01-26 03:10:13.188 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/prembonga.jpg - 200 47987 image/jpeg 121.0999ms
2025-01-26 03:10:13.175 +03:00 [INF] Sending file. Request path: '/Images/woman-6659562_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\woman-6659562_1280.jpg'
2025-01-26 03:10:13.185 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/Home/styles.css, Response status code: 404
2025-01-26 03:10:13.171 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 97.3463ms
2025-01-26 03:10:13.077 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/tape-1582143_1280.jpg - null null
2025-01-26 03:10:13.122 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-26 03:10:13.191 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 63.2369ms
2025-01-26 03:10:13.191 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/highconga.jpg - 200 412486 image/jpeg 123.8045ms
2025-01-26 03:10:13.198 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/woman-6659562_1280.jpg - 200 396247 image/jpeg 131.104ms
2025-01-26 03:10:13.206 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-26 03:10:13.209 +03:00 [INF] The file /Images/tape-1582143_1280.jpg was not modified
2025-01-26 03:10:13.209 +03:00 [INF] [Response] 404 - 87ms

2025-01-26 03:10:13.230 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/tape-1582143_1280.jpg - 304 null image/jpeg 153.0086ms
2025-01-26 03:10:13.232 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 157.3182ms
2025-01-26 03:10:13.250 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-26 03:11:54.511 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-26 03:11:54.825 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-26 03:11:54.827 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-26 03:11:54.926 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-26 03:11:54.928 +03:00 [INF] Hosting environment: Development
2025-01-26 03:11:54.929 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-26 03:11:55.643 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-26 03:11:56.016 +03:00 [INF] [Request] GET /

2025-01-26 03:11:56.086 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-26 03:11:56.126 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-26 03:11:56.152 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-26 03:11:56.242 +03:00 [INF] Executed ViewResult - view Index executed in 89.2349ms.
2025-01-26 03:11:56.248 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 119.7883ms
2025-01-26 03:11:56.250 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-26 03:11:56.252 +03:00 [INF] [Response] 200 - 250ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Home - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
    

 <style>
    .instrument-name {
        margin-top: 10px; /* Add space between the image and the text */
        font-size: 16px; /* Adjust the text size */
        font-weight: bold; /* Bold text */
        text-align: center; /* Center the text */
    }
  </style>

<section class="category-section py-4">
    <div class="category-section">
        <h3 style="text-align: center; margin-bottom: 20px;">Start Shopping Here</h3>
        <div class="row">
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Guitars'">
                <img src="/Images/pavlo-t-5rEyYBPLN-w-unsplash.jpg" alt="Guitars" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Guitars</p>
            </div>
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Keyboards & Pianos'">
                <img src="/Images/pexels-mikhail-nilov-7570112.jpg" alt="Keyboards & Pianos" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Keyboards & Pianos</p>
            </div>
            <!-- Drums & Percussion -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Drums & Percussion'">
                <img src="/Images/pexels-reneterp-1327430.jpg" alt="Drums & Percussion" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Drums & Percussion</p>
            </div>
            <!-- Pro Audio -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Pro Audio'">
                <img src="/Images/pexels-everson-mayer-478307-1481312.jpg" alt="Pro Audio" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Pro Audio</p>
            </div>
            <!-- Band & Orchestra -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Band & Orchestra'">
                <img src="/Images/pexels-shottrotter-752535.jpg" alt="Band & Orchestra" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Band & Orchestra</p>
            </div>
            <!-- Accessories -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Accessories'">
                <img src="/Images/pexels-rombo-1510555-5280438.jpg" alt="Accessories" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Accessories</p>
            </div>
        </div>
    </div>
</section>


    <section class="membership-section text-center bg-dark text-white py-5">
    <div class="membership-section">
        <h2>Have no clue what to buy ?</h2>
        <p>Check out our professional guide to get the perfect suited instrument !</p>
        <form class="d-inline-flex mt-2" action="/Home/Guide" method="get">
            
            <button class="btn btn-danger" type="submit">professional Guide</button>
        </form>
        </div>
    </section>

    <section class="features-section py-5 bg-light">
            <div class="container">
            <div class="row text-center">
                <div class="col-md-3">
                    <img src="/Images/box.png" alt="Same Day Delivery" class="mb-sm-1" style="width: 40px; height: 40px;">
                    <h5>Same Day/Next Day Delivery</h5>
                    <p>Next day delivery on most orders in Jordan - Same day available</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/shopping-cart.png" alt="Biggest Selection" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Biggest Selection</h5>
                    <p>Largest collection of any store in MENA</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/user-talking-with-speech-bubble.png" alt="Top-notch Support" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Top-notch Support</h5>
                    <p>We are always happy to help in any way we can</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/secure-payment.png" alt="Secure Payments" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Secure Payments</h5>
                    <p>Cash on Delivery available</p>
                </div>
            </div>
            </div>
     </section>


    

    <!-- JavaScript to Toggle Forms -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.js"></script>


        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-26 03:11:56.341 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 720.1815ms
2025-01-26 03:11:56.347 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 03:11:56.350 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-26 03:11:56.353 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-26 03:11:56.354 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-26 03:11:56.374 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 27.8308ms
2025-01-26 03:11:56.378 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-26 03:11:56.380 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-26 03:11:56.396 +03:00 [INF] [Response] 404 - 17ms

2025-01-26 03:11:56.396 +03:00 [INF] [Response] 404 - 15ms

2025-01-26 03:11:56.399 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 49.0345ms
2025-01-26 03:11:56.400 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 46.3225ms
2025-01-26 03:11:56.405 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-26 03:11:56.407 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-26 03:11:56.437 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 83.5713ms
2025-01-26 03:11:59.645 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Guide? - null null
2025-01-26 03:11:59.671 +03:00 [INF] [Request] GET /Home/Guide
[QueryString] ?

2025-01-26 03:11:59.678 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Guide (MyShop)'
2025-01-26 03:11:59.683 +03:00 [INF] Route matched with {action = "Guide", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Guide(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-26 03:11:59.747 +03:00 [INF] Executing ViewResult, running view Guide.
2025-01-26 03:11:59.773 +03:00 [INF] Executed ViewResult - view Guide executed in 26.1387ms.
2025-01-26 03:11:59.775 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Guide (MyShop) in 88.4624ms
2025-01-26 03:11:59.776 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Guide (MyShop)'
2025-01-26 03:11:59.778 +03:00 [INF] [Response] 200 - 106ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Guide - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
<style>

    .instruments-section h1 {
        font-size: 2.5rem;
        font-weight: bold;
        text-align: center;
    }

    .instruments-section p {
        font-size: 1.25rem;
        color: #555;
        text-align: center;
    }

    /* Black Line */
    hr.thick-black-line {
        border: none; /* Remove default borders */
        height: 5px; /* Set the height */
        background-color: black !important; /* Force black color */
        margin: 0 auto; /* Center it horizontally */
        width: 80%; /* Adjust width */
    }


    /* Dropdown Buttons Alignment */
    .instrument-buttons {
        display: flex;
        gap: 1rem; /* Add spacing between dropdown buttons */
        padding-left: 10%; /* Align dropdown buttons with the left edge of the line */
    }

        .instrument-buttons .dropdown {
            display: inline-block;
        }

        /* Styling for Buttons */
        .instrument-buttons .btn {
            font-size: 1rem;
            font-weight: bold;
            padding: 0.5rem 1.5rem;
        }

    /* Dropdown Menu Styling */
    .dropdown-menu {
        font-size: 1rem;
        text-align: left;
    }



</style>


<section class="instruments-section text-center py-5">
    <h1 class="mb-3">Instruments</h1>
    <p class="mb-4">
        Here, the SoundWave’s expert players guide you through the intricacies of the instruments they play.
        Choose an instrument from one of the sections.
    </p>
    <hr class="thick-black-line mb-4" />

    <!-- Dropdown Buttons -->
    <div class="instrument-buttons text-start">
        <!-- Dropdown for Instruments -->
        <div class="dropdown">
            <button class="btn btn-light border text-danger dropdown-toggle"
                    type="button"
                    id="instrumentDropdown"
                    data-bs-toggle="dropdown"
                    aria-expanded="false">
                Instruments
            </button>
            <ul class="dropdown-menu" aria-labelledby="instrumentDropdown">
                <li><a class="dropdown-item instrument-item" href="#">Guitars</a></li>
                <li><a class="dropdown-item instrument-item" href="#">Drums</a></li>
                <li><a class="dropdown-item instrument-item" href="#">Orchestra</a></li>
            </ul>
        </div>

        <!-- Dropdown for Level -->
        <div class="dropdown">
            <button class="btn btn-light border text-danger dropdown-toggle"
                    type="button"
                    id="levelDropdown"
                    data-bs-toggle="dropdown"
                    aria-expanded="false">
                Level
            </button>
            <ul class="dropdown-menu" aria-labelledby="levelDropdown">
                <li><a class="dropdown-item level-item" href="#">Beginner</a></li>
                <li><a class="dropdown-item level-item" href="#">Professional</a></li>
            </ul>
        </div>
    </div>
    
    <div id="card-container" class="d-flex justify-content-center gap-4 mt-5"></div>

</section>

<script>
    const instrumentDropdown = document.querySelectorAll('.instrument-item');
    const levelDropdown = document.querySelectorAll('.level-item');
    const cardContainer = document.getElementById('card-container');

    let selectedInstrument = '';
    let selectedLevel = '';

    const guitarsData = [
        {
            img: '/Images/guitar-4750599_1280.jpg',
            title: 'Acoustic Guitar',
            link: '#'
        },
        {
            img: '/Images/electric-guitar-7815026_1280.jpg',
            title: 'Electric Guitar',
            link: '#'
        },
        {
            img: '/Images/bass-guitar-913092_1280.jpg',
            title: 'Bass Guitar',
            link: '#'
        }
    ];

    const DrumsData = [
        {
            img: '/Images/african-2771092_1280.jpg',
            title: 'Hand Drums',
            link: '#'
        },
        {
            img: '/Images/electronic-drum-pad-5854409_1280.jpg',
            title: 'Electronic Drums',
            link: '#'
        },
        {
            img: '/Images/drum-set-1839383_1280.jpg',
            title: 'Acoustic Drums',
            link: '#'
        }
    ];

    const OrchestraData = [
        {
            img: '/Images/bowed-instrument-1853324_1280.jpg',
            title: 'Strings',
            link: '#'
        },
        {
            img: '/Images/saxophone-3246650_1280.jpg',
            title: 'Brass',
            link: '#'
        },
        
    ];

    instrumentDropdown.forEach(item => {
        item.addEventListener('click', function () {
            selectedInstrument = this.textContent.trim();
            checkSelection();
        });
    });

    levelDropdown.forEach(item => {
        item.addEventListener('click', function () {
            selectedLevel = this.textContent.trim();
            checkSelection();
        });
    });

    function checkSelection() {
        if (selectedInstrument === 'Guitars' && selectedLevel === 'Beginner') {
            renderCards(guitarsData);
        } 
        else if (selectedInstrument === 'Guitars' && selectedLevel === 'Professional') {
            renderCards(guitarsData);
        }
        else if (selectedInstrument === 'Drums' && (selectedLevel === 'Professional' || selectedLevel === 'Beginner')) {
            renderCards(DrumsData);

        }
        else if (selectedInstrument === 'Orchestra' && (selectedLevel === 'Professional' || selectedLevel === 'Beginner')) {
            renderCards(OrchestraData);

        }
        else {
            cardContainer.innerHTML = ''; // Clear cards
        }
    }

    function renderCards(data) {
        cardContainer.innerHTML = ''; // Clear previous cards

        data.forEach(item => {
            if (item.title.toLowerCase() === 'electric guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'electricguid'; // Set link to electricguid for Beginners
                } else {
                    item.link = 'proelectric'; // Set link to proelectric for other levels
                }
            } else if (item.title.toLowerCase() === 'acoustic guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'acousticpeg'; // Set link to acousticpeg for Beginners
                } else {
                    item.link = 'acousticpro'; // Set link to acousticpro for other levels
                }
            } else if (item.title.toLowerCase() === 'bass guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'bassbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'basspro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'hand drums') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'handbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'handpro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'electronic drums') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'delebeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'delepro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'acoustic drums') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'dacosticbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'dacousticpro'; // Set link to basspro for other levels
                }
            } else {
                // Default case if no matches found
                item.link = 'default'; // Default link or other fallback
            }


            const card = document.createElement('div');
            card.classList.add('card');
            card.style.width = '22rem';
            card.style.textAlign = 'center';
            card.style.border = '1px solid #ddd';
            card.style.boxShadow = '0 4px 6px rgba(0, 0, 0, 0.1)';
            card.style.borderRadius = '8px';

            card.innerHTML = `
                    <img src="${item.img}" alt="${item.title}" style="width:100%;border-bottom:1px solid #ddd;">
                    <h5 style="font-size:1.25rem;font-weight:bold;margin:1rem 0;">${item.title}</h5>
                    <a href="${item.link}" class="btn btn-danger" style="margin-bottom:1rem;font-weight:bold;">Read more</a>
                `;
            cardContainer.appendChild(card);
            
            
        });
    }
</script>


<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-26 03:11:59.837 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Guide? - 200 null text/html; charset=utf-8 191.2576ms
2025-01-26 03:11:59.879 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 03:11:59.880 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-26 03:11:59.880 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-26 03:11:59.880 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-26 03:11:59.891 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-26 03:11:59.889 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 8.8446ms
2025-01-26 03:11:59.896 +03:00 [INF] [Response] 404 - 5ms

2025-01-26 03:11:59.896 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-26 03:11:59.901 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 21.8434ms
2025-01-26 03:11:59.903 +03:00 [INF] [Response] 404 - 6ms

2025-01-26 03:11:59.908 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-26 03:11:59.910 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 30.1595ms
2025-01-26 03:11:59.936 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-26 03:11:59.942 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 62.7179ms
2025-01-26 03:12:05.897 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/handpro - null null
2025-01-26 03:12:05.909 +03:00 [INF] [Request] GET /Home/handpro

2025-01-26 03:12:05.915 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.handpro (MyShop)'
2025-01-26 03:12:05.923 +03:00 [INF] Route matched with {action = "handpro", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult handpro(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-26 03:12:05.929 +03:00 [INF] Executing ViewResult, running view handpro.
2025-01-26 03:12:05.942 +03:00 [INF] Executed ViewResult - view handpro executed in 14.4617ms.
2025-01-26 03:12:05.944 +03:00 [INF] Executed action MyShop.Controllers.HomeController.handpro (MyShop) in 17.9037ms
2025-01-26 03:12:05.945 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.handpro (MyShop)'
2025-01-26 03:12:05.947 +03:00 [INF] [Response] 200 - 37ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Professional Hand Drum Guide - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
<style>
    /* General Styles */
    body {
        font-family: 'Roboto', sans-serif;
        margin: 0;
        padding: 0;
        background-color: #f4f4f4;
        color: #333;
        line-height: 1.6;
    }

    /* Header Phrase Styles */
    .header-phrase {
        background-color: #333; /* Black */
        color: #fff;
        padding: 20px;
        text-align: center;
    }

    .header-phrase h1 {
        margin: 0;
        font-size: 2.5rem;
    }

    /* Main Content Styles */
    main {
        padding: 20px;
        max-width: 1200px;
        margin: 0 auto;
    }

    section {
        margin-bottom: 40px;
    }

    h2 {
        color: #d32f2f; /* Red */
        border-bottom: 2px solid #d32f2f; /* Red */
        padding-bottom: 10px;
        margin-bottom: 20px;
    }

    .content-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 20px;
    }

    .content-card {
        background-color: #fff;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease;
    }

    .content-card:hover {
        transform: translateY(-5px);
    }

    .content-card img {
        width: 100%;
        height: 200px;
        object-fit: cover;
    }

    .content-card h3 {
        margin: 15px;
        color: #333;
    }

    .content-card p, .content-card ul {
        margin: 0 15px 15px;
        color: #555;
    }

    .content-card ul {
        list-style-type: disc;
        padding-left: 20px;
    }

    /* Footer Phrase Styles */
    .footer-phrase {
        background-color: #333; /* Black */
        color: #fff;
        text-align: center;
        padding: 15px;
        margin-top: 40px;
    }
</style>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Professional Hand Drum Guide</title>
    <link rel="stylesheet" href="styles.css">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
</head>
<body>
    <!-- Header Phrase -->
    <div class="header-phrase">
        <h1>Professional Hand Drum Guide</h1>
    </div>

    <!-- Main Content -->
    <main>
        <!-- Section 1: Selecting the Right Hand Drum -->
        <section class="choosing-drum">
            <h2>1. Selecting the Right Hand Drum</h2>
            <div class="content-grid">
                <div class="content-card">
                    <img src="/Images/djembe-2413970_1280.jpg" alt="Djembe Drum">
                    <h3>Djembe</h3>
                    <p>A versatile choice for intricate rhythms. Opt for a professional-grade djembe with a hardwood body and premium goat skin head.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/conga-4590194_1280.jpg" alt="Conga Drum">
                    <h3>Conga</h3>
                    <p>Ideal for Latin and Afro-Cuban styles. Invest in a matched pair (quinto and tumba) made from quality wood and hardware.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/tape-1582143_1280.jpg" alt="Bongo Drums">
                    <h3>Bongos</h3>
                    <p>Compact and precise, professional bongos should have robust tuning mechanisms and natural drumheads.</p>
                </div>
            </div>
        </section>

        <!-- Section 2: Advanced Playing Techniques -->
        <section class="advanced-techniques">
            <h2>2. Advanced Playing Techniques</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>Complex Rhythms</h3>
                    <ul>
                        <li>Master polyrhythms and syncopation for dynamic performances.</li>
                        <li>Explore traditional rhythms from various cultures.</li>
                    </ul>
                </div>
                <div class="content-card">
                    <h3>Sound Variation</h3>
                    <ul>
                        <li>Experiment with hand placement and striking angles to alter tones.</li>
                        <li>Incorporate finger rolls and slaps for expressive dynamics.</li>
                    </ul>
                </div>
                <div class="content-card">
                    <h3>Ensemble Techniques</h3>
                    <ul>
                        <li>Learn to blend with other instruments and percussionists.</li>
                        <li>Focus on maintaining consistent timing and volume balance.</li>
                    </ul>
                </div>
            </div>
        </section>

        <!-- Section 3: Accessories for Professionals -->
        <section class="accessories">
            <h2>3. Accessories for Professionals</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>High-Quality Cases</h3>
                    <p>Protect your investment with durable, padded cases designed for your drum type.</p>
                </div>
                <div class="content-card">
                    <h3>Drum Tuning Tools</h3>
                    <p>Maintain optimal sound with tuning wrenches and tension adjusters.</p>
                </div>
                <div class="content-card">
                    <h3>Microphones</h3>
                    <p>Use professional drum mics for live performances and recordings.</p>
                </div>
            </div>
        </section>

        <!-- Section 4: Recommended Professional Drums -->
        <section class="recommended-drums">
            <h2>4. Recommended Professional Drums</h2>
            <div class="content-grid">
                <div class="content-card">
                    <img src="/Images/prodjemba.jpg" alt="Professional Djembe">
                    <h3>Professional Djembe</h3>
                    <p>Handcrafted with premium materials for exceptional tonal range and durability.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/highconga.jpg" alt="High-End Congas">
                    <h3>High-End Congas</h3>
                    <p>Designed for experts, these drums deliver deep, resonant bass and crisp highs.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/prembonga.jpg" alt="Premium Bongos">
                    <h3>Premium Bongos</h3>
                    <p>Crafted for precise articulation, ideal for studio recordings and live performances.</p>
                </div>
            </div>
        </section>
    </main>

    <!-- Footer Phrase -->
    <div class="footer-phrase">
        <p>Elevate Your Hand Drumming Skills Today!</p>
    </div>
</body>
</html>

        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-26 03:12:05.992 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/handpro - 200 null text/html; charset=utf-8 95.0261ms
2025-01-26 03:12:06.013 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/prodjemba.jpg - null null
2025-01-26 03:12:06.018 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-26 03:12:06.015 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/styles.css - null null
2025-01-26 03:12:06.017 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-26 03:12:06.015 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/djembe-2413970_1280.jpg - null null
2025-01-26 03:12:06.018 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/tape-1582143_1280.jpg - null null
2025-01-26 03:12:06.017 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/conga-4590194_1280.jpg - null null
2025-01-26 03:12:06.013 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 03:12:06.023 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/highconga.jpg - null null
2025-01-26 03:12:06.028 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-26 03:12:06.031 +03:00 [INF] [Request] GET /Home/styles.css

2025-01-26 03:12:06.048 +03:00 [INF] [Response] 404 - 19ms

2025-01-26 03:12:06.049 +03:00 [INF] [Response] 404 - 17ms

2025-01-26 03:12:06.035 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-26 03:12:06.049 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 31.715ms
2025-01-26 03:12:06.050 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/styles.css - 404 0 null 35.321ms
2025-01-26 03:12:06.052 +03:00 [INF] [Response] 404 - 16ms

2025-01-26 03:12:06.041 +03:00 [INF] The file /Images/djembe-2413970_1280.jpg was not modified
2025-01-26 03:12:06.041 +03:00 [INF] The file /Images/tape-1582143_1280.jpg was not modified
2025-01-26 03:12:06.044 +03:00 [INF] The file /Images/conga-4590194_1280.jpg was not modified
2025-01-26 03:12:06.046 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/prembonga.jpg - null null
2025-01-26 03:12:06.048 +03:00 [INF] The file /Images/highconga.jpg was not modified
2025-01-26 03:12:06.056 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-26 03:12:06.057 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-26 03:12:06.060 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/Home/styles.css, Response status code: 404
2025-01-26 03:12:06.061 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 44.3445ms
2025-01-26 03:12:06.062 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/djembe-2413970_1280.jpg - 304 null image/jpeg 46.6197ms
2025-01-26 03:12:06.092 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-26 03:12:06.062 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/tape-1582143_1280.jpg - 304 null image/jpeg 44.4507ms
2025-01-26 03:12:06.063 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/conga-4590194_1280.jpg - 304 null image/jpeg 46.3939ms
2025-01-26 03:12:06.078 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 64.9944ms
2025-01-26 03:12:06.065 +03:00 [INF] The file /Images/prembonga.jpg was not modified
2025-01-26 03:12:06.066 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/highconga.jpg - 304 null image/jpeg 42.176ms
2025-01-26 03:12:06.102 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 45.5295ms
2025-01-26 03:12:06.106 +03:00 [INF] Sending file. Request path: '/Images/prodjemba.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\prodjemba.jpg'
2025-01-26 03:12:06.110 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/prembonga.jpg - 304 null image/jpeg 64.2339ms
2025-01-26 03:12:06.116 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/prodjemba.jpg - 200 125463 image/jpeg 102.8603ms
2025-01-26 03:14:15.761 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-26 03:14:16.155 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-26 03:14:16.157 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-26 03:14:16.245 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-26 03:14:16.248 +03:00 [INF] Hosting environment: Development
2025-01-26 03:14:16.249 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-26 03:14:16.866 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-26 03:14:17.255 +03:00 [INF] [Request] GET /

2025-01-26 03:14:17.311 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-26 03:14:17.331 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-26 03:14:17.358 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-26 03:14:17.462 +03:00 [INF] Executed ViewResult - view Index executed in 110.0113ms.
2025-01-26 03:14:17.467 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 131.6771ms
2025-01-26 03:14:17.472 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-26 03:14:17.475 +03:00 [INF] [Response] 200 - 231ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Home - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
    

 <style>
    .instrument-name {
        margin-top: 10px; /* Add space between the image and the text */
        font-size: 16px; /* Adjust the text size */
        font-weight: bold; /* Bold text */
        text-align: center; /* Center the text */
    }
  </style>

<section class="category-section py-4">
    <div class="category-section">
        <h3 style="text-align: center; margin-bottom: 20px;">Start Shopping Here</h3>
        <div class="row">
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Guitars'">
                <img src="/Images/pavlo-t-5rEyYBPLN-w-unsplash.jpg" alt="Guitars" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Guitars</p>
            </div>
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Keyboards & Pianos'">
                <img src="/Images/pexels-mikhail-nilov-7570112.jpg" alt="Keyboards & Pianos" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Keyboards & Pianos</p>
            </div>
            <!-- Drums & Percussion -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Drums & Percussion'">
                <img src="/Images/pexels-reneterp-1327430.jpg" alt="Drums & Percussion" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Drums & Percussion</p>
            </div>
            <!-- Pro Audio -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Pro Audio'">
                <img src="/Images/pexels-everson-mayer-478307-1481312.jpg" alt="Pro Audio" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Pro Audio</p>
            </div>
            <!-- Band & Orchestra -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Band & Orchestra'">
                <img src="/Images/pexels-shottrotter-752535.jpg" alt="Band & Orchestra" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Band & Orchestra</p>
            </div>
            <!-- Accessories -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Accessories'">
                <img src="/Images/pexels-rombo-1510555-5280438.jpg" alt="Accessories" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Accessories</p>
            </div>
        </div>
    </div>
</section>


    <section class="membership-section text-center bg-dark text-white py-5">
    <div class="membership-section">
        <h2>Have no clue what to buy ?</h2>
        <p>Check out our professional guide to get the perfect suited instrument !</p>
        <form class="d-inline-flex mt-2" action="/Home/Guide" method="get">
            
            <button class="btn btn-danger" type="submit">professional Guide</button>
        </form>
        </div>
    </section>

    <section class="features-section py-5 bg-light">
            <div class="container">
            <div class="row text-center">
                <div class="col-md-3">
                    <img src="/Images/box.png" alt="Same Day Delivery" class="mb-sm-1" style="width: 40px; height: 40px;">
                    <h5>Same Day/Next Day Delivery</h5>
                    <p>Next day delivery on most orders in Jordan - Same day available</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/shopping-cart.png" alt="Biggest Selection" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Biggest Selection</h5>
                    <p>Largest collection of any store in MENA</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/user-talking-with-speech-bubble.png" alt="Top-notch Support" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Top-notch Support</h5>
                    <p>We are always happy to help in any way we can</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/secure-payment.png" alt="Secure Payments" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Secure Payments</h5>
                    <p>Cash on Delivery available</p>
                </div>
            </div>
            </div>
     </section>


    

    <!-- JavaScript to Toggle Forms -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.js"></script>


        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-26 03:14:17.554 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 699.2074ms
2025-01-26 03:14:17.577 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-26 03:14:17.577 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 03:14:17.576 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-26 03:14:17.579 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-26 03:14:17.605 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-26 03:14:17.611 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 34.5113ms
2025-01-26 03:14:17.618 +03:00 [INF] [Response] 404 - 12ms

2025-01-26 03:14:17.612 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-26 03:14:17.632 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 55.7357ms
2025-01-26 03:14:17.632 +03:00 [INF] [Response] 404 - 19ms

2025-01-26 03:14:17.639 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-26 03:14:17.640 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 63.5018ms
2025-01-26 03:14:17.658 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-26 03:14:17.689 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 110.2474ms
2025-01-26 03:14:23.676 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Guide? - null null
2025-01-26 03:14:23.705 +03:00 [INF] [Request] GET /Home/Guide
[QueryString] ?

2025-01-26 03:14:23.709 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Guide (MyShop)'
2025-01-26 03:14:23.712 +03:00 [INF] Route matched with {action = "Guide", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Guide(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-26 03:14:23.804 +03:00 [INF] Executing ViewResult, running view Guide.
2025-01-26 03:14:23.814 +03:00 [INF] Executed ViewResult - view Guide executed in 22.5364ms.
2025-01-26 03:14:23.818 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Guide (MyShop) in 102.9131ms
2025-01-26 03:14:23.823 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Guide (MyShop)'
2025-01-26 03:14:23.825 +03:00 [INF] [Response] 200 - 120ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Guide - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
<style>

    .instruments-section h1 {
        font-size: 2.5rem;
        font-weight: bold;
        text-align: center;
    }

    .instruments-section p {
        font-size: 1.25rem;
        color: #555;
        text-align: center;
    }

    /* Black Line */
    hr.thick-black-line {
        border: none; /* Remove default borders */
        height: 5px; /* Set the height */
        background-color: black !important; /* Force black color */
        margin: 0 auto; /* Center it horizontally */
        width: 80%; /* Adjust width */
    }


    /* Dropdown Buttons Alignment */
    .instrument-buttons {
        display: flex;
        gap: 1rem; /* Add spacing between dropdown buttons */
        padding-left: 10%; /* Align dropdown buttons with the left edge of the line */
    }

        .instrument-buttons .dropdown {
            display: inline-block;
        }

        /* Styling for Buttons */
        .instrument-buttons .btn {
            font-size: 1rem;
            font-weight: bold;
            padding: 0.5rem 1.5rem;
        }

    /* Dropdown Menu Styling */
    .dropdown-menu {
        font-size: 1rem;
        text-align: left;
    }



</style>


<section class="instruments-section text-center py-5">
    <h1 class="mb-3">Instruments</h1>
    <p class="mb-4">
        Here, the SoundWave’s expert players guide you through the intricacies of the instruments they play.
        Choose an instrument from one of the sections.
    </p>
    <hr class="thick-black-line mb-4" />

    <!-- Dropdown Buttons -->
    <div class="instrument-buttons text-start">
        <!-- Dropdown for Instruments -->
        <div class="dropdown">
            <button class="btn btn-light border text-danger dropdown-toggle"
                    type="button"
                    id="instrumentDropdown"
                    data-bs-toggle="dropdown"
                    aria-expanded="false">
                Instruments
            </button>
            <ul class="dropdown-menu" aria-labelledby="instrumentDropdown">
                <li><a class="dropdown-item instrument-item" href="#">Guitars</a></li>
                <li><a class="dropdown-item instrument-item" href="#">Drums</a></li>
                <li><a class="dropdown-item instrument-item" href="#">Orchestra</a></li>
            </ul>
        </div>

        <!-- Dropdown for Level -->
        <div class="dropdown">
            <button class="btn btn-light border text-danger dropdown-toggle"
                    type="button"
                    id="levelDropdown"
                    data-bs-toggle="dropdown"
                    aria-expanded="false">
                Level
            </button>
            <ul class="dropdown-menu" aria-labelledby="levelDropdown">
                <li><a class="dropdown-item level-item" href="#">Beginner</a></li>
                <li><a class="dropdown-item level-item" href="#">Professional</a></li>
            </ul>
        </div>
    </div>
    
    <div id="card-container" class="d-flex justify-content-center gap-4 mt-5"></div>

</section>

<script>
    const instrumentDropdown = document.querySelectorAll('.instrument-item');
    const levelDropdown = document.querySelectorAll('.level-item');
    const cardContainer = document.getElementById('card-container');

    let selectedInstrument = '';
    let selectedLevel = '';

    const guitarsData = [
        {
            img: '/Images/guitar-4750599_1280.jpg',
            title: 'Acoustic Guitar',
            link: '#'
        },
        {
            img: '/Images/electric-guitar-7815026_1280.jpg',
            title: 'Electric Guitar',
            link: '#'
        },
        {
            img: '/Images/bass-guitar-913092_1280.jpg',
            title: 'Bass Guitar',
            link: '#'
        }
    ];

    const DrumsData = [
        {
            img: '/Images/african-2771092_1280.jpg',
            title: 'Hand Drums',
            link: '#'
        },
        {
            img: '/Images/electronic-drum-pad-5854409_1280.jpg',
            title: 'Electronic Drums',
            link: '#'
        },
        {
            img: '/Images/drum-set-1839383_1280.jpg',
            title: 'Acoustic Drums',
            link: '#'
        }
    ];

    const OrchestraData = [
        {
            img: '/Images/bowed-instrument-1853324_1280.jpg',
            title: 'Strings',
            link: '#'
        },
        {
            img: '/Images/saxophone-3246650_1280.jpg',
            title: 'Brass',
            link: '#'
        },
        
    ];

    instrumentDropdown.forEach(item => {
        item.addEventListener('click', function () {
            selectedInstrument = this.textContent.trim();
            checkSelection();
        });
    });

    levelDropdown.forEach(item => {
        item.addEventListener('click', function () {
            selectedLevel = this.textContent.trim();
            checkSelection();
        });
    });

    function checkSelection() {
        if (selectedInstrument === 'Guitars' && selectedLevel === 'Beginner') {
            renderCards(guitarsData);
        } 
        else if (selectedInstrument === 'Guitars' && selectedLevel === 'Professional') {
            renderCards(guitarsData);
        }
        else if (selectedInstrument === 'Drums' && (selectedLevel === 'Professional' || selectedLevel === 'Beginner')) {
            renderCards(DrumsData);

        }
        else if (selectedInstrument === 'Orchestra' && (selectedLevel === 'Professional' || selectedLevel === 'Beginner')) {
            renderCards(OrchestraData);

        }
        else {
            cardContainer.innerHTML = ''; // Clear cards
        }
    }

    function renderCards(data) {
        cardContainer.innerHTML = ''; // Clear previous cards

        data.forEach(item => {
            if (item.title.toLowerCase() === 'electric guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'electricguid'; // Set link to electricguid for Beginners
                } else {
                    item.link = 'proelectric'; // Set link to proelectric for other levels
                }
            } else if (item.title.toLowerCase() === 'acoustic guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'acousticpeg'; // Set link to acousticpeg for Beginners
                } else {
                    item.link = 'acousticpro'; // Set link to acousticpro for other levels
                }
            } else if (item.title.toLowerCase() === 'bass guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'bassbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'basspro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'hand drums') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'handbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'handpro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'electronic drums') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'delebeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'delepro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'acoustic drums') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'dacosticbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'dacousticpro'; // Set link to basspro for other levels
                }
            } else {
                // Default case if no matches found
                item.link = 'default'; // Default link or other fallback
            }


            const card = document.createElement('div');
            card.classList.add('card');
            card.style.width = '22rem';
            card.style.textAlign = 'center';
            card.style.border = '1px solid #ddd';
            card.style.boxShadow = '0 4px 6px rgba(0, 0, 0, 0.1)';
            card.style.borderRadius = '8px';

            card.innerHTML = `
                    <img src="${item.img}" alt="${item.title}" style="width:100%;border-bottom:1px solid #ddd;">
                    <h5 style="font-size:1.25rem;font-weight:bold;margin:1rem 0;">${item.title}</h5>
                    <a href="${item.link}" class="btn btn-danger" style="margin-bottom:1rem;font-weight:bold;">Read more</a>
                `;
            cardContainer.appendChild(card);
            
            
        });
    }
</script>


<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-26 03:14:23.890 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Guide? - 200 null text/html; charset=utf-8 214.5344ms
2025-01-26 03:14:23.928 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 03:14:23.928 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-26 03:14:23.929 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-26 03:14:23.929 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-26 03:14:23.937 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 8.56ms
2025-01-26 03:14:23.939 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-26 03:14:23.949 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-26 03:14:23.958 +03:00 [INF] [Response] 404 - 18ms

2025-01-26 03:14:23.959 +03:00 [INF] [Response] 404 - 9ms

2025-01-26 03:14:23.961 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 32.739ms
2025-01-26 03:14:23.962 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 33.4107ms
2025-01-26 03:14:23.965 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-26 03:14:23.974 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-26 03:14:23.995 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 65.7916ms
2025-01-26 03:14:33.937 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/dacosticbeg - null null
2025-01-26 03:14:33.946 +03:00 [INF] [Request] GET /Home/dacosticbeg

2025-01-26 03:14:33.950 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.dacosticbeg (MyShop)'
2025-01-26 03:14:33.953 +03:00 [INF] Route matched with {action = "dacosticbeg", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult dacosticbeg(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-26 03:14:33.956 +03:00 [INF] Executing ViewResult, running view dacosticbeg.
2025-01-26 03:14:33.985 +03:00 [INF] Executed ViewResult - view dacosticbeg executed in 30.0255ms.
2025-01-26 03:14:33.988 +03:00 [INF] Executed action MyShop.Controllers.HomeController.dacosticbeg (MyShop) in 33.7453ms
2025-01-26 03:14:33.989 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.dacosticbeg (MyShop)'
2025-01-26 03:14:33.990 +03:00 [INF] [Response] 200 - 43ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Beginner Guide for Acoustic Drums - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
<style>
    /* General Styles */
    body {
        font-family: 'Roboto', sans-serif;
        margin: 0;
        padding: 0;
        background-color: #f4f4f4;
        color: #333;
        line-height: 1.6;
    }

    /* Header Phrase Styles */
    .header-phrase {
        background-color: #333; /* Black */
        color: #fff;
        padding: 20px;
        text-align: center;
    }

    .header-phrase h1 {
        margin: 0;
        font-size: 2.5rem;
    }

    /* Main Content Styles */
    main {
        padding: 20px;
        max-width: 1200px;
        margin: 0 auto;
    }

    section {
        margin-bottom: 40px;
    }

    h2 {
        color: #d32f2f; /* Red */
        border-bottom: 2px solid #d32f2f; /* Red */
        padding-bottom: 10px;
        margin-bottom: 20px;
    }

    .content-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 20px;
    }

    .content-card {
        background-color: #fff;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease;
    }

    .content-card:hover {
        transform: translateY(-5px);
    }

    .content-card img {
        width: 100%;
        height: 200px;
        object-fit: cover;
    }

    .content-card h3 {
        margin: 15px;
        color: #333;
    }

    .content-card p, .content-card ul {
        margin: 0 15px 15px;
        color: #555;
    }

    .content-card ul {
        list-style-type: disc;
        padding-left: 20px;
    }

    /* Footer Phrase Styles */
    .footer-phrase {
        background-color: #333; /* Black */
        color: #fff;
        text-align: center;
        padding: 15px;
        margin-top: 40px;
    }
</style>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Beginner Guide for Acoustic Drums</title>
    <link rel="stylesheet" href="styles.css">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
</head>
<body>
    <!-- Header Phrase -->
    <div class="header-phrase">
        <h1>Beginner Guide for Acoustic Drums</h1>
    </div>

    <!-- Main Content -->
    <main>
        <!-- Section 1: Understanding Acoustic Drums -->
        <section class="understanding-drums">
            <h2>1. Understanding Acoustic Drums</h2>
            <div class="content-grid">
                <div class="content-card">
                    <img src="/Images/acoustic-drum-kit.jpg" alt="Acoustic Drum Kit">
                    <h3>Drum Kit Components</h3>
                    <p>Learn about the different parts of a drum kit: bass drum, snare, toms, cymbals, and hardware.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/hi-hat-cymbal.jpg" alt="Hi-Hat Cymbals">
                    <h3>Understanding Cymbals</h3>
                    <p>Explore various types of cymbals such as hi-hats, crash, and ride, and their role in creating diverse sounds.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/drumsticks.jpg" alt="Drumsticks">
                    <h3>Choosing the Right Drumsticks</h3>
                    <p>Pick the right drumsticks based on material, weight, and grip for better control and sound.</p>
                </div>
            </div>
        </section>

        <!-- Section 2: Basic Drum Techniques -->
        <section class="basic-techniques">
            <h2>2. Basic Drum Techniques</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>Proper Grip</h3>
                    <ul>
                        <li>Learn the proper grip for drumsticks to avoid strain and increase control.</li>
                        <li>Focus on relaxed wrists and fingers for fluid motion.</li>
                    </ul>
                </div>
                <div class="content-card">
                    <h3>Basic Drumming Patterns</h3>
                    <ul>
                        <li>Start with basic beats like 4/4 time signature to establish rhythm.</li>
                        <li>Practice hand-foot coordination for consistent timing.</li>
                    </ul>
                </div>
                <div class="content-card">
                    <h3>Foot Pedal Techniques</h3>
                    <ul>
                        <li>Master the bass drum pedal for consistent kick patterns.</li>
                        <li>Learn to control the hi-hat pedal for dynamic sound changes.</li>
                    </ul>
                </div>
            </div>
        </section>

        <!-- Section 3: Maintenance and Care -->
        <section class="maintenance-care">
            <h2>3. Drum Maintenance and Care</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>Changing Drumheads</h3>
                    <p>Regularly change drumheads to maintain optimal sound quality and performance.</p>
                </div>
                <div class="content-card">
                    <h3>Cleaning Your Drum Kit</h3>
                    <p>Use appropriate cleaning products to keep your drums looking and sounding great.</p>
                </div>
                <div class="content-card">
                    <h3>Tuning Your Drums</h3>
                    <p>Learn how to tune your drums to achieve the best sound possible for any style of music.</p>
                </div>
            </div>
        </section>

        <!-- Section 4: Beginner Drum Kits -->
        <section class="beginner-drums">
            <h2>4. Recommended Beginner Drum Kits</h2>
            <div class="content-grid">
                <div class="content-card">
                    <img src="/Images/beginner-drum-set.jpg" alt="Beginner Drum Set">
                    <h3>Basic Drum Kit</h3>
                    <p>An affordable and simple drum kit for newcomers, offering essential components without unnecessary extras.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/intermediate-drum-set.jpg" alt="Intermediate Drum Set">
                    <h3>Intermediate Drum Kit</h3>
                    <p>A step up with better quality materials, more hardware, and versatile cymbals for intermediate drummers.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/electronic-drum-set.jpg" alt="Electronic Drum Set">
                    <h3>Electronic Drum Kit</h3>
                    <p>An electronic alternative, ideal for practice with adjustable sound levels and quiet play options.</p>
                </div>
            </div>
        </section>
    </main>

    <!-- Footer Phrase -->
    <div class="footer-phrase">
        <p>Start Your Drumming Journey Today!</p>
    </div>
</body>
</html>

        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-26 03:14:34.043 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/dacosticbeg - 200 null text/html; charset=utf-8 106.177ms
2025-01-26 03:14:34.063 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/styles.css - null null
2025-01-26 03:14:34.070 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/hi-hat-cymbal.jpg - null null
2025-01-26 03:14:34.089 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/intermediate-drum-set.jpg - null null
2025-01-26 03:14:34.074 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 03:14:34.089 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/drumsticks.jpg - null null
2025-01-26 03:14:34.106 +03:00 [INF] [Request] GET /Images/intermediate-drum-set.jpg

2025-01-26 03:14:34.103 +03:00 [INF] [Request] GET /Images/hi-hat-cymbal.jpg

2025-01-26 03:14:34.071 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/acoustic-drum-kit.jpg - null null
2025-01-26 03:14:34.104 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-26 03:14:34.074 +03:00 [INF] [Request] GET /Home/styles.css

2025-01-26 03:14:34.089 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/beginner-drum-set.jpg - null null
2025-01-26 03:14:34.104 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-26 03:14:34.111 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/electronic-drum-set.jpg - null null
2025-01-26 03:14:34.113 +03:00 [INF] [Request] GET /Images/drumsticks.jpg

2025-01-26 03:14:34.113 +03:00 [INF] [Response] 404 - 6ms

2025-01-26 03:14:34.114 +03:00 [INF] [Response] 404 - 12ms

2025-01-26 03:14:34.118 +03:00 [INF] [Request] GET /Images/acoustic-drum-kit.jpg

2025-01-26 03:14:34.122 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-26 03:14:34.123 +03:00 [INF] [Response] 404 - 48ms

2025-01-26 03:14:34.125 +03:00 [INF] [Request] GET /Images/beginner-drum-set.jpg

2025-01-26 03:14:34.127 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-26 03:14:34.129 +03:00 [INF] [Request] GET /Images/electronic-drum-set.jpg

2025-01-26 03:14:34.129 +03:00 [INF] [Response] 404 - 16ms

2025-01-26 03:14:34.130 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/intermediate-drum-set.jpg - 404 0 null 40.6545ms
2025-01-26 03:14:34.132 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/hi-hat-cymbal.jpg - 404 0 null 61.9534ms
2025-01-26 03:14:34.134 +03:00 [INF] [Response] 404 - 16ms

2025-01-26 03:14:34.136 +03:00 [INF] [Response] 404 - 13ms

2025-01-26 03:14:34.139 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/styles.css - 404 0 null 75.8682ms
2025-01-26 03:14:34.140 +03:00 [INF] [Response] 404 - 15ms

2025-01-26 03:14:34.141 +03:00 [INF] [Response] 404 - 13ms

2025-01-26 03:14:34.142 +03:00 [INF] [Response] 404 - 12ms

2025-01-26 03:14:34.142 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/drumsticks.jpg - 404 0 null 54.092ms
2025-01-26 03:14:34.145 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/Images/intermediate-drum-set.jpg, Response status code: 404
2025-01-26 03:14:34.150 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/Images/hi-hat-cymbal.jpg, Response status code: 404
2025-01-26 03:14:34.152 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/acoustic-drum-kit.jpg - 404 0 null 81.4319ms
2025-01-26 03:14:34.152 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 48.8441ms
2025-01-26 03:14:34.156 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/Home/styles.css, Response status code: 404
2025-01-26 03:14:34.156 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/beginner-drum-set.jpg - 404 0 null 67.0904ms
2025-01-26 03:14:34.157 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 53.3266ms
2025-01-26 03:14:34.157 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/electronic-drum-set.jpg - 404 0 null 46.8396ms
2025-01-26 03:14:34.160 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/Images/drumsticks.jpg, Response status code: 404
2025-01-26 03:14:34.162 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-26 03:14:34.164 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 89.6335ms
2025-01-26 03:14:34.184 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/Images/electronic-drum-set.jpg, Response status code: 404
2025-01-26 03:14:34.169 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/Images/acoustic-drum-kit.jpg, Response status code: 404
2025-01-26 03:14:34.171 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-26 03:14:34.175 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/Images/beginner-drum-set.jpg, Response status code: 404
2025-01-26 03:14:34.178 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-26 03:14:34.222 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 60.1887ms
2025-01-26 03:22:24.205 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-26 03:22:24.513 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-26 03:22:24.516 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-26 03:22:24.630 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-26 03:22:24.634 +03:00 [INF] Hosting environment: Development
2025-01-26 03:22:24.635 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-26 03:22:25.150 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-26 03:22:25.461 +03:00 [INF] [Request] GET /

2025-01-26 03:22:25.525 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-26 03:22:25.547 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-26 03:22:25.626 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-26 03:22:25.727 +03:00 [INF] Executed ViewResult - view Index executed in 110.1986ms.
2025-01-26 03:22:25.732 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 183.1464ms
2025-01-26 03:22:25.733 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-26 03:22:25.735 +03:00 [INF] [Response] 200 - 286ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Home - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
    

 <style>
    .instrument-name {
        margin-top: 10px; /* Add space between the image and the text */
        font-size: 16px; /* Adjust the text size */
        font-weight: bold; /* Bold text */
        text-align: center; /* Center the text */
    }
  </style>

<section class="category-section py-4">
    <div class="category-section">
        <h3 style="text-align: center; margin-bottom: 20px;">Start Shopping Here</h3>
        <div class="row">
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Guitars'">
                <img src="/Images/pavlo-t-5rEyYBPLN-w-unsplash.jpg" alt="Guitars" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Guitars</p>
            </div>
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Keyboards & Pianos'">
                <img src="/Images/pexels-mikhail-nilov-7570112.jpg" alt="Keyboards & Pianos" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Keyboards & Pianos</p>
            </div>
            <!-- Drums & Percussion -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Drums & Percussion'">
                <img src="/Images/pexels-reneterp-1327430.jpg" alt="Drums & Percussion" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Drums & Percussion</p>
            </div>
            <!-- Pro Audio -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Pro Audio'">
                <img src="/Images/pexels-everson-mayer-478307-1481312.jpg" alt="Pro Audio" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Pro Audio</p>
            </div>
            <!-- Band & Orchestra -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Band & Orchestra'">
                <img src="/Images/pexels-shottrotter-752535.jpg" alt="Band & Orchestra" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Band & Orchestra</p>
            </div>
            <!-- Accessories -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Accessories'">
                <img src="/Images/pexels-rombo-1510555-5280438.jpg" alt="Accessories" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Accessories</p>
            </div>
        </div>
    </div>
</section>


    <section class="membership-section text-center bg-dark text-white py-5">
    <div class="membership-section">
        <h2>Have no clue what to buy ?</h2>
        <p>Check out our professional guide to get the perfect suited instrument !</p>
        <form class="d-inline-flex mt-2" action="/Home/Guide" method="get">
            
            <button class="btn btn-danger" type="submit">professional Guide</button>
        </form>
        </div>
    </section>

    <section class="features-section py-5 bg-light">
            <div class="container">
            <div class="row text-center">
                <div class="col-md-3">
                    <img src="/Images/box.png" alt="Same Day Delivery" class="mb-sm-1" style="width: 40px; height: 40px;">
                    <h5>Same Day/Next Day Delivery</h5>
                    <p>Next day delivery on most orders in Jordan - Same day available</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/shopping-cart.png" alt="Biggest Selection" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Biggest Selection</h5>
                    <p>Largest collection of any store in MENA</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/user-talking-with-speech-bubble.png" alt="Top-notch Support" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Top-notch Support</h5>
                    <p>We are always happy to help in any way we can</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/secure-payment.png" alt="Secure Payments" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Secure Payments</h5>
                    <p>Cash on Delivery available</p>
                </div>
            </div>
            </div>
     </section>


    

    <!-- JavaScript to Toggle Forms -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.js"></script>


        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-26 03:22:25.805 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 661.3685ms
2025-01-26 03:22:25.834 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-26 03:22:25.834 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 03:22:25.835 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-26 03:22:25.834 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-26 03:22:25.867 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-26 03:22:25.884 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 50.8594ms
2025-01-26 03:22:25.891 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-26 03:22:25.892 +03:00 [INF] [Response] 404 - 24ms

2025-01-26 03:22:25.960 +03:00 [INF] [Response] 404 - 68ms

2025-01-26 03:22:25.980 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 146.357ms
2025-01-26 03:22:25.965 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 131.7572ms
2025-01-26 03:22:25.987 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-26 03:22:25.993 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-26 03:22:26.066 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 231.9282ms
2025-01-26 03:22:28.267 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Guide? - null null
2025-01-26 03:22:28.283 +03:00 [INF] [Request] GET /Home/Guide
[QueryString] ?

2025-01-26 03:22:28.290 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Guide (MyShop)'
2025-01-26 03:22:28.296 +03:00 [INF] Route matched with {action = "Guide", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Guide(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-26 03:22:28.373 +03:00 [INF] Executing ViewResult, running view Guide.
2025-01-26 03:22:28.392 +03:00 [INF] Executed ViewResult - view Guide executed in 22.4276ms.
2025-01-26 03:22:28.395 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Guide (MyShop) in 96.3614ms
2025-01-26 03:22:28.396 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Guide (MyShop)'
2025-01-26 03:22:28.399 +03:00 [INF] [Response] 200 - 114ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Guide - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
<style>

    .instruments-section h1 {
        font-size: 2.5rem;
        font-weight: bold;
        text-align: center;
    }

    .instruments-section p {
        font-size: 1.25rem;
        color: #555;
        text-align: center;
    }

    /* Black Line */
    hr.thick-black-line {
        border: none; /* Remove default borders */
        height: 5px; /* Set the height */
        background-color: black !important; /* Force black color */
        margin: 0 auto; /* Center it horizontally */
        width: 80%; /* Adjust width */
    }


    /* Dropdown Buttons Alignment */
    .instrument-buttons {
        display: flex;
        gap: 1rem; /* Add spacing between dropdown buttons */
        padding-left: 10%; /* Align dropdown buttons with the left edge of the line */
    }

        .instrument-buttons .dropdown {
            display: inline-block;
        }

        /* Styling for Buttons */
        .instrument-buttons .btn {
            font-size: 1rem;
            font-weight: bold;
            padding: 0.5rem 1.5rem;
        }

    /* Dropdown Menu Styling */
    .dropdown-menu {
        font-size: 1rem;
        text-align: left;
    }



</style>


<section class="instruments-section text-center py-5">
    <h1 class="mb-3">Instruments</h1>
    <p class="mb-4">
        Here, the SoundWave’s expert players guide you through the intricacies of the instruments they play.
        Choose an instrument from one of the sections.
    </p>
    <hr class="thick-black-line mb-4" />

    <!-- Dropdown Buttons -->
    <div class="instrument-buttons text-start">
        <!-- Dropdown for Instruments -->
        <div class="dropdown">
            <button class="btn btn-light border text-danger dropdown-toggle"
                    type="button"
                    id="instrumentDropdown"
                    data-bs-toggle="dropdown"
                    aria-expanded="false">
                Instruments
            </button>
            <ul class="dropdown-menu" aria-labelledby="instrumentDropdown">
                <li><a class="dropdown-item instrument-item" href="#">Guitars</a></li>
                <li><a class="dropdown-item instrument-item" href="#">Drums</a></li>
                <li><a class="dropdown-item instrument-item" href="#">Orchestra</a></li>
            </ul>
        </div>

        <!-- Dropdown for Level -->
        <div class="dropdown">
            <button class="btn btn-light border text-danger dropdown-toggle"
                    type="button"
                    id="levelDropdown"
                    data-bs-toggle="dropdown"
                    aria-expanded="false">
                Level
            </button>
            <ul class="dropdown-menu" aria-labelledby="levelDropdown">
                <li><a class="dropdown-item level-item" href="#">Beginner</a></li>
                <li><a class="dropdown-item level-item" href="#">Professional</a></li>
            </ul>
        </div>
    </div>
    
    <div id="card-container" class="d-flex justify-content-center gap-4 mt-5"></div>

</section>

<script>
    const instrumentDropdown = document.querySelectorAll('.instrument-item');
    const levelDropdown = document.querySelectorAll('.level-item');
    const cardContainer = document.getElementById('card-container');

    let selectedInstrument = '';
    let selectedLevel = '';

    const guitarsData = [
        {
            img: '/Images/guitar-4750599_1280.jpg',
            title: 'Acoustic Guitar',
            link: '#'
        },
        {
            img: '/Images/electric-guitar-7815026_1280.jpg',
            title: 'Electric Guitar',
            link: '#'
        },
        {
            img: '/Images/bass-guitar-913092_1280.jpg',
            title: 'Bass Guitar',
            link: '#'
        }
    ];

    const DrumsData = [
        {
            img: '/Images/african-2771092_1280.jpg',
            title: 'Hand Drums',
            link: '#'
        },
        {
            img: '/Images/electronic-drum-pad-5854409_1280.jpg',
            title: 'Electronic Drums',
            link: '#'
        },
        {
            img: '/Images/drum-set-1839383_1280.jpg',
            title: 'Acoustic Drums',
            link: '#'
        }
    ];

    const OrchestraData = [
        {
            img: '/Images/bowed-instrument-1853324_1280.jpg',
            title: 'Strings',
            link: '#'
        },
        {
            img: '/Images/saxophone-3246650_1280.jpg',
            title: 'Brass',
            link: '#'
        },
        
    ];

    instrumentDropdown.forEach(item => {
        item.addEventListener('click', function () {
            selectedInstrument = this.textContent.trim();
            checkSelection();
        });
    });

    levelDropdown.forEach(item => {
        item.addEventListener('click', function () {
            selectedLevel = this.textContent.trim();
            checkSelection();
        });
    });

    function checkSelection() {
        if (selectedInstrument === 'Guitars' && selectedLevel === 'Beginner') {
            renderCards(guitarsData);
        } 
        else if (selectedInstrument === 'Guitars' && selectedLevel === 'Professional') {
            renderCards(guitarsData);
        }
        else if (selectedInstrument === 'Drums' && (selectedLevel === 'Professional' || selectedLevel === 'Beginner')) {
            renderCards(DrumsData);

        }
        else if (selectedInstrument === 'Orchestra' && (selectedLevel === 'Professional' || selectedLevel === 'Beginner')) {
            renderCards(OrchestraData);

        }
        else {
            cardContainer.innerHTML = ''; // Clear cards
        }
    }

    function renderCards(data) {
        cardContainer.innerHTML = ''; // Clear previous cards

        data.forEach(item => {
            if (item.title.toLowerCase() === 'electric guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'electricguid'; // Set link to electricguid for Beginners
                } else {
                    item.link = 'proelectric'; // Set link to proelectric for other levels
                }
            } else if (item.title.toLowerCase() === 'acoustic guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'acousticpeg'; // Set link to acousticpeg for Beginners
                } else {
                    item.link = 'acousticpro'; // Set link to acousticpro for other levels
                }
            } else if (item.title.toLowerCase() === 'bass guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'bassbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'basspro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'hand drums') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'handbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'handpro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'electronic drums') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'delebeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'delepro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'acoustic drums') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'dacosticbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'dacousticpro'; // Set link to basspro for other levels
                }
            } else {
                // Default case if no matches found
                item.link = 'default'; // Default link or other fallback
            }


            const card = document.createElement('div');
            card.classList.add('card');
            card.style.width = '22rem';
            card.style.textAlign = 'center';
            card.style.border = '1px solid #ddd';
            card.style.boxShadow = '0 4px 6px rgba(0, 0, 0, 0.1)';
            card.style.borderRadius = '8px';

            card.innerHTML = `
                    <img src="${item.img}" alt="${item.title}" style="width:100%;border-bottom:1px solid #ddd;">
                    <h5 style="font-size:1.25rem;font-weight:bold;margin:1rem 0;">${item.title}</h5>
                    <a href="${item.link}" class="btn btn-danger" style="margin-bottom:1rem;font-weight:bold;">Read more</a>
                `;
            cardContainer.appendChild(card);
            
            
        });
    }
</script>


<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-26 03:22:28.494 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Guide? - 200 null text/html; charset=utf-8 227.7255ms
2025-01-26 03:22:28.526 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 03:22:28.530 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-26 03:22:28.531 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-26 03:22:28.531 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-26 03:22:28.549 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 23.8055ms
2025-01-26 03:22:28.556 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-26 03:22:28.552 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-26 03:22:28.602 +03:00 [INF] [Response] 404 - 45ms

2025-01-26 03:22:28.609 +03:00 [INF] [Response] 404 - 56ms

2025-01-26 03:22:28.610 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 80.4583ms
2025-01-26 03:22:28.612 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 82.6614ms
2025-01-26 03:22:28.644 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-26 03:22:28.648 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 117.4756ms
2025-01-26 03:22:28.651 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-26 03:22:34.876 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/dacosticbeg - null null
2025-01-26 03:22:34.890 +03:00 [INF] [Request] GET /Home/dacosticbeg

2025-01-26 03:22:34.902 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.dacosticbeg (MyShop)'
2025-01-26 03:22:34.912 +03:00 [INF] Route matched with {action = "dacosticbeg", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult dacosticbeg(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-26 03:22:34.923 +03:00 [INF] Executing ViewResult, running view dacosticbeg.
2025-01-26 03:22:34.953 +03:00 [INF] Executed ViewResult - view dacosticbeg executed in 34.5351ms.
2025-01-26 03:22:34.957 +03:00 [INF] Executed action MyShop.Controllers.HomeController.dacosticbeg (MyShop) in 41.4542ms
2025-01-26 03:22:34.961 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.dacosticbeg (MyShop)'
2025-01-26 03:22:34.963 +03:00 [INF] [Response] 200 - 71ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Beginner Guide for Acoustic Drums - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
<style>
    /* General Styles */
    body {
        font-family: 'Roboto', sans-serif;
        margin: 0;
        padding: 0;
        background-color: #f4f4f4;
        color: #333;
        line-height: 1.6;
    }

    /* Header Phrase Styles */
    .header-phrase {
        background-color: #333; /* Black */
        color: #fff;
        padding: 20px;
        text-align: center;
    }

    .header-phrase h1 {
        margin: 0;
        font-size: 2.5rem;
    }

    /* Main Content Styles */
    main {
        padding: 20px;
        max-width: 1200px;
        margin: 0 auto;
    }

    section {
        margin-bottom: 40px;
    }

    h2 {
        color: #d32f2f; /* Red */
        border-bottom: 2px solid #d32f2f; /* Red */
        padding-bottom: 10px;
        margin-bottom: 20px;
    }

    .content-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 20px;
    }

    .content-card {
        background-color: #fff;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease;
    }

    .content-card:hover {
        transform: translateY(-5px);
    }

    .content-card img {
        width: 100%;
        height: 200px;
        object-fit: cover;
    }

    .content-card h3 {
        margin: 15px;
        color: #333;
    }

    .content-card p, .content-card ul {
        margin: 0 15px 15px;
        color: #555;
    }

    .content-card ul {
        list-style-type: disc;
        padding-left: 20px;
    }

    /* Footer Phrase Styles */
    .footer-phrase {
        background-color: #333; /* Black */
        color: #fff;
        text-align: center;
        padding: 15px;
        margin-top: 40px;
    }
</style>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Beginner Guide for Acoustic Drums</title>
    <link rel="stylesheet" href="styles.css">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
</head>
<body>
    <!-- Header Phrase -->
    <div class="header-phrase">
        <h1>Beginner Guide for Acoustic Drums</h1>
    </div>

    <!-- Main Content -->
    <main>
        <!-- Section 1: Understanding Acoustic Drums -->
        <section class="understanding-drums">
            <h2>1. Understanding Acoustic Drums</h2>
            <div class="content-grid">
                <div class="content-card">
                    <img src="/Images/drumkit.jpg" alt="Acoustic Drum Kit">
                    <h3>Drum Kit Components</h3>
                    <p>Learn about the different parts of a drum kit: bass drum, snare, toms, cymbals, and hardware.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/drums-1130027_1280.jpg" alt="Hi-Hat Cymbals">
                    <h3>Understanding Cymbals</h3>
                    <p>Explore various types of cymbals such as hi-hats, crash, and ride, and their role in creating diverse sounds.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/drum-sticks-933186_1280.jpg" alt="Drumsticks">
                    <h3>Choosing the Right Drumsticks</h3>
                    <p>Pick the right drumsticks based on material, weight, and grip for better control and sound.</p>
                </div>
            </div>
        </section>

        <!-- Section 2: Basic Drum Techniques -->
        <section class="basic-techniques">
            <h2>2. Basic Drum Techniques</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>Proper Grip</h3>
                    <ul>
                        <li>Learn the proper grip for drumsticks to avoid strain and increase control.</li>
                        <li>Focus on relaxed wrists and fingers for fluid motion.</li>
                    </ul>
                </div>
                <div class="content-card">
                    <h3>Basic Drumming Patterns</h3>
                    <ul>
                        <li>Start with basic beats like 4/4 time signature to establish rhythm.</li>
                        <li>Practice hand-foot coordination for consistent timing.</li>
                    </ul>
                </div>
                <div class="content-card">
                    <h3>Foot Pedal Techniques</h3>
                    <ul>
                        <li>Master the bass drum pedal for consistent kick patterns.</li>
                        <li>Learn to control the hi-hat pedal for dynamic sound changes.</li>
                    </ul>
                </div>
            </div>
        </section>

        <!-- Section 3: Maintenance and Care -->
        <section class="maintenance-care">
            <h2>3. Drum Maintenance and Care</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>Changing Drumheads</h3>
                    <p>Regularly change drumheads to maintain optimal sound quality and performance.</p>
                </div>
                <div class="content-card">
                    <h3>Cleaning Your Drum Kit</h3>
                    <p>Use appropriate cleaning products to keep your drums looking and sounding great.</p>
                </div>
                <div class="content-card">
                    <h3>Tuning Your Drums</h3>
                    <p>Learn how to tune your drums to achieve the best sound possible for any style of music.</p>
                </div>
            </div>
        </section>

        <!-- Section 4: Beginner Drum Kits -->
        <section class="beginner-drums">
            <h2>4. Recommended Beginner Drum Kits</h2>
            <div class="content-grid">
                <div class="content-card">
                    <img src="/Images/drum-2848928_1280.jpg" alt="Beginner Drum Set">
                    <h3>Basic Drum Kit</h3>
                    <p>An affordable and simple drum kit for newcomers, offering essential components without unnecessary extras.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/intermediate-drum.jpg" alt="Intermediate Drum Set">
                    <h3>Intermediate Drum Kit</h3>
                    <p>A step up with better quality materials, more hardware, and versatile cymbals for intermediate drummers.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/electric-2597045_1280.jpg" alt="Electronic Drum Set">
                    <h3>Electronic Drum Kit</h3>
                    <p>An electronic alternative, ideal for practice with adjustable sound levels and quiet play options.</p>
                </div>
            </div>
        </section>
    </main>

    <!-- Footer Phrase -->
    <div class="footer-phrase">
        <p>Start Your Drumming Journey Today!</p>
    </div>
</body>
</html>

        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-26 03:22:35.011 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/dacosticbeg - 200 null text/html; charset=utf-8 135.3076ms
2025-01-26 03:22:35.027 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/styles.css - null null
2025-01-26 03:22:35.034 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/drums-1130027_1280.jpg - null null
2025-01-26 03:22:35.035 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/electric-2597045_1280.jpg - null null
2025-01-26 03:22:35.035 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/drum-2848928_1280.jpg - null null
2025-01-26 03:22:35.035 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/intermediate-drum.jpg - null null
2025-01-26 03:22:35.034 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/drumkit.jpg - null null
2025-01-26 03:22:35.034 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 03:22:35.034 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/drum-sticks-933186_1280.jpg - null null
2025-01-26 03:22:35.038 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-26 03:22:35.038 +03:00 [INF] [Request] GET /Home/styles.css

2025-01-26 03:22:35.087 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-26 03:22:35.088 +03:00 [INF] [Response] 404 - 49ms

2025-01-26 03:22:35.090 +03:00 [INF] [Response] 404 - 2ms

2025-01-26 03:22:35.092 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/styles.css - 404 0 null 64.1947ms
2025-01-26 03:22:35.093 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 55.2496ms
2025-01-26 03:22:35.099 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-26 03:22:35.099 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-26 03:22:35.099 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 65.0529ms
2025-01-26 03:22:35.108 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-26 03:22:35.115 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-26 03:22:35.131 +03:00 [INF] Sending file. Request path: '/Images/intermediate-drum.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\intermediate-drum.jpg'
2025-01-26 03:22:35.133 +03:00 [INF] [Response] 404 - 18ms

2025-01-26 03:22:35.135 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/intermediate-drum.jpg - 200 50685 image/jpeg 100.2988ms
2025-01-26 03:22:35.139 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 40.1281ms
2025-01-26 03:22:35.175 +03:00 [INF] Sending file. Request path: '/Images/drumkit.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\drumkit.jpg'
2025-01-26 03:22:35.203 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-26 03:22:35.208 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/drumkit.jpg - 200 89331 image/jpeg 174.3584ms
2025-01-26 03:22:35.206 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 107.5471ms
2025-01-26 03:22:35.208 +03:00 [INF] Sending file. Request path: '/Images/electric-2597045_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\electric-2597045_1280.jpg'
2025-01-26 03:22:35.198 +03:00 [INF] Sending file. Request path: '/Images/drums-1130027_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\drums-1130027_1280.jpg'
2025-01-26 03:22:35.212 +03:00 [INF] Sending file. Request path: '/Images/drum-sticks-933186_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\drum-sticks-933186_1280.jpg'
2025-01-26 03:22:35.099 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/Home/styles.css, Response status code: 404
2025-01-26 03:22:35.214 +03:00 [INF] Sending file. Request path: '/Images/drum-2848928_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\drum-2848928_1280.jpg'
2025-01-26 03:22:35.225 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/electric-2597045_1280.jpg - 200 310281 image/jpeg 190.056ms
2025-01-26 03:22:35.227 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/drums-1130027_1280.jpg - 200 216074 image/jpeg 193.7033ms
2025-01-26 03:22:35.230 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/drum-sticks-933186_1280.jpg - 200 295263 image/jpeg 196.3606ms
2025-01-26 03:22:35.240 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/drum-2848928_1280.jpg - 200 407579 image/jpeg 205.6426ms
2025-01-26 03:32:40.863 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-26 03:32:41.198 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-26 03:32:41.201 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-26 03:32:41.271 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-26 03:32:41.273 +03:00 [INF] Hosting environment: Development
2025-01-26 03:32:41.275 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-26 03:32:41.906 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-26 03:32:42.151 +03:00 [INF] [Request] GET /

2025-01-26 03:32:42.193 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-26 03:32:42.216 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-26 03:32:42.240 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-26 03:32:42.305 +03:00 [INF] Executed ViewResult - view Index executed in 69.3885ms.
2025-01-26 03:32:42.310 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 91.4354ms
2025-01-26 03:32:42.311 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-26 03:32:42.314 +03:00 [INF] [Response] 200 - 171ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Home - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
    

 <style>
    .instrument-name {
        margin-top: 10px; /* Add space between the image and the text */
        font-size: 16px; /* Adjust the text size */
        font-weight: bold; /* Bold text */
        text-align: center; /* Center the text */
    }
  </style>

<section class="category-section py-4">
    <div class="category-section">
        <h3 style="text-align: center; margin-bottom: 20px;">Start Shopping Here</h3>
        <div class="row">
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Guitars'">
                <img src="/Images/pavlo-t-5rEyYBPLN-w-unsplash.jpg" alt="Guitars" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Guitars</p>
            </div>
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Keyboards & Pianos'">
                <img src="/Images/pexels-mikhail-nilov-7570112.jpg" alt="Keyboards & Pianos" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Keyboards & Pianos</p>
            </div>
            <!-- Drums & Percussion -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Drums & Percussion'">
                <img src="/Images/pexels-reneterp-1327430.jpg" alt="Drums & Percussion" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Drums & Percussion</p>
            </div>
            <!-- Pro Audio -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Pro Audio'">
                <img src="/Images/pexels-everson-mayer-478307-1481312.jpg" alt="Pro Audio" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Pro Audio</p>
            </div>
            <!-- Band & Orchestra -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Band & Orchestra'">
                <img src="/Images/pexels-shottrotter-752535.jpg" alt="Band & Orchestra" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Band & Orchestra</p>
            </div>
            <!-- Accessories -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Accessories'">
                <img src="/Images/pexels-rombo-1510555-5280438.jpg" alt="Accessories" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Accessories</p>
            </div>
        </div>
    </div>
</section>


    <section class="membership-section text-center bg-dark text-white py-5">
    <div class="membership-section">
        <h2>Have no clue what to buy ?</h2>
        <p>Check out our professional guide to get the perfect suited instrument !</p>
        <form class="d-inline-flex mt-2" action="/Home/Guide" method="get">
            
            <button class="btn btn-danger" type="submit">professional Guide</button>
        </form>
        </div>
    </section>

    <section class="features-section py-5 bg-light">
            <div class="container">
            <div class="row text-center">
                <div class="col-md-3">
                    <img src="/Images/box.png" alt="Same Day Delivery" class="mb-sm-1" style="width: 40px; height: 40px;">
                    <h5>Same Day/Next Day Delivery</h5>
                    <p>Next day delivery on most orders in Jordan - Same day available</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/shopping-cart.png" alt="Biggest Selection" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Biggest Selection</h5>
                    <p>Largest collection of any store in MENA</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/user-talking-with-speech-bubble.png" alt="Top-notch Support" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Top-notch Support</h5>
                    <p>We are always happy to help in any way we can</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/secure-payment.png" alt="Secure Payments" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Secure Payments</h5>
                    <p>Cash on Delivery available</p>
                </div>
            </div>
            </div>
     </section>


    

    <!-- JavaScript to Toggle Forms -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.js"></script>


        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-26 03:32:42.384 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 484.6671ms
2025-01-26 03:32:42.410 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-26 03:32:42.411 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-26 03:32:42.411 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-26 03:32:42.410 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 03:32:42.440 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-26 03:32:42.428 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-26 03:32:42.464 +03:00 [INF] [Response] 404 - 36ms

2025-01-26 03:32:42.465 +03:00 [INF] [Response] 404 - 24ms

2025-01-26 03:32:42.465 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 58.6085ms
2025-01-26 03:32:42.467 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 57.4063ms
2025-01-26 03:32:42.468 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 57.1246ms
2025-01-26 03:32:42.479 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-26 03:32:42.483 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-26 03:32:42.559 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 147.7477ms
2025-01-26 03:32:45.242 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Guide? - null null
2025-01-26 03:32:45.263 +03:00 [INF] [Request] GET /Home/Guide
[QueryString] ?

2025-01-26 03:32:45.267 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Guide (MyShop)'
2025-01-26 03:32:45.270 +03:00 [INF] Route matched with {action = "Guide", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Guide(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-26 03:32:45.318 +03:00 [INF] Executing ViewResult, running view Guide.
2025-01-26 03:32:45.330 +03:00 [INF] Executed ViewResult - view Guide executed in 13.4465ms.
2025-01-26 03:32:45.333 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Guide (MyShop) in 61.2832ms
2025-01-26 03:32:45.334 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Guide (MyShop)'
2025-01-26 03:32:45.335 +03:00 [INF] [Response] 200 - 71ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Guide - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
<style>

    .instruments-section h1 {
        font-size: 2.5rem;
        font-weight: bold;
        text-align: center;
    }

    .instruments-section p {
        font-size: 1.25rem;
        color: #555;
        text-align: center;
    }

    /* Black Line */
    hr.thick-black-line {
        border: none; /* Remove default borders */
        height: 5px; /* Set the height */
        background-color: black !important; /* Force black color */
        margin: 0 auto; /* Center it horizontally */
        width: 80%; /* Adjust width */
    }


    /* Dropdown Buttons Alignment */
    .instrument-buttons {
        display: flex;
        gap: 1rem; /* Add spacing between dropdown buttons */
        padding-left: 10%; /* Align dropdown buttons with the left edge of the line */
    }

        .instrument-buttons .dropdown {
            display: inline-block;
        }

        /* Styling for Buttons */
        .instrument-buttons .btn {
            font-size: 1rem;
            font-weight: bold;
            padding: 0.5rem 1.5rem;
        }

    /* Dropdown Menu Styling */
    .dropdown-menu {
        font-size: 1rem;
        text-align: left;
    }



</style>


<section class="instruments-section text-center py-5">
    <h1 class="mb-3">Instruments</h1>
    <p class="mb-4">
        Here, the SoundWave’s expert players guide you through the intricacies of the instruments they play.
        Choose an instrument from one of the sections.
    </p>
    <hr class="thick-black-line mb-4" />

    <!-- Dropdown Buttons -->
    <div class="instrument-buttons text-start">
        <!-- Dropdown for Instruments -->
        <div class="dropdown">
            <button class="btn btn-light border text-danger dropdown-toggle"
                    type="button"
                    id="instrumentDropdown"
                    data-bs-toggle="dropdown"
                    aria-expanded="false">
                Instruments
            </button>
            <ul class="dropdown-menu" aria-labelledby="instrumentDropdown">
                <li><a class="dropdown-item instrument-item" href="#">Guitars</a></li>
                <li><a class="dropdown-item instrument-item" href="#">Drums</a></li>
                <li><a class="dropdown-item instrument-item" href="#">Orchestra</a></li>
            </ul>
        </div>

        <!-- Dropdown for Level -->
        <div class="dropdown">
            <button class="btn btn-light border text-danger dropdown-toggle"
                    type="button"
                    id="levelDropdown"
                    data-bs-toggle="dropdown"
                    aria-expanded="false">
                Level
            </button>
            <ul class="dropdown-menu" aria-labelledby="levelDropdown">
                <li><a class="dropdown-item level-item" href="#">Beginner</a></li>
                <li><a class="dropdown-item level-item" href="#">Professional</a></li>
            </ul>
        </div>
    </div>
    
    <div id="card-container" class="d-flex justify-content-center gap-4 mt-5"></div>

</section>

<script>
    const instrumentDropdown = document.querySelectorAll('.instrument-item');
    const levelDropdown = document.querySelectorAll('.level-item');
    const cardContainer = document.getElementById('card-container');

    let selectedInstrument = '';
    let selectedLevel = '';

    const guitarsData = [
        {
            img: '/Images/guitar-4750599_1280.jpg',
            title: 'Acoustic Guitar',
            link: '#'
        },
        {
            img: '/Images/electric-guitar-7815026_1280.jpg',
            title: 'Electric Guitar',
            link: '#'
        },
        {
            img: '/Images/bass-guitar-913092_1280.jpg',
            title: 'Bass Guitar',
            link: '#'
        }
    ];

    const DrumsData = [
        {
            img: '/Images/african-2771092_1280.jpg',
            title: 'Hand Drums',
            link: '#'
        },
        {
            img: '/Images/electronic-drum-pad-5854409_1280.jpg',
            title: 'Electronic Drums',
            link: '#'
        },
        {
            img: '/Images/drum-set-1839383_1280.jpg',
            title: 'Acoustic Drums',
            link: '#'
        }
    ];

    const OrchestraData = [
        {
            img: '/Images/bowed-instrument-1853324_1280.jpg',
            title: 'Strings',
            link: '#'
        },
        {
            img: '/Images/saxophone-3246650_1280.jpg',
            title: 'Brass',
            link: '#'
        },
        
    ];

    instrumentDropdown.forEach(item => {
        item.addEventListener('click', function () {
            selectedInstrument = this.textContent.trim();
            checkSelection();
        });
    });

    levelDropdown.forEach(item => {
        item.addEventListener('click', function () {
            selectedLevel = this.textContent.trim();
            checkSelection();
        });
    });

    function checkSelection() {
        if (selectedInstrument === 'Guitars' && selectedLevel === 'Beginner') {
            renderCards(guitarsData);
        } 
        else if (selectedInstrument === 'Guitars' && selectedLevel === 'Professional') {
            renderCards(guitarsData);
        }
        else if (selectedInstrument === 'Drums' && (selectedLevel === 'Professional' || selectedLevel === 'Beginner')) {
            renderCards(DrumsData);

        }
        else if (selectedInstrument === 'Orchestra' && (selectedLevel === 'Professional' || selectedLevel === 'Beginner')) {
            renderCards(OrchestraData);

        }
        else {
            cardContainer.innerHTML = ''; // Clear cards
        }
    }

    function renderCards(data) {
        cardContainer.innerHTML = ''; // Clear previous cards

        data.forEach(item => {
            if (item.title.toLowerCase() === 'electric guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'electricguid'; // Set link to electricguid for Beginners
                } else {
                    item.link = 'proelectric'; // Set link to proelectric for other levels
                }
            } else if (item.title.toLowerCase() === 'acoustic guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'acousticpeg'; // Set link to acousticpeg for Beginners
                } else {
                    item.link = 'acousticpro'; // Set link to acousticpro for other levels
                }
            } else if (item.title.toLowerCase() === 'bass guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'bassbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'basspro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'hand drums') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'handbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'handpro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'electronic drums') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'delebeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'delepro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'acoustic drums') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'dacosticbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'dacousticpro'; // Set link to basspro for other levels
                }
            } else {
                // Default case if no matches found
                item.link = 'default'; // Default link or other fallback
            }


            const card = document.createElement('div');
            card.classList.add('card');
            card.style.width = '22rem';
            card.style.textAlign = 'center';
            card.style.border = '1px solid #ddd';
            card.style.boxShadow = '0 4px 6px rgba(0, 0, 0, 0.1)';
            card.style.borderRadius = '8px';

            card.innerHTML = `
                    <img src="${item.img}" alt="${item.title}" style="width:100%;border-bottom:1px solid #ddd;">
                    <h5 style="font-size:1.25rem;font-weight:bold;margin:1rem 0;">${item.title}</h5>
                    <a href="${item.link}" class="btn btn-danger" style="margin-bottom:1rem;font-weight:bold;">Read more</a>
                `;
            cardContainer.appendChild(card);
            
            
        });
    }
</script>


<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-26 03:32:45.388 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Guide? - 200 null text/html; charset=utf-8 146.5042ms
2025-01-26 03:32:45.420 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 03:32:45.420 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-26 03:32:45.420 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-26 03:32:45.426 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 6.6231ms
2025-01-26 03:32:45.432 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-26 03:32:45.421 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-26 03:32:45.437 +03:00 [INF] [Response] 404 - 4ms

2025-01-26 03:32:45.439 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-26 03:32:45.440 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 19.6579ms
2025-01-26 03:32:45.440 +03:00 [INF] [Response] 404 - 0ms

2025-01-26 03:32:45.446 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-26 03:32:45.448 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 27.5081ms
2025-01-26 03:32:45.456 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 35.0274ms
2025-01-26 03:32:45.462 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-26 03:32:51.751 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/dacousticpro - null null
2025-01-26 03:32:51.760 +03:00 [INF] [Request] GET /Home/dacousticpro

2025-01-26 03:32:51.766 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.dacousticpro (MyShop)'
2025-01-26 03:32:51.769 +03:00 [INF] Route matched with {action = "dacousticpro", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult dacousticpro(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-26 03:32:51.773 +03:00 [INF] Executing ViewResult, running view dacousticpro.
2025-01-26 03:32:51.784 +03:00 [INF] Executed ViewResult - view dacousticpro executed in 11.5569ms.
2025-01-26 03:32:51.786 +03:00 [INF] Executed action MyShop.Controllers.HomeController.dacousticpro (MyShop) in 14.7341ms
2025-01-26 03:32:51.787 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.dacousticpro (MyShop)'
2025-01-26 03:32:51.788 +03:00 [INF] [Response] 200 - 27ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Professional Guide for Acoustic Drums - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
<style>
    /* General Styles */
    body {
        font-family: 'Roboto', sans-serif;
        margin: 0;
        padding: 0;
        background-color: #f4f4f4;
        color: #333;
        line-height: 1.6;
    }

    /* Header Phrase Styles */
    .header-phrase {
        background-color: #333; /* Black */
        color: #fff;
        padding: 20px;
        text-align: center;
    }

    .header-phrase h1 {
        margin: 0;
        font-size: 2.5rem;
    }

    /* Main Content Styles */
    main {
        padding: 20px;
        max-width: 1200px;
        margin: 0 auto;
    }

    section {
        margin-bottom: 40px;
    }

    h2 {
        color: #d32f2f; /* Red */
        border-bottom: 2px solid #d32f2f; /* Red */
        padding-bottom: 10px;
        margin-bottom: 20px;
    }

    .content-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 20px;
    }

    .content-card {
        background-color: #fff;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease;
    }

    .content-card:hover {
        transform: translateY(-5px);
    }

    .content-card img {
        width: 100%;
        height: 200px;
        object-fit: cover;
    }

    .content-card h3 {
        margin: 15px;
        color: #333;
    }

    .content-card p, .content-card ul {
        margin: 0 15px 15px;
        color: #555;
    }

    .content-card ul {
        list-style-type: disc;
        padding-left: 20px;
    }

    /* Footer Phrase Styles */
    .footer-phrase {
        background-color: #333; /* Black */
        color: #fff;
        text-align: center;
        padding: 15px;
        margin-top: 40px;
    }
</style>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Professional Guide for Acoustic Drums</title>
    <link rel="stylesheet" href="styles.css">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
</head>
<body>
    <!-- Header Phrase -->
    <div class="header-phrase">
        <h1>Professional Guide for Acoustic Drums</h1>
    </div>

    <!-- Main Content -->
    <main>
        <!-- Section 1: Advanced Drum Kit Setup -->
        <section class="advanced-setup">
            <h2>1. Advanced Drum Kit Setup</h2>
            <div class="content-grid">
                <div class="content-card">
                    <img src="/Images/pro-drum.jpg" alt="Professional Drum Kit">
                    <h3>Optimized Kit Configuration</h3>
                    <p>Learn how to configure your drum kit for peak performance, focusing on the positioning of toms, cymbals, and the snare drum for maximum comfort and sound quality.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/pads.jpg" alt="High-Quality Drum Pads">
                    <h3>Professional Drum Pads</h3>
                    <p>Upgrade your kit with high-quality drum pads for enhanced responsiveness and durability, allowing for precise and controlled playing.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/prem-crym.jpg" alt="Premium Cymbals">
                    <h3>Premium Cymbals</h3>
                    <p>Explore the top-tier cymbals for professional drummers. These cymbals offer distinct tonal ranges, ideal for studio recordings and live performances.</p>
                </div>
            </div>
        </section>

        <!-- Section 2: Mastering Advanced Drumming Techniques -->
        <section class="advanced-techniques">
            <h2>2. Mastering Advanced Drumming Techniques</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>Complex Rhythmic Structures</h3>
                    <ul>
                        <li>Master complex time signatures and polyrhythms.</li>
                        <li>Integrate advanced hand and foot coordination for seamless rhythm execution.</li>
                    </ul>
                </div>
                <div class="content-card">
                    <h3>Speed and Precision</h3>
                    <ul>
                        <li>Develop control over fast single and double strokes for high-speed drumming.</li>
                        <li>Improve accuracy with ghost notes and subtle dynamic control.</li>
                    </ul>
                </div>
                <div class="content-card">
                    <h3>Dynamic Expressiveness</h3>
                    <ul>
                        <li>Utilize dynamics effectively in various styles from jazz to metal.</li>
                        <li>Explore advanced techniques like rimshots, buzz rolls, and polyrhythmic phrasing.</li>
                    </ul>
                </div>
            </div>
        </section>

        <!-- Section 3: Tuning and Drum Maintenance -->
        <section class="drum-tuning-maintenance">
            <h2>3. Drum Tuning and Maintenance</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>Advanced Tuning Techniques</h3>
                    <p>Perfect the art of tuning your drums to achieve a rich, resonant sound tailored to your specific playing style.</p>
                </div>
                <div class="content-card">
                    <h3>Drumhead Selection</h3>
                    <p>Understand the different types of drumheads and their impact on tone, response, and durability.</p>
                </div>
                <div class="content-card">
                    <h3>Regular Maintenance</h3>
                    <p>Ensure your drum kit remains in top condition with regular cleaning, maintenance, and drumhead replacement schedules.</p>
                </div>
            </div>
        </section>

        <!-- Section 4: Recommended Professional Drum Kits -->
        <section class="recommended-pro-drums">
            <h2>4. Recommended Professional Drum Kits</h2>
            <div class="content-grid">
                <div class="content-card">
                    <img src="/Images/prof-kit.jpg" alt="Professional Acoustic Drum Kit">
                    <h3>High-End Acoustic Drum Kit</h3>
                    <p>A handcrafted, premium acoustic kit designed for professional drummers who demand impeccable sound quality and precision.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/custom-snar.jpg" alt="Custom Snare Drum">
                    <h3>Custom Snare Drum</h3>
                    <p>Upgrade your snare with a custom-made drum for unique tonal characteristics, designed for elite performances.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/vintage.jpeg" alt="Vintage Drum Kit">
                    <h3>Vintage Drum Set</h3>
                    <p>A sought-after vintage drum set, perfect for drummers looking for warm, vintage tones in both studio and live settings.</p>
                </div>
            </div>
        </section>
    </main>

    <!-- Footer Phrase -->
    <div class="footer-phrase">
        <p>Perfect Your Drumming Skills with the Best Equipment!</p>
    </div>
</body>
</html>

        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-26 03:32:51.835 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/dacousticpro - 200 null text/html; charset=utf-8 84.0397ms
2025-01-26 03:32:51.851 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/styles.css - null null
2025-01-26 03:32:51.854 +03:00 [INF] [Request] GET /Home/styles.css

2025-01-26 03:32:51.856 +03:00 [INF] [Response] 404 - 1ms

2025-01-26 03:32:51.856 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-26 03:32:51.862 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/prof-kit.jpg - null null
2025-01-26 03:32:51.862 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/vintage.jpeg - null null
2025-01-26 03:32:51.861 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/prem-crym.jpg - null null
2025-01-26 03:32:51.861 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/styles.css - 404 0 null 10.3479ms
2025-01-26 03:32:51.856 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/pads.jpg - null null
2025-01-26 03:32:51.856 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/pro-drum.jpg - null null
2025-01-26 03:32:51.862 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/custom-snar.jpg - null null
2025-01-26 03:32:51.869 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-26 03:32:51.869 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-26 03:32:51.881 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/Home/styles.css, Response status code: 404
2025-01-26 03:32:51.905 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-26 03:32:51.902 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-26 03:32:51.910 +03:00 [INF] [Response] 404 - 5ms

2025-01-26 03:32:51.911 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-26 03:32:51.918 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 61.9573ms
2025-01-26 03:32:51.930 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 48.1711ms
2025-01-26 03:32:51.913 +03:00 [INF] [Response] 404 - 9ms

2025-01-26 03:32:51.946 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-26 03:32:51.947 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 78.6284ms
2025-01-26 03:32:51.953 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-26 03:32:51.980 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 68.3547ms
2025-01-26 03:32:51.983 +03:00 [INF] Sending file. Request path: '/Images/pro-drum.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\pro-drum.jpg'
2025-01-26 03:32:51.984 +03:00 [INF] Sending file. Request path: '/Images/prof-kit.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\prof-kit.jpg'
2025-01-26 03:32:52.000 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/pro-drum.jpg - 200 40895 image/jpeg 143.8271ms
2025-01-26 03:32:52.009 +03:00 [INF] Sending file. Request path: '/Images/vintage.jpeg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\vintage.jpeg'
2025-01-26 03:32:52.011 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/prof-kit.jpg - 200 95742 image/jpeg 148.6607ms
2025-01-26 03:32:52.021 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/vintage.jpeg - 200 457929 image/jpeg 158.8826ms
2025-01-26 03:32:52.032 +03:00 [INF] Sending file. Request path: '/Images/prem-crym.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\prem-crym.jpg'
2025-01-26 03:32:52.036 +03:00 [INF] Sending file. Request path: '/Images/pads.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\pads.jpg'
2025-01-26 03:32:52.038 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/prem-crym.jpg - 200 838134 image/jpeg 177.0616ms
2025-01-26 03:32:52.041 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/pads.jpg - 200 907978 image/jpeg 184.0819ms
2025-01-26 03:32:52.262 +03:00 [INF] Sending file. Request path: '/Images/custom-snar.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\custom-snar.jpg'
2025-01-26 03:32:52.264 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/custom-snar.jpg - 200 5781921 image/jpeg 402.4013ms
