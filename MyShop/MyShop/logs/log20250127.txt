2025-01-27 01:11:20.610 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-27 01:11:20.972 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-27 01:11:20.975 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-27 01:11:21.100 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-27 01:11:21.103 +03:00 [INF] Hosting environment: Development
2025-01-27 01:11:21.103 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-27 01:11:21.881 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-27 01:11:22.159 +03:00 [INF] [Request] GET /

2025-01-27 01:11:22.225 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 01:11:22.245 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 01:11:22.269 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 01:11:22.342 +03:00 [INF] Executed ViewResult - view Index executed in 77.3762ms.
2025-01-27 01:11:22.345 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 97.0736ms
2025-01-27 01:11:22.346 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 01:11:22.348 +03:00 [INF] [Response] 200 - 200ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Home - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
    

 <style>
    .instrument-name {
        margin-top: 10px; /* Add space between the image and the text */
        font-size: 16px; /* Adjust the text size */
        font-weight: bold; /* Bold text */
        text-align: center; /* Center the text */
    }
  </style>

<section class="category-section py-4">
    <div class="category-section">
        <h3 style="text-align: center; margin-bottom: 20px;">Start Shopping Here</h3>
        <div class="row">
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Guitars'">
                <img src="/Images/pavlo-t-5rEyYBPLN-w-unsplash.jpg" alt="Guitars" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Guitars</p>
            </div>
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Keyboards & Pianos'">
                <img src="/Images/pexels-mikhail-nilov-7570112.jpg" alt="Keyboards & Pianos" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Keyboards & Pianos</p>
            </div>
            <!-- Drums & Percussion -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Drums & Percussion'">
                <img src="/Images/pexels-reneterp-1327430.jpg" alt="Drums & Percussion" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Drums & Percussion</p>
            </div>
            <!-- Pro Audio -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Pro Audio'">
                <img src="/Images/pexels-everson-mayer-478307-1481312.jpg" alt="Pro Audio" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Pro Audio</p>
            </div>
            <!-- Band & Orchestra -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Band & Orchestra'">
                <img src="/Images/pexels-shottrotter-752535.jpg" alt="Band & Orchestra" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Band & Orchestra</p>
            </div>
            <!-- Accessories -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Accessories'">
                <img src="/Images/pexels-rombo-1510555-5280438.jpg" alt="Accessories" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Accessories</p>
            </div>
        </div>
    </div>
</section>


    <section class="membership-section text-center bg-dark text-white py-5">
    <div class="membership-section">
        <h2>Have no clue what to buy ?</h2>
        <p>Check out our professional guide to get the perfect suited instrument !</p>
        <form class="d-inline-flex mt-2" action="/Home/Guide" method="get">
            
            <button class="btn btn-danger" type="submit">professional Guide</button>
        </form>
        </div>
    </section>

    <section class="features-section py-5 bg-light">
            <div class="container">
            <div class="row text-center">
                <div class="col-md-3">
                    <img src="/Images/box.png" alt="Same Day Delivery" class="mb-sm-1" style="width: 40px; height: 40px;">
                    <h5>Same Day/Next Day Delivery</h5>
                    <p>Next day delivery on most orders in Jordan - Same day available</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/shopping-cart.png" alt="Biggest Selection" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Biggest Selection</h5>
                    <p>Largest collection of any store in MENA</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/user-talking-with-speech-bubble.png" alt="Top-notch Support" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Top-notch Support</h5>
                    <p>We are always happy to help in any way we can</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/secure-payment.png" alt="Secure Payments" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Secure Payments</h5>
                    <p>Cash on Delivery available</p>
                </div>
            </div>
            </div>
     </section>


    

    <!-- JavaScript to Toggle Forms -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.js"></script>


        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-27 01:11:22.406 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 537.0785ms
2025-01-27 01:11:22.428 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/audio-waves.png - null null
2025-01-27 01:11:22.438 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 01:11:22.434 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/shopping-cart (1).png - null null
2025-01-27 01:11:22.429 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 01:11:22.432 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 01:11:22.473 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-27 01:11:22.475 +03:00 [INF] The file /Images/shopping-cart (1).png was not modified
2025-01-27 01:11:22.478 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-27 01:11:22.475 +03:00 [INF] The file /Images/audio-waves.png was not modified
2025-01-27 01:11:22.432 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/sound (2).png - null null
2025-01-27 01:11:22.479 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 50.7554ms
2025-01-27 01:11:22.460 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 01:11:22.481 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/shopping-cart (1).png - 304 null image/png 49.0513ms
2025-01-27 01:11:22.483 +03:00 [INF] [Response] 404 - 5ms

2025-01-27 01:11:22.483 +03:00 [INF] [Response] 404 - 9ms

2025-01-27 01:11:22.485 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/audio-waves.png - 304 null image/png 56.2202ms
2025-01-27 01:11:22.499 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 62.9236ms
2025-01-27 01:11:22.498 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 66.1371ms
2025-01-27 01:11:22.490 +03:00 [INF] The file /Images/sound (2).png was not modified
2025-01-27 01:11:22.512 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 01:11:22.514 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 01:11:22.515 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/sound (2).png - 304 null image/png 85.1156ms
2025-01-27 01:11:22.662 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 201.2354ms
2025-01-27 01:11:24.290 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/favicon.ico - null null
2025-01-27 01:11:24.326 +03:00 [INF] Sending file. Request path: '/favicon.ico'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\favicon.ico'
2025-01-27 01:11:24.328 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/favicon.ico - 200 5430 image/x-icon 37.9651ms
2025-01-27 01:11:27.234 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Guide? - null null
2025-01-27 01:11:27.246 +03:00 [INF] [Request] GET /Home/Guide
[QueryString] ?

2025-01-27 01:11:27.248 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Guide (MyShop)'
2025-01-27 01:11:27.252 +03:00 [INF] Route matched with {action = "Guide", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Guide(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 01:11:27.311 +03:00 [INF] Executing ViewResult, running view Guide.
2025-01-27 01:11:27.320 +03:00 [INF] Executed ViewResult - view Guide executed in 9.5803ms.
2025-01-27 01:11:27.322 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Guide (MyShop) in 67.2668ms
2025-01-27 01:11:27.323 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Guide (MyShop)'
2025-01-27 01:11:27.324 +03:00 [INF] [Response] 200 - 78ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Guide - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
<style>

    .instruments-section h1 {
        font-size: 2.5rem;
        font-weight: bold;
        text-align: center;
    }

    .instruments-section p {
        font-size: 1.25rem;
        color: #555;
        text-align: center;
    }

    /* Black Line */
    hr.thick-black-line {
        border: none; /* Remove default borders */
        height: 5px; /* Set the height */
        background-color: black !important; /* Force black color */
        margin: 0 auto; /* Center it horizontally */
        width: 80%; /* Adjust width */
    }


    /* Dropdown Buttons Alignment */
    .instrument-buttons {
        display: flex;
        gap: 1rem; /* Add spacing between dropdown buttons */
        padding-left: 10%; /* Align dropdown buttons with the left edge of the line */
    }

        .instrument-buttons .dropdown {
            display: inline-block;
        }

        /* Styling for Buttons */
        .instrument-buttons .btn {
            font-size: 1rem;
            font-weight: bold;
            padding: 0.5rem 1.5rem;
        }

    /* Dropdown Menu Styling */
    .dropdown-menu {
        font-size: 1rem;
        text-align: left;
    }



</style>


<section class="instruments-section text-center py-5">
    <h1 class="mb-3">Instruments</h1>
    <p class="mb-4">
        Here, the SoundWave’s expert players guide you through the intricacies of the instruments they play.
        Choose an instrument from one of the sections.
    </p>
    <hr class="thick-black-line mb-4" />

    <!-- Dropdown Buttons -->
    <div class="instrument-buttons text-start">
        <!-- Dropdown for Instruments -->
        <div class="dropdown">
            <button class="btn btn-light border text-danger dropdown-toggle"
                    type="button"
                    id="instrumentDropdown"
                    data-bs-toggle="dropdown"
                    aria-expanded="false">
                Instruments
            </button>
            <ul class="dropdown-menu" aria-labelledby="instrumentDropdown">
                <li><a class="dropdown-item instrument-item" href="#">Guitars</a></li>
                <li><a class="dropdown-item instrument-item" href="#">Drums</a></li>
                <li><a class="dropdown-item instrument-item" href="#">Orchestra</a></li>
            </ul>
        </div>

        <!-- Dropdown for Level -->
        <div class="dropdown">
            <button class="btn btn-light border text-danger dropdown-toggle"
                    type="button"
                    id="levelDropdown"
                    data-bs-toggle="dropdown"
                    aria-expanded="false">
                Level
            </button>
            <ul class="dropdown-menu" aria-labelledby="levelDropdown">
                <li><a class="dropdown-item level-item" href="#">Beginner</a></li>
                <li><a class="dropdown-item level-item" href="#">Professional</a></li>
            </ul>
        </div>
    </div>
    
    <div id="card-container" class="d-flex justify-content-center gap-4 mt-5"></div>

</section>

<script>
    const instrumentDropdown = document.querySelectorAll('.instrument-item');
    const levelDropdown = document.querySelectorAll('.level-item');
    const cardContainer = document.getElementById('card-container');

    let selectedInstrument = '';
    let selectedLevel = '';

    const guitarsData = [
        {
            img: '/Images/guitar-4750599_1280.jpg',
            title: 'Acoustic Guitar',
            link: '#'
        },
        {
            img: '/Images/electric-guitar-7815026_1280.jpg',
            title: 'Electric Guitar',
            link: '#'
        },
        {
            img: '/Images/bass-guitar-913092_1280.jpg',
            title: 'Bass Guitar',
            link: '#'
        }
    ];

    const DrumsData = [
        {
            img: '/Images/african-2771092_1280.jpg',
            title: 'Hand Drums',
            link: '#'
        },
        {
            img: '/Images/electronic-drum-pad-5854409_1280.jpg',
            title: 'Electronic Drums',
            link: '#'
        },
        {
            img: '/Images/drum-set-1839383_1280.jpg',
            title: 'Acoustic Drums',
            link: '#'
        }
    ];

    const OrchestraData = [
        {
            img: '/Images/bowed-instrument-1853324_1280.jpg',
            title: 'Strings',
            link: '#'
        },
        {
            img: '/Images/saxophone-3246650_1280.jpg',
            title: 'Brass',
            link: '#'
        },
        
    ];

    instrumentDropdown.forEach(item => {
        item.addEventListener('click', function () {
            selectedInstrument = this.textContent.trim();
            checkSelection();
        });
    });

    levelDropdown.forEach(item => {
        item.addEventListener('click', function () {
            selectedLevel = this.textContent.trim();
            checkSelection();
        });
    });

    function checkSelection() {
        if (selectedInstrument === 'Guitars' && selectedLevel === 'Beginner') {
            renderCards(guitarsData);
        } 
        else if (selectedInstrument === 'Guitars' && selectedLevel === 'Professional') {
            renderCards(guitarsData);
        }
        else if (selectedInstrument === 'Drums' && (selectedLevel === 'Professional' || selectedLevel === 'Beginner')) {
            renderCards(DrumsData);

        }
        else if (selectedInstrument === 'Orchestra' && (selectedLevel === 'Professional' || selectedLevel === 'Beginner')) {
            renderCards(OrchestraData);

        }
        else {
            cardContainer.innerHTML = ''; // Clear cards
        }
    }

    function renderCards(data) {
        cardContainer.innerHTML = ''; // Clear previous cards

        data.forEach(item => {
            if (item.title.toLowerCase() === 'electric guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'electricguid'; // Set link to electricguid for Beginners
                } else {
                    item.link = 'proelectric'; // Set link to proelectric for other levels
                }
            } else if (item.title.toLowerCase() === 'acoustic guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'acousticpeg'; // Set link to acousticpeg for Beginners
                } else {
                    item.link = 'acousticpro'; // Set link to acousticpro for other levels
                }
            } else if (item.title.toLowerCase() === 'bass guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'bassbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'basspro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'hand drums') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'handbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'handpro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'electronic drums') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'delebeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'delepro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'acoustic drums') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'dacosticbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'dacousticpro'; // Set link to basspro for other levels
                }
            } else {
                // Default case if no matches found
                item.link = 'default'; // Default link or other fallback
            }


            const card = document.createElement('div');
            card.classList.add('card');
            card.style.width = '22rem';
            card.style.textAlign = 'center';
            card.style.border = '1px solid #ddd';
            card.style.boxShadow = '0 4px 6px rgba(0, 0, 0, 0.1)';
            card.style.borderRadius = '8px';

            card.innerHTML = `
                    <img src="${item.img}" alt="${item.title}" style="width:100%;border-bottom:1px solid #ddd;">
                    <h5 style="font-size:1.25rem;font-weight:bold;margin:1rem 0;">${item.title}</h5>
                    <a href="${item.link}" class="btn btn-danger" style="margin-bottom:1rem;font-weight:bold;">Read more</a>
                `;
            cardContainer.appendChild(card);
            
            
        });
    }
</script>


<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-27 01:11:27.378 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Guide? - 200 null text/html; charset=utf-8 144.211ms
2025-01-27 01:11:27.396 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 01:11:27.397 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 01:11:27.397 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 01:11:27.397 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 01:11:27.401 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 4.7498ms
2025-01-27 01:11:27.404 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-27 01:11:27.407 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-27 01:11:27.415 +03:00 [INF] [Response] 404 - 11ms

2025-01-27 01:11:27.417 +03:00 [INF] [Response] 404 - 9ms

2025-01-27 01:11:27.419 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 22.3591ms
2025-01-27 01:11:27.424 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 26.7687ms
2025-01-27 01:11:27.428 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 31.22ms
2025-01-27 01:11:27.428 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 01:11:27.432 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 01:11:31.792 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/african-2771092_1280.jpg - null null
2025-01-27 01:11:31.793 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/electronic-drum-pad-5854409_1280.jpg - null null
2025-01-27 01:11:31.793 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/drum-set-1839383_1280.jpg - null null
2025-01-27 01:11:31.802 +03:00 [INF] The file /Images/african-2771092_1280.jpg was not modified
2025-01-27 01:11:31.808 +03:00 [INF] The file /Images/electronic-drum-pad-5854409_1280.jpg was not modified
2025-01-27 01:11:31.810 +03:00 [INF] The file /Images/drum-set-1839383_1280.jpg was not modified
2025-01-27 01:11:31.811 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/african-2771092_1280.jpg - 304 null image/jpeg 19.4465ms
2025-01-27 01:11:31.811 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/electronic-drum-pad-5854409_1280.jpg - 304 null image/jpeg 19.0225ms
2025-01-27 01:11:31.812 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/drum-set-1839383_1280.jpg - 304 null image/jpeg 19.7836ms
2025-01-27 01:11:33.958 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/delebeg - null null
2025-01-27 01:11:33.970 +03:00 [INF] [Request] GET /Home/delebeg

2025-01-27 01:11:33.973 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.delebeg (MyShop)'
2025-01-27 01:11:33.975 +03:00 [INF] Route matched with {action = "delebeg", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult delebeg(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 01:11:33.978 +03:00 [INF] Executing ViewResult, running view delebeg.
2025-01-27 01:11:33.985 +03:00 [INF] Executed ViewResult - view delebeg executed in 7.5833ms.
2025-01-27 01:11:33.987 +03:00 [INF] Executed action MyShop.Controllers.HomeController.delebeg (MyShop) in 10.3657ms
2025-01-27 01:11:33.988 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.delebeg (MyShop)'
2025-01-27 01:11:33.990 +03:00 [INF] [Response] 200 - 19ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Electronic Drums Beginner Guide - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
<style>
    /* General Styles */
    body {
        font-family: 'Roboto', sans-serif;
        margin: 0;
        padding: 0;
        background-color: #f4f4f4;
        color: #333;
        line-height: 1.6;
    }

    /* Header Phrase Styles */
    .header-phrase {
        background-color: #333; /* Black */
        color: #fff;
        padding: 20px;
        text-align: center;
    }

    .header-phrase h1 {
        margin: 0;
        font-size: 2.5rem;
    }

    /* Main Content Styles */
    main {
        padding: 20px;
        max-width: 1200px;
        margin: 0 auto;
    }

    section {
        margin-bottom: 40px;
    }

    h2 {
        color: #d32f2f; /* Red */
        border-bottom: 2px solid #d32f2f; /* Red */
        padding-bottom: 10px;
        margin-bottom: 20px;
    }

    .content-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 20px;
    }

    .content-card {
        background-color: #fff;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease;
    }

    .content-card:hover {
        transform: translateY(-5px);
    }

    .content-card img {
        width: 100%;
        height: 200px;
        object-fit: cover;
    }

    .content-card h3 {
        margin: 15px;
        color: #333;
    }

    .content-card p, .content-card ul {
        margin: 0 15px 15px;
        color: #555;
    }

    .content-card ul {
        list-style-type: disc;
        padding-left: 20px;
    }

    /* Footer Phrase Styles */
    .footer-phrase {
        background-color: #333; /* Black */
        color: #fff;
        text-align: center;
        padding: 15px;
        margin-top: 40px;
    }
</style>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Electronic Drums Beginner Guide</title>
    <link rel="stylesheet" href="styles.css">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
</head>
<body>
    <!-- Header Phrase -->
    <div class="header-phrase">
        <h1>Electronic Drums Beginner Guide</h1>
    </div>

    <!-- Main Content -->
    <main>
        <!-- Section 1: Choosing Your First Electronic Drum Kit -->
        <section class="choosing-drum">
            <h2>1. Choosing Your First Electronic Drum Kit</h2>
            <div class="content-grid">
                <div class="content-card">
                    <img src="/Images/basic-elec.jpg" alt="Basic Electronic Drum Kit">
                    <h3>Starter Kits</h3>
                    <p>Perfect for beginners, starter kits are affordable and offer the basic features you need to get started.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/mesh.jpg" alt="Mesh Drum Pads">
                    <h3>Mesh vs. Rubber Pads</h3>
                    <p>Understand the difference between mesh heads for a realistic feel and rubber pads for durability and affordability.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/modern.jpeg" alt="Drum Module">
                    <h3>Drum Module Features</h3>
                    <p>Explore the importance of the drum module, which controls your drum sounds and includes built-in practice tools.</p>
                </div>
            </div>
        </section>

        <!-- Section 2: Setting Up Your Kit -->
        <section class="setup">
            <h2>2. Setting Up Your Kit</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>Space and Placement</h3>
                    <ul>
                        <li>Choose a quiet, stable location for your drum kit.</li>
                        <li>Arrange pads and cymbals in a comfortable and ergonomic layout.</li>
                    </ul>
                </div>
                <div class="content-card">
                    <h3>Cables and Connections</h3>
                    <ul>
                        <li>Learn how to connect pads and cymbals to the drum module.</li>
                        <li>Organize cables to avoid tangling and interference.</li>
                    </ul>
                </div>
                <div class="content-card">
                    <h3>Volume Control</h3>
                    <ul>
                        <li>Use headphones for quiet practice or connect to an amplifier for performances.</li>
                        <li>Adjust volume levels on the drum module to suit your environment.</li>
                    </ul>
                </div>
            </div>
        </section>

        <!-- Section 3: Practicing on Electronic Drums -->
        <section class="practice-tips">
            <h2>3. Practicing on Electronic Drums</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>Built-In Practice Tools</h3>
                    <p>Utilize features like metronomes, play-along tracks, and training modes to improve your timing and rhythm.</p>
                </div>
                <div class="content-card">
                    <h3>Quiet Practice</h3>
                    <p>Take advantage of the quiet nature of electronic drums to practice without disturbing others.</p>
                </div>
                <div class="content-card">
                    <h3>Exploring Sounds</h3>
                    <p>Experiment with the variety of drum kits and sounds available to discover your style and preferences.</p>
                </div>
            </div>
        </section>

        <!-- Section 4: Essential Accessories -->
        <section class="accessories">
            <h2>4. Essential Accessories</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>Drum Sticks</h3>
                    <p>Start with lightweight, beginner-friendly drum sticks that are easy to control.</p>
                </div>
                <div class="content-card">
                    <h3>Headphones</h3>
                    <p>Invest in high-quality headphones for clear sound and a better practice experience.</p>
                </div>
                <div class="content-card">
                    <h3>Drum Throne</h3>
                    <p>A comfortable, adjustable drum throne is essential for maintaining proper posture during practice.</p>
                </div>
            </div>
        </section>
    </main>

    <!-- Footer Phrase -->
    <div class="footer-phrase">
        <p>Start Your Drumming Journey with Confidence!</p>
    </div>
</body>
</html>

        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-27 01:11:34.028 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/delebeg - 200 null text/html; charset=utf-8 71.0112ms
2025-01-27 01:11:34.045 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/styles.css - null null
2025-01-27 01:11:34.045 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 01:11:34.045 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/modern.jpeg - null null
2025-01-27 01:11:34.046 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 01:11:34.045 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/basic-elec.jpg - null null
2025-01-27 01:11:34.045 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 01:11:34.045 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/mesh.jpg - null null
2025-01-27 01:11:34.055 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-27 01:11:34.062 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-27 01:11:34.075 +03:00 [INF] [Response] 404 - 20ms

2025-01-27 01:11:34.052 +03:00 [INF] [Request] GET /Home/styles.css

2025-01-27 01:11:34.071 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 25.3505ms
2025-01-27 01:11:34.077 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 31.7837ms
2025-01-27 01:11:34.077 +03:00 [INF] Sending file. Request path: '/Images/modern.jpeg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\modern.jpeg'
2025-01-27 01:11:34.076 +03:00 [INF] [Response] 404 - 14ms

2025-01-27 01:11:34.078 +03:00 [INF] [Response] 404 - 26ms

2025-01-27 01:11:34.084 +03:00 [INF] Sending file. Request path: '/Images/basic-elec.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\basic-elec.jpg'
2025-01-27 01:11:34.047 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 01:11:34.088 +03:00 [INF] Sending file. Request path: '/Images/mesh.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\mesh.jpg'
2025-01-27 01:11:34.089 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 01:11:34.090 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/modern.jpeg - 200 35359 image/jpeg 44.791ms
2025-01-27 01:11:34.091 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 45.1899ms
2025-01-27 01:11:34.091 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/styles.css - 404 0 null 46.2316ms
2025-01-27 01:11:34.093 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/basic-elec.jpg - 200 85508 image/jpeg 47.3146ms
2025-01-27 01:11:34.097 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/mesh.jpg - 200 11897 image/jpeg 50.964ms
2025-01-27 01:11:34.110 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 63.1609ms
2025-01-27 01:11:34.113 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 01:11:34.116 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/Home/styles.css, Response status code: 404
2025-01-27 01:11:50.670 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 01:11:50.676 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 6.8437ms
2025-01-27 01:11:58.407 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/handbeg - null null
2025-01-27 01:11:58.417 +03:00 [INF] [Request] GET /Home/handbeg

2025-01-27 01:11:58.419 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.handbeg (MyShop)'
2025-01-27 01:11:58.421 +03:00 [INF] Route matched with {action = "handbeg", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult handbeg(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 01:11:58.423 +03:00 [INF] Executing ViewResult, running view handbeg.
2025-01-27 01:11:58.431 +03:00 [INF] Executed ViewResult - view handbeg executed in 8.8898ms.
2025-01-27 01:11:58.434 +03:00 [INF] Executed action MyShop.Controllers.HomeController.handbeg (MyShop) in 12.052ms
2025-01-27 01:11:58.435 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.handbeg (MyShop)'
2025-01-27 01:11:58.436 +03:00 [INF] [Response] 200 - 18ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Beginner Hand Drum Guide - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
<style>
    /* General Styles */
    body {
        font-family: 'Roboto', sans-serif;
        margin: 0;
        padding: 0;
        background-color: #f4f4f4;
        color: #333;
        line-height: 1.6;
    }

    /* Header Phrase Styles */
    .header-phrase {
        background-color: #333; /* Black */
        color: #fff;
        padding: 20px;
        text-align: center;
    }

    .header-phrase h1 {
        margin: 0;
        font-size: 2.5rem;
    }

    /* Main Content Styles */
    main {
        padding: 20px;
        max-width: 1200px;
        margin: 0 auto;
    }

    section {
        margin-bottom: 40px;
    }

    h2 {
        color: #d32f2f; /* Red */
        border-bottom: 2px solid #d32f2f; /* Red */
        padding-bottom: 10px;
        margin-bottom: 20px;
    }

    .content-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 20px;
    }

    .content-card {
        background-color: #fff;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease;
    }

    .content-card:hover {
        transform: translateY(-5px);
    }

    .content-card img {
        width: 100%;
        height: 200px;
        object-fit: cover;
    }

    .content-card h3 {
        margin: 15px;
        color: #333;
    }

    .content-card p, .content-card ul {
        margin: 0 15px 15px;
        color: #555;
    }

    .content-card ul {
        list-style-type: disc;
        padding-left: 20px;
    }

    /* Footer Phrase Styles */
    .footer-phrase {
        background-color: #333; /* Black */
        color: #fff;
        text-align: center;
        padding: 15px;
        margin-top: 40px;
    }
</style>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Beginner Hand Drum Guide</title>
    <link rel="stylesheet" href="styles.css">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
</head>
<body>
    <!-- Header Phrase -->
    <div class="header-phrase">
        <h1>Beginner Hand Drum Guide</h1>
    </div>

    <!-- Main Content -->
    <main>
        <!-- Section 1: Choosing Your First Hand Drum -->
        <section class="choosing-drum">
            <h2>1. Choosing Your First Hand Drum</h2>
            <div class="content-grid">
                <div class="content-card">
                    <img src="/Images/djembe-2413970_1280.jpg" alt="Djembe Drum">
                    <h3>Djembe</h3>
                    <p>Great for beginners, the djembe is versatile and easy to play. Look for one with a sturdy wood body and natural drumhead.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/conga-4590194_1280.jpg" alt="Conga Drum">
                    <h3>Conga</h3>
                    <p>A bit larger, congas are ideal for Latin and Afro-Cuban rhythms. Start with a single conga drum before expanding to a set.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/tape-1582143_1280.jpg" alt="Bongo Drums">
                    <h3>Bongos</h3>
                    <p>Compact and lightweight, bongos are perfect for small hands and learning simple rhythms.</p>
                </div>
            </div>
        </section>

        <!-- Section 2: Basic Playing Techniques -->
        <section class="basic-techniques">
            <h2>2. Basic Playing Techniques</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>Hand Positions</h3>
                    <ul>
                        <li>Use the pads of your fingers for softer tones.</li>
                        <li>Strike with the palm for deeper, resonant sounds.</li>
                    </ul>
                </div>
                <div class="content-card">
                    <h3>Basic Rhythms</h3>
                    <ul>
                        <li>Start with simple beats like "dum-dum-ta-ta" to build confidence.</li>
                        <li>Practice steady timing with a metronome.</li>
                    </ul>
                </div>
                <div class="content-card">
                    <h3>Posture</h3>
                    <ul>
                        <li>Sit comfortably with the drum between your knees or on a stand.</li>
                        <li>Keep your back straight to avoid strain.</li>
                    </ul>
                </div>
            </div>
        </section>

        <!-- Section 3: Accessories for Beginners -->
        <section class="accessories">
            <h2>3. Accessories for Beginners</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>Drum Bag</h3>
                    <p>Invest in a padded bag to protect your drum during transport.</p>
                </div>
                <div class="content-card">
                    <h3>Hand Cream</h3>
                    <p>Keep your hands moisturized to prevent discomfort during long practice sessions.</p>
                </div>
                <div class="content-card">
                    <h3>Practice Pad</h3>
                    <p>A rubber practice pad can help you work on rhythms quietly.</p>
                </div>
            </div>
        </section>

        <!-- Section 4: Recommended Starter Drums -->
        <section class="recommended-drums">
            <h2>4. Recommended Starter Drums</h2>
            <div class="content-grid">
                <div class="content-card">
                    <img src="/Images/african-1060423_1280.jpg" alt="Rope-Tuned Djembe">
                    <h3>Rope-Tuned Djembe</h3>
                    <p>Lightweight and portable, this drum is ideal for beginners exploring world rhythms.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/africa-2941133_1280.jpg" alt="Beginner Bongo Set">
                    <h3>Beginner Bongo Set</h3>
                    <p>An affordable and compact option for learning basic hand percussion techniques.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/compact.jpg" alt="Compact Conga">
                    <h3>Compact Conga</h3>
                    <p>Perfect for smaller spaces, this drum offers great sound without being bulky.</p>
                </div>
            </div>
        </section>
    </main>

    <!-- Footer Phrase -->
    <div class="footer-phrase">
        <p>Start Your Hand Drumming Journey Today!</p>
    </div>
</body>
</html>

        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-27 01:11:58.479 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/handbeg - 200 null text/html; charset=utf-8 72.1018ms
2025-01-27 01:11:58.491 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/styles.css - null null
2025-01-27 01:11:58.493 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/djembe-2413970_1280.jpg - null null
2025-01-27 01:11:58.494 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/africa-2941133_1280.jpg - null null
2025-01-27 01:11:58.520 +03:00 [INF] The file /Images/djembe-2413970_1280.jpg was not modified
2025-01-27 01:11:58.493 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/african-1060423_1280.jpg - null null
2025-01-27 01:11:58.536 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/djembe-2413970_1280.jpg - 304 null image/jpeg 42.9328ms
2025-01-27 01:11:58.493 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 01:11:58.502 +03:00 [INF] [Request] GET /Home/styles.css

2025-01-27 01:11:58.494 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/compact.jpg - null null
2025-01-27 01:11:58.507 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/conga-4590194_1280.jpg - null null
2025-01-27 01:11:58.508 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 01:11:58.565 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-27 01:11:58.523 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/tape-1582143_1280.jpg - null null
2025-01-27 01:11:58.552 +03:00 [INF] [Response] 404 - 50ms

2025-01-27 01:11:58.558 +03:00 [INF] The file /Images/conga-4590194_1280.jpg was not modified
2025-01-27 01:11:58.577 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/styles.css - 404 0 null 85.9088ms
2025-01-27 01:11:58.584 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/conga-4590194_1280.jpg - 304 null image/jpeg 77.5698ms
2025-01-27 01:11:58.604 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/Home/styles.css, Response status code: 404
2025-01-27 01:11:58.566 +03:00 [INF] [Response] 404 - 1ms

2025-01-27 01:11:58.516 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 01:11:58.614 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 105.2427ms
2025-01-27 01:11:58.620 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-27 01:11:58.572 +03:00 [INF] The file /Images/tape-1582143_1280.jpg was not modified
2025-01-27 01:11:58.527 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 01:11:58.552 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 58.9117ms
2025-01-27 01:11:58.621 +03:00 [INF] Sending file. Request path: '/Images/african-1060423_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\african-1060423_1280.jpg'
2025-01-27 01:11:58.623 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 01:11:58.634 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/african-1060423_1280.jpg - 200 360050 image/jpeg 141.277ms
2025-01-27 01:11:58.623 +03:00 [INF] [Response] 404 - 3ms

2025-01-27 01:11:58.624 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/tape-1582143_1280.jpg - 304 null image/jpeg 101.9686ms
2025-01-27 01:11:58.584 +03:00 [INF] Sending file. Request path: '/Images/compact.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\compact.jpg'
2025-01-27 01:11:58.609 +03:00 [INF] Sending file. Request path: '/Images/africa-2941133_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\africa-2941133_1280.jpg'
2025-01-27 01:11:58.641 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 113.7347ms
2025-01-27 01:11:58.642 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 126.7008ms
2025-01-27 01:11:58.648 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/compact.jpg - 200 46591 image/jpeg 154.9001ms
2025-01-27 01:11:58.650 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/africa-2941133_1280.jpg - 200 178967 image/jpeg 156.8234ms
2025-01-27 01:11:58.656 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 01:13:20.901 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-27 01:13:21.177 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-27 01:13:21.183 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-27 01:13:21.284 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-27 01:13:21.288 +03:00 [INF] Hosting environment: Development
2025-01-27 01:13:21.291 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-27 01:13:21.445 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-27 01:13:21.643 +03:00 [INF] [Request] GET /

2025-01-27 01:13:21.681 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 01:13:21.697 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 01:13:21.723 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 01:13:21.782 +03:00 [INF] Executed ViewResult - view Index executed in 64.1638ms.
2025-01-27 01:13:21.789 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 89.3455ms
2025-01-27 01:13:21.791 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 01:13:21.795 +03:00 [INF] [Response] 200 - 162ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Home - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
    

 <style>
    .instrument-name {
        margin-top: 10px; /* Add space between the image and the text */
        font-size: 16px; /* Adjust the text size */
        font-weight: bold; /* Bold text */
        text-align: center; /* Center the text */
    }
  </style>

<section class="category-section py-4">
    <div class="category-section">
        <h3 style="text-align: center; margin-bottom: 20px;">Start Shopping Here</h3>
        <div class="row">
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Guitars'">
                <img src="/Images/pavlo-t-5rEyYBPLN-w-unsplash.jpg" alt="Guitars" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Guitars</p>
            </div>
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Keyboards & Pianos'">
                <img src="/Images/pexels-mikhail-nilov-7570112.jpg" alt="Keyboards & Pianos" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Keyboards & Pianos</p>
            </div>
            <!-- Drums & Percussion -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Drums & Percussion'">
                <img src="/Images/pexels-reneterp-1327430.jpg" alt="Drums & Percussion" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Drums & Percussion</p>
            </div>
            <!-- Pro Audio -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Pro Audio'">
                <img src="/Images/pexels-everson-mayer-478307-1481312.jpg" alt="Pro Audio" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Pro Audio</p>
            </div>
            <!-- Band & Orchestra -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Band & Orchestra'">
                <img src="/Images/pexels-shottrotter-752535.jpg" alt="Band & Orchestra" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Band & Orchestra</p>
            </div>
            <!-- Accessories -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Accessories'">
                <img src="/Images/pexels-rombo-1510555-5280438.jpg" alt="Accessories" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Accessories</p>
            </div>
        </div>
    </div>
</section>


    <section class="membership-section text-center bg-dark text-white py-5">
    <div class="membership-section">
        <h2>Have no clue what to buy ?</h2>
        <p>Check out our professional guide to get the perfect suited instrument !</p>
        <form class="d-inline-flex mt-2" action="/Home/Guide" method="get">
            
            <button class="btn btn-danger" type="submit">professional Guide</button>
        </form>
        </div>
    </section>

    <section class="features-section py-5 bg-light">
            <div class="container">
            <div class="row text-center">
                <div class="col-md-3">
                    <img src="/Images/box.png" alt="Same Day Delivery" class="mb-sm-1" style="width: 40px; height: 40px;">
                    <h5>Same Day/Next Day Delivery</h5>
                    <p>Next day delivery on most orders in Jordan - Same day available</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/shopping-cart.png" alt="Biggest Selection" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Biggest Selection</h5>
                    <p>Largest collection of any store in MENA</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/user-talking-with-speech-bubble.png" alt="Top-notch Support" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Top-notch Support</h5>
                    <p>We are always happy to help in any way we can</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/secure-payment.png" alt="Secure Payments" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Secure Payments</h5>
                    <p>Cash on Delivery available</p>
                </div>
            </div>
            </div>
     </section>


    

    <!-- JavaScript to Toggle Forms -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.js"></script>


        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-27 01:13:21.855 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 423.5225ms
2025-01-27 01:13:21.875 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 01:13:21.875 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 01:13:21.875 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 01:13:21.878 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 01:13:21.885 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-27 01:13:21.882 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-27 01:13:21.897 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 21.9056ms
2025-01-27 01:13:21.900 +03:00 [INF] [Response] 404 - 17ms

2025-01-27 01:13:21.900 +03:00 [INF] [Response] 404 - 14ms

2025-01-27 01:13:21.909 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 33.9996ms
2025-01-27 01:13:21.909 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 34.5507ms
2025-01-27 01:13:21.914 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 01:13:21.917 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 01:13:21.944 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 66.7249ms
2025-01-27 01:13:26.076 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Guide? - null null
2025-01-27 01:13:26.091 +03:00 [INF] [Request] GET /Home/Guide
[QueryString] ?

2025-01-27 01:13:26.095 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Guide (MyShop)'
2025-01-27 01:13:26.098 +03:00 [INF] Route matched with {action = "Guide", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Guide(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 01:13:26.145 +03:00 [INF] Executing ViewResult, running view Guide.
2025-01-27 01:13:26.156 +03:00 [INF] Executed ViewResult - view Guide executed in 11.517ms.
2025-01-27 01:13:26.158 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Guide (MyShop) in 57.9186ms
2025-01-27 01:13:26.159 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Guide (MyShop)'
2025-01-27 01:13:26.161 +03:00 [INF] [Response] 200 - 69ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Guide - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
<style>

    .instruments-section h1 {
        font-size: 2.5rem;
        font-weight: bold;
        text-align: center;
    }

    .instruments-section p {
        font-size: 1.25rem;
        color: #555;
        text-align: center;
    }

    /* Black Line */
    hr.thick-black-line {
        border: none; /* Remove default borders */
        height: 5px; /* Set the height */
        background-color: black !important; /* Force black color */
        margin: 0 auto; /* Center it horizontally */
        width: 80%; /* Adjust width */
    }


    /* Dropdown Buttons Alignment */
    .instrument-buttons {
        display: flex;
        gap: 1rem; /* Add spacing between dropdown buttons */
        padding-left: 10%; /* Align dropdown buttons with the left edge of the line */
    }

        .instrument-buttons .dropdown {
            display: inline-block;
        }

        /* Styling for Buttons */
        .instrument-buttons .btn {
            font-size: 1rem;
            font-weight: bold;
            padding: 0.5rem 1.5rem;
        }

    /* Dropdown Menu Styling */
    .dropdown-menu {
        font-size: 1rem;
        text-align: left;
    }



</style>


<section class="instruments-section text-center py-5">
    <h1 class="mb-3">Instruments</h1>
    <p class="mb-4">
        Here, the SoundWave’s expert players guide you through the intricacies of the instruments they play.
        Choose an instrument from one of the sections.
    </p>
    <hr class="thick-black-line mb-4" />

    <!-- Dropdown Buttons -->
    <div class="instrument-buttons text-start">
        <!-- Dropdown for Instruments -->
        <div class="dropdown">
            <button class="btn btn-light border text-danger dropdown-toggle"
                    type="button"
                    id="instrumentDropdown"
                    data-bs-toggle="dropdown"
                    aria-expanded="false">
                Instruments
            </button>
            <ul class="dropdown-menu" aria-labelledby="instrumentDropdown">
                <li><a class="dropdown-item instrument-item" href="#">Guitars</a></li>
                <li><a class="dropdown-item instrument-item" href="#">Drums</a></li>
                <li><a class="dropdown-item instrument-item" href="#">Orchestra</a></li>
            </ul>
        </div>

        <!-- Dropdown for Level -->
        <div class="dropdown">
            <button class="btn btn-light border text-danger dropdown-toggle"
                    type="button"
                    id="levelDropdown"
                    data-bs-toggle="dropdown"
                    aria-expanded="false">
                Level
            </button>
            <ul class="dropdown-menu" aria-labelledby="levelDropdown">
                <li><a class="dropdown-item level-item" href="#">Beginner</a></li>
                <li><a class="dropdown-item level-item" href="#">Professional</a></li>
            </ul>
        </div>
    </div>
    
    <div id="card-container" class="d-flex justify-content-center gap-4 mt-5"></div>

</section>

<script>
    const instrumentDropdown = document.querySelectorAll('.instrument-item');
    const levelDropdown = document.querySelectorAll('.level-item');
    const cardContainer = document.getElementById('card-container');

    let selectedInstrument = '';
    let selectedLevel = '';

    const guitarsData = [
        {
            img: '/Images/guitar-4750599_1280.jpg',
            title: 'Acoustic Guitar',
            link: '#'
        },
        {
            img: '/Images/electric-guitar-7815026_1280.jpg',
            title: 'Electric Guitar',
            link: '#'
        },
        {
            img: '/Images/bass-guitar-913092_1280.jpg',
            title: 'Bass Guitar',
            link: '#'
        }
    ];

    const DrumsData = [
        {
            img: '/Images/african-2771092_1280.jpg',
            title: 'Hand Drums',
            link: '#'
        },
        {
            img: '/Images/electronic-drum-pad-5854409_1280.jpg',
            title: 'Electronic Drums',
            link: '#'
        },
        {
            img: '/Images/drum-set-1839383_1280.jpg',
            title: 'Acoustic Drums',
            link: '#'
        }
    ];

    const OrchestraData = [
        {
            img: '/Images/bowed-instrument-1853324_1280.jpg',
            title: 'Strings',
            link: '#'
        },
        {
            img: '/Images/saxophone-3246650_1280.jpg',
            title: 'Brass',
            link: '#'
        },
        
    ];

    instrumentDropdown.forEach(item => {
        item.addEventListener('click', function () {
            selectedInstrument = this.textContent.trim();
            checkSelection();
        });
    });

    levelDropdown.forEach(item => {
        item.addEventListener('click', function () {
            selectedLevel = this.textContent.trim();
            checkSelection();
        });
    });

    function checkSelection() {
        if (selectedInstrument === 'Guitars' && selectedLevel === 'Beginner') {
            renderCards(guitarsData);
        } 
        else if (selectedInstrument === 'Guitars' && selectedLevel === 'Professional') {
            renderCards(guitarsData);
        }
        else if (selectedInstrument === 'Drums' && (selectedLevel === 'Professional' || selectedLevel === 'Beginner')) {
            renderCards(DrumsData);

        }
        else if (selectedInstrument === 'Orchestra' && (selectedLevel === 'Professional' || selectedLevel === 'Beginner')) {
            renderCards(OrchestraData);

        }
        else {
            cardContainer.innerHTML = ''; // Clear cards
        }
    }

    function renderCards(data) {
        cardContainer.innerHTML = ''; // Clear previous cards

        data.forEach(item => {
            if (item.title.toLowerCase() === 'electric guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'electricguid'; // Set link to electricguid for Beginners
                } else {
                    item.link = 'proelectric'; // Set link to proelectric for other levels
                }
            } else if (item.title.toLowerCase() === 'acoustic guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'acousticpeg'; // Set link to acousticpeg for Beginners
                } else {
                    item.link = 'acousticpro'; // Set link to acousticpro for other levels
                }
            } else if (item.title.toLowerCase() === 'bass guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'bassbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'basspro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'hand drums') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'handbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'handpro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'electronic drums') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'delebeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'delepro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'acoustic drums') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'dacosticbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'dacousticpro'; // Set link to basspro for other levels
                }
            } else {
                // Default case if no matches found
                item.link = 'default'; // Default link or other fallback
            }


            const card = document.createElement('div');
            card.classList.add('card');
            card.style.width = '22rem';
            card.style.textAlign = 'center';
            card.style.border = '1px solid #ddd';
            card.style.boxShadow = '0 4px 6px rgba(0, 0, 0, 0.1)';
            card.style.borderRadius = '8px';

            card.innerHTML = `
                    <img src="${item.img}" alt="${item.title}" style="width:100%;border-bottom:1px solid #ddd;">
                    <h5 style="font-size:1.25rem;font-weight:bold;margin:1rem 0;">${item.title}</h5>
                    <a href="${item.link}" class="btn btn-danger" style="margin-bottom:1rem;font-weight:bold;">Read more</a>
                `;
            cardContainer.appendChild(card);
            
            
        });
    }
</script>


<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-27 01:13:26.213 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Guide? - 200 null text/html; charset=utf-8 136.6587ms
2025-01-27 01:13:26.230 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 01:13:26.230 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 01:13:26.230 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 01:13:26.233 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 3.5176ms
2025-01-27 01:13:26.246 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-27 01:13:26.230 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 01:13:26.249 +03:00 [INF] [Response] 404 - 3ms

2025-01-27 01:13:26.257 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-27 01:13:26.257 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 27.1959ms
2025-01-27 01:13:26.258 +03:00 [INF] [Response] 404 - 1ms

2025-01-27 01:13:26.263 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 32.6956ms
2025-01-27 01:13:26.263 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 01:13:26.265 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 35.2995ms
2025-01-27 01:13:26.276 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 01:13:39.668 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/delebeg - null null
2025-01-27 01:13:39.682 +03:00 [INF] [Request] GET /Home/delebeg

2025-01-27 01:13:39.687 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.delebeg (MyShop)'
2025-01-27 01:13:39.689 +03:00 [INF] Route matched with {action = "delebeg", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult delebeg(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 01:13:39.692 +03:00 [INF] Executing ViewResult, running view delebeg.
2025-01-27 01:13:39.697 +03:00 [INF] Executed ViewResult - view delebeg executed in 5.9508ms.
2025-01-27 01:13:39.701 +03:00 [INF] Executed action MyShop.Controllers.HomeController.delebeg (MyShop) in 9.8595ms
2025-01-27 01:13:39.704 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.delebeg (MyShop)'
2025-01-27 01:13:39.705 +03:00 [INF] [Response] 200 - 22ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Electronic Drums Beginner Guide - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
<style>
    /* General Styles */
    body {
        font-family: 'Roboto', sans-serif;
        margin: 0;
        padding: 0;
        background-color: #f4f4f4;
        color: #333;
        line-height: 1.6;
    }

    /* Header Phrase Styles */
    .header-phrase {
        background-color: #333; /* Black */
        color: #fff;
        padding: 20px;
        text-align: center;
    }

    .header-phrase h1 {
        margin: 0;
        font-size: 2.5rem;
    }

    /* Main Content Styles */
    main {
        padding: 20px;
        max-width: 1200px;
        margin: 0 auto;
    }

    section {
        margin-bottom: 40px;
    }

    h2 {
        color: #d32f2f; /* Red */
        border-bottom: 2px solid #d32f2f; /* Red */
        padding-bottom: 10px;
        margin-bottom: 20px;
    }

    .content-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 20px;
    }

    .content-card {
        background-color: #fff;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease;
    }

    .content-card:hover {
        transform: translateY(-5px);
    }

    .content-card img {
        width: 100%;
        height: 200px;
        object-fit: cover;
    }

    .content-card h3 {
        margin: 15px;
        color: #333;
    }

    .content-card p, .content-card ul {
        margin: 0 15px 15px;
        color: #555;
    }

    .content-card ul {
        list-style-type: disc;
        padding-left: 20px;
    }

    /* Footer Phrase Styles */
    .footer-phrase {
        background-color: #333; /* Black */
        color: #fff;
        text-align: center;
        padding: 15px;
        margin-top: 40px;
    }
</style>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Electronic Drums Beginner Guide</title>
    <link rel="stylesheet" href="styles.css">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
</head>
<body>
    <!-- Header Phrase -->
    <div class="header-phrase">
        <h1>Electronic Drums Beginner Guide</h1>
    </div>

    <!-- Main Content -->
    <main>
        <!-- Section 1: Choosing Your First Electronic Drum Kit -->
        <section class="choosing-drum">
            <h2>1. Choosing Your First Electronic Drum Kit</h2>
            <div class="content-grid">
                <div class="content-card">
                    <img src="/Images/basic-elec.jpg" alt="Basic Electronic Drum Kit">
                    <h3>Starter Kits</h3>
                    <p>Perfect for beginners, starter kits are affordable and offer the basic features you need to get started.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/mesh.jpg" alt="Mesh Drum Pads">
                    <h3>Mesh vs. Rubber Pads</h3>
                    <p>Understand the difference between mesh heads for a realistic feel and rubber pads for durability and affordability.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/module.jpg" alt="Drum Module">
                    <h3>Drum Module Features</h3>
                    <p>Explore the importance of the drum module, which controls your drum sounds and includes built-in practice tools.</p>
                </div>
            </div>
        </section>

        <!-- Section 2: Setting Up Your Kit -->
        <section class="setup">
            <h2>2. Setting Up Your Kit</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>Space and Placement</h3>
                    <ul>
                        <li>Choose a quiet, stable location for your drum kit.</li>
                        <li>Arrange pads and cymbals in a comfortable and ergonomic layout.</li>
                    </ul>
                </div>
                <div class="content-card">
                    <h3>Cables and Connections</h3>
                    <ul>
                        <li>Learn how to connect pads and cymbals to the drum module.</li>
                        <li>Organize cables to avoid tangling and interference.</li>
                    </ul>
                </div>
                <div class="content-card">
                    <h3>Volume Control</h3>
                    <ul>
                        <li>Use headphones for quiet practice or connect to an amplifier for performances.</li>
                        <li>Adjust volume levels on the drum module to suit your environment.</li>
                    </ul>
                </div>
            </div>
        </section>

        <!-- Section 3: Practicing on Electronic Drums -->
        <section class="practice-tips">
            <h2>3. Practicing on Electronic Drums</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>Built-In Practice Tools</h3>
                    <p>Utilize features like metronomes, play-along tracks, and training modes to improve your timing and rhythm.</p>
                </div>
                <div class="content-card">
                    <h3>Quiet Practice</h3>
                    <p>Take advantage of the quiet nature of electronic drums to practice without disturbing others.</p>
                </div>
                <div class="content-card">
                    <h3>Exploring Sounds</h3>
                    <p>Experiment with the variety of drum kits and sounds available to discover your style and preferences.</p>
                </div>
            </div>
        </section>

        <!-- Section 4: Essential Accessories -->
        <section class="accessories">
            <h2>4. Essential Accessories</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>Drum Sticks</h3>
                    <p>Start with lightweight, beginner-friendly drum sticks that are easy to control.</p>
                </div>
                <div class="content-card">
                    <h3>Headphones</h3>
                    <p>Invest in high-quality headphones for clear sound and a better practice experience.</p>
                </div>
                <div class="content-card">
                    <h3>Drum Throne</h3>
                    <p>A comfortable, adjustable drum throne is essential for maintaining proper posture during practice.</p>
                </div>
            </div>
        </section>
    </main>

    <!-- Footer Phrase -->
    <div class="footer-phrase">
        <p>Start Your Drumming Journey with Confidence!</p>
    </div>
</body>
</html>

        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-27 01:13:39.751 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/delebeg - 200 null text/html; charset=utf-8 83.5485ms
2025-01-27 01:13:39.764 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/styles.css - null null
2025-01-27 01:13:39.771 +03:00 [INF] [Request] GET /Home/styles.css

2025-01-27 01:13:39.772 +03:00 [INF] [Response] 404 - 1ms

2025-01-27 01:13:39.773 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 01:13:39.775 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 01:13:39.774 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/mesh.jpg - null null
2025-01-27 01:13:39.773 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/styles.css - 404 0 null 9.2372ms
2025-01-27 01:13:39.774 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/basic-elec.jpg - null null
2025-01-27 01:13:39.773 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/module.jpg - null null
2025-01-27 01:13:39.775 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 01:13:39.774 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 01:13:39.786 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-27 01:13:39.796 +03:00 [INF] The file /Images/mesh.jpg was not modified
2025-01-27 01:13:39.809 +03:00 [INF] [Response] 404 - 23ms

2025-01-27 01:13:39.812 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/mesh.jpg - 304 null image/jpeg 37.1404ms
2025-01-27 01:13:39.814 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 38.6485ms
2025-01-27 01:13:39.820 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 45.2595ms
2025-01-27 01:13:39.829 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 01:13:39.795 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/Home/styles.css, Response status code: 404
2025-01-27 01:13:39.797 +03:00 [INF] The file /Images/basic-elec.jpg was not modified
2025-01-27 01:13:39.809 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-27 01:13:39.781 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 8.1445ms
2025-01-27 01:13:39.835 +03:00 [INF] Sending file. Request path: '/Images/module.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\module.jpg'
2025-01-27 01:13:39.838 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/basic-elec.jpg - 304 null image/jpeg 63.3722ms
2025-01-27 01:13:39.838 +03:00 [INF] [Response] 404 - 29ms

2025-01-27 01:13:39.842 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/module.jpg - 200 102260 image/jpeg 69.1428ms
2025-01-27 01:13:39.846 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 71.1283ms
2025-01-27 01:13:39.852 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 01:25:48.928 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-27 01:25:49.212 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-27 01:25:49.214 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-27 01:25:49.345 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-27 01:25:49.347 +03:00 [INF] Hosting environment: Development
2025-01-27 01:25:49.348 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-27 01:25:49.552 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-27 01:25:49.767 +03:00 [INF] [Request] GET /

2025-01-27 01:25:49.803 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 01:25:49.821 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 01:25:49.848 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 01:25:49.912 +03:00 [INF] Executed ViewResult - view Index executed in 68.0419ms.
2025-01-27 01:25:49.915 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 88.039ms
2025-01-27 01:25:49.916 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 01:25:49.918 +03:00 [INF] [Response] 200 - 159ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Home - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
    

 <style>
    .instrument-name {
        margin-top: 10px; /* Add space between the image and the text */
        font-size: 16px; /* Adjust the text size */
        font-weight: bold; /* Bold text */
        text-align: center; /* Center the text */
    }
  </style>

<section class="category-section py-4">
    <div class="category-section">
        <h3 style="text-align: center; margin-bottom: 20px;">Start Shopping Here</h3>
        <div class="row">
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Guitars'">
                <img src="/Images/pavlo-t-5rEyYBPLN-w-unsplash.jpg" alt="Guitars" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Guitars</p>
            </div>
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Keyboards & Pianos'">
                <img src="/Images/pexels-mikhail-nilov-7570112.jpg" alt="Keyboards & Pianos" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Keyboards & Pianos</p>
            </div>
            <!-- Drums & Percussion -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Drums & Percussion'">
                <img src="/Images/pexels-reneterp-1327430.jpg" alt="Drums & Percussion" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Drums & Percussion</p>
            </div>
            <!-- Pro Audio -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Pro Audio'">
                <img src="/Images/pexels-everson-mayer-478307-1481312.jpg" alt="Pro Audio" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Pro Audio</p>
            </div>
            <!-- Band & Orchestra -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Band & Orchestra'">
                <img src="/Images/pexels-shottrotter-752535.jpg" alt="Band & Orchestra" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Band & Orchestra</p>
            </div>
            <!-- Accessories -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Accessories'">
                <img src="/Images/pexels-rombo-1510555-5280438.jpg" alt="Accessories" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Accessories</p>
            </div>
        </div>
    </div>
</section>


    <section class="membership-section text-center bg-dark text-white py-5">
    <div class="membership-section">
        <h2>Have no clue what to buy ?</h2>
        <p>Check out our professional guide to get the perfect suited instrument !</p>
        <form class="d-inline-flex mt-2" action="/Home/Guide" method="get">
            
            <button class="btn btn-danger" type="submit">professional Guide</button>
        </form>
        </div>
    </section>

    <section class="features-section py-5 bg-light">
            <div class="container">
            <div class="row text-center">
                <div class="col-md-3">
                    <img src="/Images/box.png" alt="Same Day Delivery" class="mb-sm-1" style="width: 40px; height: 40px;">
                    <h5>Same Day/Next Day Delivery</h5>
                    <p>Next day delivery on most orders in Jordan - Same day available</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/shopping-cart.png" alt="Biggest Selection" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Biggest Selection</h5>
                    <p>Largest collection of any store in MENA</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/user-talking-with-speech-bubble.png" alt="Top-notch Support" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Top-notch Support</h5>
                    <p>We are always happy to help in any way we can</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/secure-payment.png" alt="Secure Payments" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Secure Payments</h5>
                    <p>Cash on Delivery available</p>
                </div>
            </div>
            </div>
     </section>


    

    <!-- JavaScript to Toggle Forms -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.js"></script>


        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-27 01:25:49.980 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 442.112ms
2025-01-27 01:25:50.010 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 01:25:50.010 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 01:25:50.010 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 01:25:50.010 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 01:25:50.028 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 18.4696ms
2025-01-27 01:25:50.039 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-27 01:25:50.037 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-27 01:25:50.048 +03:00 [INF] [Response] 404 - 9ms

2025-01-27 01:25:50.048 +03:00 [INF] [Response] 404 - 11ms

2025-01-27 01:25:50.051 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 41.187ms
2025-01-27 01:25:50.051 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 41.539ms
2025-01-27 01:25:50.058 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 01:25:50.061 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 01:25:50.079 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 69.2955ms
2025-01-27 01:25:52.932 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Guide? - null null
2025-01-27 01:25:52.944 +03:00 [INF] [Request] GET /Home/Guide
[QueryString] ?

2025-01-27 01:25:52.947 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Guide (MyShop)'
2025-01-27 01:25:52.949 +03:00 [INF] Route matched with {action = "Guide", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Guide(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 01:25:52.991 +03:00 [INF] Executing ViewResult, running view Guide.
2025-01-27 01:25:53.000 +03:00 [INF] Executed ViewResult - view Guide executed in 12.5519ms.
2025-01-27 01:25:53.002 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Guide (MyShop) in 51.9426ms
2025-01-27 01:25:53.004 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Guide (MyShop)'
2025-01-27 01:25:53.008 +03:00 [INF] [Response] 200 - 61ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Guide - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
<style>

    .instruments-section h1 {
        font-size: 2.5rem;
        font-weight: bold;
        text-align: center;
    }

    .instruments-section p {
        font-size: 1.25rem;
        color: #555;
        text-align: center;
    }

    /* Black Line */
    hr.thick-black-line {
        border: none; /* Remove default borders */
        height: 5px; /* Set the height */
        background-color: black !important; /* Force black color */
        margin: 0 auto; /* Center it horizontally */
        width: 80%; /* Adjust width */
    }


    /* Dropdown Buttons Alignment */
    .instrument-buttons {
        display: flex;
        gap: 1rem; /* Add spacing between dropdown buttons */
        padding-left: 10%; /* Align dropdown buttons with the left edge of the line */
    }

        .instrument-buttons .dropdown {
            display: inline-block;
        }

        /* Styling for Buttons */
        .instrument-buttons .btn {
            font-size: 1rem;
            font-weight: bold;
            padding: 0.5rem 1.5rem;
        }

    /* Dropdown Menu Styling */
    .dropdown-menu {
        font-size: 1rem;
        text-align: left;
    }



</style>


<section class="instruments-section text-center py-5">
    <h1 class="mb-3">Instruments</h1>
    <p class="mb-4">
        Here, the SoundWave’s expert players guide you through the intricacies of the instruments they play.
        Choose an instrument from one of the sections.
    </p>
    <hr class="thick-black-line mb-4" />

    <!-- Dropdown Buttons -->
    <div class="instrument-buttons text-start">
        <!-- Dropdown for Instruments -->
        <div class="dropdown">
            <button class="btn btn-light border text-danger dropdown-toggle"
                    type="button"
                    id="instrumentDropdown"
                    data-bs-toggle="dropdown"
                    aria-expanded="false">
                Instruments
            </button>
            <ul class="dropdown-menu" aria-labelledby="instrumentDropdown">
                <li><a class="dropdown-item instrument-item" href="#">Guitars</a></li>
                <li><a class="dropdown-item instrument-item" href="#">Drums</a></li>
                <li><a class="dropdown-item instrument-item" href="#">Orchestra</a></li>
            </ul>
        </div>

        <!-- Dropdown for Level -->
        <div class="dropdown">
            <button class="btn btn-light border text-danger dropdown-toggle"
                    type="button"
                    id="levelDropdown"
                    data-bs-toggle="dropdown"
                    aria-expanded="false">
                Level
            </button>
            <ul class="dropdown-menu" aria-labelledby="levelDropdown">
                <li><a class="dropdown-item level-item" href="#">Beginner</a></li>
                <li><a class="dropdown-item level-item" href="#">Professional</a></li>
            </ul>
        </div>
    </div>
    
    <div id="card-container" class="d-flex justify-content-center gap-4 mt-5"></div>

</section>

<script>
    const instrumentDropdown = document.querySelectorAll('.instrument-item');
    const levelDropdown = document.querySelectorAll('.level-item');
    const cardContainer = document.getElementById('card-container');

    let selectedInstrument = '';
    let selectedLevel = '';

    const guitarsData = [
        {
            img: '/Images/guitar-4750599_1280.jpg',
            title: 'Acoustic Guitar',
            link: '#'
        },
        {
            img: '/Images/electric-guitar-7815026_1280.jpg',
            title: 'Electric Guitar',
            link: '#'
        },
        {
            img: '/Images/bass-guitar-913092_1280.jpg',
            title: 'Bass Guitar',
            link: '#'
        }
    ];

    const DrumsData = [
        {
            img: '/Images/african-2771092_1280.jpg',
            title: 'Hand Drums',
            link: '#'
        },
        {
            img: '/Images/electronic-drum-pad-5854409_1280.jpg',
            title: 'Electronic Drums',
            link: '#'
        },
        {
            img: '/Images/drum-set-1839383_1280.jpg',
            title: 'Acoustic Drums',
            link: '#'
        }
    ];

    const OrchestraData = [
        {
            img: '/Images/bowed-instrument-1853324_1280.jpg',
            title: 'Strings',
            link: '#'
        },
        {
            img: '/Images/saxophone-3246650_1280.jpg',
            title: 'Brass',
            link: '#'
        },
        
    ];

    instrumentDropdown.forEach(item => {
        item.addEventListener('click', function () {
            selectedInstrument = this.textContent.trim();
            checkSelection();
        });
    });

    levelDropdown.forEach(item => {
        item.addEventListener('click', function () {
            selectedLevel = this.textContent.trim();
            checkSelection();
        });
    });

    function checkSelection() {
        if (selectedInstrument === 'Guitars' && selectedLevel === 'Beginner') {
            renderCards(guitarsData);
        } 
        else if (selectedInstrument === 'Guitars' && selectedLevel === 'Professional') {
            renderCards(guitarsData);
        }
        else if (selectedInstrument === 'Drums' && (selectedLevel === 'Professional' || selectedLevel === 'Beginner')) {
            renderCards(DrumsData);

        }
        else if (selectedInstrument === 'Orchestra' && (selectedLevel === 'Professional' || selectedLevel === 'Beginner')) {
            renderCards(OrchestraData);

        }
        else {
            cardContainer.innerHTML = ''; // Clear cards
        }
    }

    function renderCards(data) {
        cardContainer.innerHTML = ''; // Clear previous cards

        data.forEach(item => {
            if (item.title.toLowerCase() === 'electric guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'electricguid'; // Set link to electricguid for Beginners
                } else {
                    item.link = 'proelectric'; // Set link to proelectric for other levels
                }
            } else if (item.title.toLowerCase() === 'acoustic guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'acousticpeg'; // Set link to acousticpeg for Beginners
                } else {
                    item.link = 'acousticpro'; // Set link to acousticpro for other levels
                }
            } else if (item.title.toLowerCase() === 'bass guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'bassbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'basspro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'hand drums') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'handbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'handpro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'electronic drums') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'delebeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'delepro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'acoustic drums') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'dacosticbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'dacousticpro'; // Set link to basspro for other levels
                }
            } else {
                // Default case if no matches found
                item.link = 'default'; // Default link or other fallback
            }


            const card = document.createElement('div');
            card.classList.add('card');
            card.style.width = '22rem';
            card.style.textAlign = 'center';
            card.style.border = '1px solid #ddd';
            card.style.boxShadow = '0 4px 6px rgba(0, 0, 0, 0.1)';
            card.style.borderRadius = '8px';

            card.innerHTML = `
                    <img src="${item.img}" alt="${item.title}" style="width:100%;border-bottom:1px solid #ddd;">
                    <h5 style="font-size:1.25rem;font-weight:bold;margin:1rem 0;">${item.title}</h5>
                    <a href="${item.link}" class="btn btn-danger" style="margin-bottom:1rem;font-weight:bold;">Read more</a>
                `;
            cardContainer.appendChild(card);
            
            
        });
    }
</script>


<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-27 01:25:53.060 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Guide? - 200 null text/html; charset=utf-8 127.9286ms
2025-01-27 01:25:53.088 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 01:25:53.088 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 01:25:53.088 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 01:25:53.088 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 01:25:53.095 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 7.3453ms
2025-01-27 01:25:53.097 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-27 01:25:53.099 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-27 01:25:53.105 +03:00 [INF] [Response] 404 - 7ms

2025-01-27 01:25:53.106 +03:00 [INF] [Response] 404 - 6ms

2025-01-27 01:25:53.109 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 20.5718ms
2025-01-27 01:25:53.110 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 21.4622ms
2025-01-27 01:25:53.115 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 01:25:53.127 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 01:25:53.142 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 54.0908ms
2025-01-27 01:26:01.928 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/delebeg - null null
2025-01-27 01:26:01.937 +03:00 [INF] [Request] GET /Home/delebeg

2025-01-27 01:26:01.942 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.delebeg (MyShop)'
2025-01-27 01:26:01.945 +03:00 [INF] Route matched with {action = "delebeg", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult delebeg(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 01:26:01.947 +03:00 [INF] Executing ViewResult, running view delebeg.
2025-01-27 01:26:01.952 +03:00 [INF] Executed ViewResult - view delebeg executed in 5.715ms.
2025-01-27 01:26:01.957 +03:00 [INF] Executed action MyShop.Controllers.HomeController.delebeg (MyShop) in 10.9039ms
2025-01-27 01:26:01.962 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.delebeg (MyShop)'
2025-01-27 01:26:01.964 +03:00 [INF] [Response] 200 - 26ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Electronic Drums Beginner Guide - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
<style>
    /* General Styles */
    body {
        font-family: 'Roboto', sans-serif;
        margin: 0;
        padding: 0;
        background-color: #f4f4f4;
        color: #333;
        line-height: 1.6;
    }

    /* Header Phrase Styles */
    .header-phrase {
        background-color: #333; /* Black */
        color: #fff;
        padding: 20px;
        text-align: center;
    }

    .header-phrase h1 {
        margin: 0;
        font-size: 2.5rem;
    }

    /* Main Content Styles */
    main {
        padding: 20px;
        max-width: 1200px;
        margin: 0 auto;
    }

    section {
        margin-bottom: 40px;
    }

    h2 {
        color: #d32f2f; /* Red */
        border-bottom: 2px solid #d32f2f; /* Red */
        padding-bottom: 10px;
        margin-bottom: 20px;
    }

    .content-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 20px;
    }

    .content-card {
        background-color: #fff;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease;
    }

    .content-card:hover {
        transform: translateY(-5px);
    }

    .content-card img {
        width: 100%;
        height: 200px;
        object-fit: cover;
    }

    .content-card h3 {
        margin: 15px;
        color: #333;
    }

    .content-card p, .content-card ul {
        margin: 0 15px 15px;
        color: #555;
    }

    .content-card ul {
        list-style-type: disc;
        padding-left: 20px;
    }

    /* Footer Phrase Styles */
    .footer-phrase {
        background-color: #333; /* Black */
        color: #fff;
        text-align: center;
        padding: 15px;
        margin-top: 40px;
    }
</style>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Electronic Drums Beginner Guide</title>
    <link rel="stylesheet" href="styles.css">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
</head>
<body>
    <!-- Header Phrase -->
    <div class="header-phrase">
        <h1>Electronic Drums Beginner Guide</h1>
    </div>

    <!-- Main Content -->
    <main>
        <!-- Section 1: Choosing Your First Electronic Drum Kit -->
        <section class="choosing-drum">
            <h2>1. Choosing Your First Electronic Drum Kit</h2>
            <div class="content-grid">
                <div class="content-card">
                    <img src="/Images/basic-elec.jpg" alt="Basic Electronic Drum Kit">
                    <h3>Starter Kits</h3>
                    <p>Perfect for beginners, starter kits are affordable and offer the basic features you need to get started.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/mesh.jpg" alt="Mesh Drum Pads">
                    <h3>Mesh vs. Rubber Pads</h3>
                    <p>Understand the difference between mesh heads for a realistic feel and rubber pads for durability and affordability.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/module.jpg" alt="Drum Module">
                    <h3>Drum Module Features</h3>
                    <p>Explore the importance of the drum module, which controls your drum sounds and includes built-in practice tools.</p>
                </div>
            </div>
        </section>

        <!-- Section 2: Setting Up Your Kit -->
        <section class="setup">
            <h2>2. Setting Up Your Kit</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>Space and Placement</h3>
                    <ul>
                        <li>Choose a quiet, stable location for your drum kit.</li>
                        <li>Arrange pads and cymbals in a comfortable and ergonomic layout.</li>
                    </ul>
                </div>
                <div class="content-card">
                    <h3>Cables and Connections</h3>
                    <ul>
                        <li>Learn how to connect pads and cymbals to the drum module.</li>
                        <li>Organize cables to avoid tangling and interference.</li>
                    </ul>
                </div>
                <div class="content-card">
                    <h3>Volume Control</h3>
                    <ul>
                        <li>Use headphones for quiet practice or connect to an amplifier for performances.</li>
                        <li>Adjust volume levels on the drum module to suit your environment.</li>
                    </ul>
                </div>
            </div>
        </section>

        <!-- Section 3: Practicing on Electronic Drums -->
        <section class="practice-tips">
            <h2>3. Practicing on Electronic Drums</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>Built-In Practice Tools</h3>
                    <p>Utilize features like metronomes, play-along tracks, and training modes to improve your timing and rhythm.</p>
                </div>
                <div class="content-card">
                    <h3>Quiet Practice</h3>
                    <p>Take advantage of the quiet nature of electronic drums to practice without disturbing others.</p>
                </div>
                <div class="content-card">
                    <h3>Exploring Sounds</h3>
                    <p>Experiment with the variety of drum kits and sounds available to discover your style and preferences.</p>
                </div>
            </div>
        </section>

        <!-- Section 4: Essential Accessories -->
        <section class="accessories">
            <h2>4. Essential Accessories</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>Drum Sticks</h3>
                    <p>Start with lightweight, beginner-friendly drum sticks that are easy to control.</p>
                </div>
                <div class="content-card">
                    <h3>Headphones</h3>
                    <p>Invest in high-quality headphones for clear sound and a better practice experience.</p>
                </div>
                <div class="content-card">
                    <h3>Drum Throne</h3>
                    <p>A comfortable, adjustable drum throne is essential for maintaining proper posture during practice.</p>
                </div>
            </div>
        </section>
    </main>

    <!-- Footer Phrase -->
    <div class="footer-phrase">
        <p>Start Your Drumming Journey with Confidence!</p>
    </div>
</body>
</html>

        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-27 01:26:02.009 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/delebeg - 200 null text/html; charset=utf-8 81.5286ms
2025-01-27 01:26:02.022 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/styles.css - null null
2025-01-27 01:26:02.026 +03:00 [INF] [Request] GET /Home/styles.css

2025-01-27 01:26:02.028 +03:00 [INF] [Response] 404 - 1ms

2025-01-27 01:26:02.029 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/mesh.jpg - null null
2025-01-27 01:26:02.029 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 01:26:02.028 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/basic-elec.jpg - null null
2025-01-27 01:26:02.029 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/module.jpg - null null
2025-01-27 01:26:02.029 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 01:26:02.029 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 01:26:02.028 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 01:26:02.043 +03:00 [INF] The file /Images/mesh.jpg was not modified
2025-01-27 01:26:02.042 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-27 01:26:02.044 +03:00 [INF] The file /Images/basic-elec.jpg was not modified
2025-01-27 01:26:02.064 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/mesh.jpg - 304 null image/jpeg 34.7928ms
2025-01-27 01:26:02.063 +03:00 [INF] [Response] 404 - 21ms

2025-01-27 01:26:02.067 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/basic-elec.jpg - 304 null image/jpeg 39.2492ms
2025-01-27 01:26:02.048 +03:00 [INF] The file /Images/module.jpg was not modified
2025-01-27 01:26:02.050 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-27 01:26:02.061 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 32.9476ms
2025-01-27 01:26:02.029 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/styles.css - 404 0 null 9.7257ms
2025-01-27 01:26:02.078 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 48.825ms
2025-01-27 01:26:02.080 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 50.9284ms
2025-01-27 01:26:02.085 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/module.jpg - 304 null image/jpeg 55.6314ms
2025-01-27 01:26:02.086 +03:00 [INF] [Response] 404 - 35ms

2025-01-27 01:26:02.095 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/Home/styles.css, Response status code: 404
2025-01-27 01:26:02.099 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 01:26:02.103 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 74.0229ms
2025-01-27 01:26:02.113 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 01:26:08.364 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 01:26:08.369 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 5.0306ms
2025-01-27 01:26:15.677 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/delepro - null null
2025-01-27 01:26:15.687 +03:00 [INF] [Request] GET /Home/delepro

2025-01-27 01:26:15.690 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.delepro (MyShop)'
2025-01-27 01:26:15.691 +03:00 [INF] Route matched with {action = "delepro", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult delepro(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 01:26:15.694 +03:00 [INF] Executing ViewResult, running view delepro.
2025-01-27 01:26:15.700 +03:00 [INF] Executed ViewResult - view delepro executed in 6.7092ms.
2025-01-27 01:26:15.702 +03:00 [INF] Executed action MyShop.Controllers.HomeController.delepro (MyShop) in 9.5836ms
2025-01-27 01:26:15.706 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.delepro (MyShop)'
2025-01-27 01:26:15.708 +03:00 [INF] [Response] 200 - 20ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Professional Guide for Electronic Drums - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
<style>
    /* General Styles */
    body {
        font-family: 'Roboto', sans-serif;
        margin: 0;
        padding: 0;
        background-color: #f4f4f4;
        color: #333;
        line-height: 1.6;
    }

    /* Header Phrase Styles */
    .header-phrase {
        background-color: #333; /* Black */
        color: #fff;
        padding: 20px;
        text-align: center;
    }

    .header-phrase h1 {
        margin: 0;
        font-size: 2.5rem;
    }

    /* Main Content Styles */
    main {
        padding: 20px;
        max-width: 1200px;
        margin: 0 auto;
    }

    section {
        margin-bottom: 40px;
    }

    h2 {
        color: #d32f2f; /* Red */
        border-bottom: 2px solid #d32f2f; /* Red */
        padding-bottom: 10px;
        margin-bottom: 20px;
    }

    .content-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 20px;
    }

    .content-card {
        background-color: #fff;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease;
    }

    .content-card:hover {
        transform: translateY(-5px);
    }

    .content-card img {
        width: 100%;
        height: 200px;
        object-fit: cover;
    }

    .content-card h3 {
        margin: 15px;
        color: #333;
    }

    .content-card p, .content-card ul {
        margin: 0 15px 15px;
        color: #555;
    }

    .content-card ul {
        list-style-type: disc;
        padding-left: 20px;
    }

    /* Footer Phrase Styles */
    .footer-phrase {
        background-color: #333; /* Black */
        color: #fff;
        text-align: center;
        padding: 15px;
        margin-top: 40px;
    }
</style>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Professional Guide for Electronic Drums</title>
    <link rel="stylesheet" href="styles.css">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
</head>
<body>
    <!-- Header Phrase -->
    <div class="header-phrase">
        <h1>Professional Guide for Electronic Drums</h1>
    </div>

    <!-- Main Content -->
    <main>
        <!-- Section 1: Setting Up Your Electronic Drum Kit -->
        <section class="setup-guide">
            <h2>1. Setting Up Your Electronic Drum Kit</h2>
            <div class="content-grid">
                <div class="content-card">
                    <img src="/Images/electronic-drum-kit.jpg" alt="Electronic Drum Kit Setup">
                    <h3>Optimizing Your Kit</h3>
                    <p>Learn how to assemble and position your electronic drum kit for maximum comfort and performance.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/ele-module.jpg" alt="Drum Module">
                    <h3>Understanding the Drum Module</h3>
                    <p>A comprehensive guide to navigating your drum module settings, including sound selection, recording, and custom kits.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/trigger.jpg" alt="Trigger Pads">
                    <h3>Trigger Pad Sensitivity</h3>
                    <p>Adjust your trigger pad sensitivity and response for a more dynamic and expressive drumming experience.</p>
                </div>
            </div>
        </section>

        <!-- Section 2: Advanced Playing Techniques -->
        <section class="advanced-techniques">
            <h2>2. Advanced Playing Techniques</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>Layering Sounds</h3>
                    <p>Combine multiple sounds on a single pad for creative layering, perfect for unique live performances and recordings.</p>
                </div>
                <div class="content-card">
                    <h3>Using Built-in Effects</h3>
                    <ul>
                        <li>Explore reverb, delay, and other effects to enhance your playing.</li>
                        <li>Customize effect parameters for personalized sound design.</li>
                    </ul>
                </div>
                <div class="content-card">
                    <h3>Dynamic Expression</h3>
                    <ul>
                        <li>Master velocity sensitivity to add nuance to your drumming.</li>
                        <li>Incorporate ghost notes, rimshots, and hi-hat pedal dynamics for realism.</li>
                    </ul>
                </div>
            </div>
        </section>

        <!-- Section 3: Maintaining Your Electronic Drum Kit -->
        <section class="maintenance-guide">
            <h2>3. Maintaining Your Electronic Drum Kit</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>Cleaning and Care</h3>
                    <p>Keep your drum pads and module clean to ensure longevity and consistent performance.</p>
                </div>
                <div class="content-card">
                    <h3>Firmware Updates</h3>
                    <p>Regularly update your drum module firmware to access the latest features and improvements.</p>
                </div>
                <div class="content-card">
                    <h3>Pad Replacement</h3>
                    <p>Learn when and how to replace worn-out drum pads to maintain optimal responsiveness.</p>
                </div>
            </div>
        </section>

        <!-- Section 4: Recommended Electronic Drum Kits -->
        <section class="recommended-kits">
            <h2>4. Recommended Electronic Drum Kits</h2>
            <div class="content-grid">
                <div class="content-card">
                    <img src="/Images/high-electronic.jpeg" alt="High-End Electronic Kit">
                    <h3>High-End Electronic Kit</h3>
                    <p>A flagship model with advanced features, exceptional sound libraries, and unparalleled playability.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/compact-elec.jpg" alt="Compact Electronic Drum Kit">
                    <h3>Compact Kit</h3>
                    <p>An ideal choice for drummers with limited space, offering portability without sacrificing quality.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/hybrid_drum_kit.jpg" alt="Hybrid Drum Kit">
                    <h3>Hybrid Drum Kit</h3>
                    <p>A versatile option blending acoustic and electronic elements for a unique drumming experience.</p>
                </div>
            </div>
        </section>
    </main>

    <!-- Footer Phrase -->
    <div class="footer-phrase">
        <p>Elevate Your Drumming Experience with Electronic Precision!</p>
    </div>
</body>
</html>

        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-27 01:26:15.750 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/delepro - 200 null text/html; charset=utf-8 73.8286ms
2025-01-27 01:26:15.762 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/electronic-drum-kit.jpg - null null
2025-01-27 01:26:15.762 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/styles.css - null null
2025-01-27 01:26:15.765 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/compact-elec.jpg - null null
2025-01-27 01:26:15.765 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/trigger.jpg - null null
2025-01-27 01:26:15.765 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/high-electronic.jpeg - null null
2025-01-27 01:26:15.764 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 01:26:15.764 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/ele-module.jpg - null null
2025-01-27 01:26:15.767 +03:00 [INF] [Request] GET /Home/styles.css

2025-01-27 01:26:15.781 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 01:26:15.785 +03:00 [INF] [Response] 404 - 18ms

2025-01-27 01:26:15.793 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-27 01:26:15.794 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/styles.css - 404 0 null 32.2368ms
2025-01-27 01:26:15.799 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 01:26:15.799 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 01:26:15.800 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/Home/styles.css, Response status code: 404
2025-01-27 01:26:15.814 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-27 01:26:15.795 +03:00 [INF] [Response] 404 - 1ms

2025-01-27 01:26:15.765 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/hybrid_drum_kit.jpg - null null
2025-01-27 01:26:15.835 +03:00 [INF] [Response] 404 - 20ms

2025-01-27 01:26:15.862 +03:00 [INF] Sending file. Request path: '/Images/high-electronic.jpeg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\high-electronic.jpeg'
2025-01-27 01:26:15.858 +03:00 [INF] Sending file. Request path: '/Images/electronic-drum-kit.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\electronic-drum-kit.jpg'
2025-01-27 01:26:15.859 +03:00 [INF] Sending file. Request path: '/Images/compact-elec.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\compact-elec.jpg'
2025-01-27 01:26:15.884 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/electronic-drum-kit.jpg - 200 73971 image/jpeg 122.0746ms
2025-01-27 01:26:15.866 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 66.558ms
2025-01-27 01:26:15.887 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/compact-elec.jpg - 200 45715 image/jpeg 122.5669ms
2025-01-27 01:26:15.837 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 55.334ms
2025-01-27 01:26:15.894 +03:00 [INF] Sending file. Request path: '/Images/hybrid_drum_kit.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\hybrid_drum_kit.jpg'
2025-01-27 01:26:15.894 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 01:26:15.886 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 87.1404ms
2025-01-27 01:26:15.799 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 35.2441ms
2025-01-27 01:26:15.881 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/high-electronic.jpeg - 200 243418 image/jpeg 115.3257ms
2025-01-27 01:26:15.859 +03:00 [INF] Sending file. Request path: '/Images/ele-module.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\ele-module.jpg'
2025-01-27 01:26:15.912 +03:00 [INF] Sending file. Request path: '/Images/trigger.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\trigger.jpg'
2025-01-27 01:26:15.916 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 01:26:15.918 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/hybrid_drum_kit.jpg - 200 63485 image/jpeg 152.7517ms
2025-01-27 01:26:15.958 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/ele-module.jpg - 200 180168 image/jpeg 194.0866ms
2025-01-27 01:26:15.961 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/trigger.jpg - 200 190610 image/jpeg 196.1082ms
2025-01-27 01:47:13.488 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-27 01:47:13.753 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-27 01:47:13.757 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-27 01:47:13.827 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-27 01:47:13.831 +03:00 [INF] Hosting environment: Development
2025-01-27 01:47:13.831 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-27 01:47:14.433 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-27 01:47:14.737 +03:00 [INF] [Request] GET /

2025-01-27 01:47:14.771 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 01:47:14.792 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 01:47:14.817 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 01:47:14.877 +03:00 [INF] Executed ViewResult - view Index executed in 61.9934ms.
2025-01-27 01:47:14.882 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 83.1371ms
2025-01-27 01:47:14.884 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 01:47:14.887 +03:00 [INF] [Response] 200 - 156ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Home - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
    

 <style>
    .instrument-name {
        margin-top: 10px; /* Add space between the image and the text */
        font-size: 16px; /* Adjust the text size */
        font-weight: bold; /* Bold text */
        text-align: center; /* Center the text */
    }
  </style>

<section class="category-section py-4">
    <div class="category-section">
        <h3 style="text-align: center; margin-bottom: 20px;">Start Shopping Here</h3>
        <div class="row">
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Guitars'">
                <img src="/Images/pavlo-t-5rEyYBPLN-w-unsplash.jpg" alt="Guitars" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Guitars</p>
            </div>
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Keyboards & Pianos'">
                <img src="/Images/pexels-mikhail-nilov-7570112.jpg" alt="Keyboards & Pianos" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Keyboards & Pianos</p>
            </div>
            <!-- Drums & Percussion -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Drums & Percussion'">
                <img src="/Images/pexels-reneterp-1327430.jpg" alt="Drums & Percussion" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Drums & Percussion</p>
            </div>
            <!-- Pro Audio -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Pro Audio'">
                <img src="/Images/pexels-everson-mayer-478307-1481312.jpg" alt="Pro Audio" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Pro Audio</p>
            </div>
            <!-- Band & Orchestra -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Band & Orchestra'">
                <img src="/Images/pexels-shottrotter-752535.jpg" alt="Band & Orchestra" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Band & Orchestra</p>
            </div>
            <!-- Accessories -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Accessories'">
                <img src="/Images/pexels-rombo-1510555-5280438.jpg" alt="Accessories" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Accessories</p>
            </div>
        </div>
    </div>
</section>


    <section class="membership-section text-center bg-dark text-white py-5">
    <div class="membership-section">
        <h2>Have no clue what to buy ?</h2>
        <p>Check out our professional guide to get the perfect suited instrument !</p>
        <form class="d-inline-flex mt-2" action="/Home/Guide" method="get">
            
            <button class="btn btn-danger" type="submit">professional Guide</button>
        </form>
        </div>
    </section>

    <section class="features-section py-5 bg-light">
            <div class="container">
            <div class="row text-center">
                <div class="col-md-3">
                    <img src="/Images/box.png" alt="Same Day Delivery" class="mb-sm-1" style="width: 40px; height: 40px;">
                    <h5>Same Day/Next Day Delivery</h5>
                    <p>Next day delivery on most orders in Jordan - Same day available</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/shopping-cart.png" alt="Biggest Selection" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Biggest Selection</h5>
                    <p>Largest collection of any store in MENA</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/user-talking-with-speech-bubble.png" alt="Top-notch Support" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Top-notch Support</h5>
                    <p>We are always happy to help in any way we can</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/secure-payment.png" alt="Secure Payments" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Secure Payments</h5>
                    <p>Cash on Delivery available</p>
                </div>
            </div>
            </div>
     </section>


    

    <!-- JavaScript to Toggle Forms -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.js"></script>


        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-27 01:47:14.957 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 529.4812ms
2025-01-27 01:47:14.991 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 01:47:14.991 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 01:47:14.991 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 01:47:14.993 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 01:47:15.012 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-27 01:47:15.015 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 23.2853ms
2025-01-27 01:47:15.019 +03:00 [INF] [Response] 404 - 6ms

2025-01-27 01:47:15.016 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-27 01:47:15.036 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 45.0982ms
2025-01-27 01:47:15.037 +03:00 [INF] [Response] 404 - 20ms

2025-01-27 01:47:15.042 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 01:47:15.045 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 52.9702ms
2025-01-27 01:47:15.050 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 01:47:15.101 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 109.4017ms
2025-01-27 01:47:17.669 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Guide? - null null
2025-01-27 01:47:17.687 +03:00 [INF] [Request] GET /Home/Guide
[QueryString] ?

2025-01-27 01:47:17.691 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Guide (MyShop)'
2025-01-27 01:47:17.698 +03:00 [INF] Route matched with {action = "Guide", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Guide(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 01:47:17.744 +03:00 [INF] Executing ViewResult, running view Guide.
2025-01-27 01:47:17.751 +03:00 [INF] Executed ViewResult - view Guide executed in 8.027ms.
2025-01-27 01:47:17.753 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Guide (MyShop) in 51.2279ms
2025-01-27 01:47:17.754 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Guide (MyShop)'
2025-01-27 01:47:17.755 +03:00 [INF] [Response] 200 - 67ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Guide - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
<style>

    .instruments-section h1 {
        font-size: 2.5rem;
        font-weight: bold;
        text-align: center;
    }

    .instruments-section p {
        font-size: 1.25rem;
        color: #555;
        text-align: center;
    }

    /* Black Line */
    hr.thick-black-line {
        border: none; /* Remove default borders */
        height: 5px; /* Set the height */
        background-color: black !important; /* Force black color */
        margin: 0 auto; /* Center it horizontally */
        width: 80%; /* Adjust width */
    }


    /* Dropdown Buttons Alignment */
    .instrument-buttons {
        display: flex;
        gap: 1rem; /* Add spacing between dropdown buttons */
        padding-left: 10%; /* Align dropdown buttons with the left edge of the line */
    }

        .instrument-buttons .dropdown {
            display: inline-block;
        }

        /* Styling for Buttons */
        .instrument-buttons .btn {
            font-size: 1rem;
            font-weight: bold;
            padding: 0.5rem 1.5rem;
        }

    /* Dropdown Menu Styling */
    .dropdown-menu {
        font-size: 1rem;
        text-align: left;
    }



</style>


<section class="instruments-section text-center py-5">
    <h1 class="mb-3">Instruments</h1>
    <p class="mb-4">
        Here, the SoundWave’s expert players guide you through the intricacies of the instruments they play.
        Choose an instrument from one of the sections.
    </p>
    <hr class="thick-black-line mb-4" />

    <!-- Dropdown Buttons -->
    <div class="instrument-buttons text-start">
        <!-- Dropdown for Instruments -->
        <div class="dropdown">
            <button class="btn btn-light border text-danger dropdown-toggle"
                    type="button"
                    id="instrumentDropdown"
                    data-bs-toggle="dropdown"
                    aria-expanded="false">
                Instruments
            </button>
            <ul class="dropdown-menu" aria-labelledby="instrumentDropdown">
                <li><a class="dropdown-item instrument-item" href="#">Guitars</a></li>
                <li><a class="dropdown-item instrument-item" href="#">Drums</a></li>
                <li><a class="dropdown-item instrument-item" href="#">Orchestra</a></li>
            </ul>
        </div>

        <!-- Dropdown for Level -->
        <div class="dropdown">
            <button class="btn btn-light border text-danger dropdown-toggle"
                    type="button"
                    id="levelDropdown"
                    data-bs-toggle="dropdown"
                    aria-expanded="false">
                Level
            </button>
            <ul class="dropdown-menu" aria-labelledby="levelDropdown">
                <li><a class="dropdown-item level-item" href="#">Beginner</a></li>
                <li><a class="dropdown-item level-item" href="#">Professional</a></li>
            </ul>
        </div>
    </div>
    
    <div id="card-container" class="d-flex justify-content-center gap-4 mt-5"></div>

</section>

<script>
    const instrumentDropdown = document.querySelectorAll('.instrument-item');
    const levelDropdown = document.querySelectorAll('.level-item');
    const cardContainer = document.getElementById('card-container');

    let selectedInstrument = '';
    let selectedLevel = '';

    const guitarsData = [
        {
            img: '/Images/guitar-4750599_1280.jpg',
            title: 'Acoustic Guitar',
            link: '#'
        },
        {
            img: '/Images/electric-guitar-7815026_1280.jpg',
            title: 'Electric Guitar',
            link: '#'
        },
        {
            img: '/Images/bass-guitar-913092_1280.jpg',
            title: 'Bass Guitar',
            link: '#'
        }
    ];

    const DrumsData = [
        {
            img: '/Images/african-2771092_1280.jpg',
            title: 'Hand Drums',
            link: '#'
        },
        {
            img: '/Images/electronic-drum-pad-5854409_1280.jpg',
            title: 'Electronic Drums',
            link: '#'
        },
        {
            img: '/Images/drum-set-1839383_1280.jpg',
            title: 'Acoustic Drums',
            link: '#'
        }
    ];

    const OrchestraData = [
        {
            img: '/Images/bowed-instrument-1853324_1280.jpg',
            title: 'Strings',
            link: '#'
        },
        {
            img: '/Images/saxophone-3246650_1280.jpg',
            title: 'Brass',
            link: '#'
        },
        
    ];

    instrumentDropdown.forEach(item => {
        item.addEventListener('click', function () {
            selectedInstrument = this.textContent.trim();
            checkSelection();
        });
    });

    levelDropdown.forEach(item => {
        item.addEventListener('click', function () {
            selectedLevel = this.textContent.trim();
            checkSelection();
        });
    });

    function checkSelection() {
        if (selectedInstrument === 'Guitars' && selectedLevel === 'Beginner') {
            renderCards(guitarsData);
        } 
        else if (selectedInstrument === 'Guitars' && selectedLevel === 'Professional') {
            renderCards(guitarsData);
        }
        else if (selectedInstrument === 'Drums' && (selectedLevel === 'Professional' || selectedLevel === 'Beginner')) {
            renderCards(DrumsData);

        }
        else if (selectedInstrument === 'Orchestra' && (selectedLevel === 'Professional' || selectedLevel === 'Beginner')) {
            renderCards(OrchestraData);

        }
        else {
            cardContainer.innerHTML = ''; // Clear cards
        }
    }

    function renderCards(data) {
        cardContainer.innerHTML = ''; // Clear previous cards

        data.forEach(item => {
            if (item.title.toLowerCase() === 'electric guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'electricguid'; // Set link to electricguid for Beginners
                } else {
                    item.link = 'proelectric'; // Set link to proelectric for other levels
                }
            } else if (item.title.toLowerCase() === 'acoustic guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'acousticpeg'; // Set link to acousticpeg for Beginners
                } else {
                    item.link = 'acousticpro'; // Set link to acousticpro for other levels
                }
            } else if (item.title.toLowerCase() === 'bass guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'bassbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'basspro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'hand drums') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'handbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'handpro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'electronic drums') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'delebeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'delepro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'acoustic drums') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'dacosticbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'dacousticpro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'strings') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'delebeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'delepro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'brass') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'dacosticbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'dacousticpro'; // Set link to basspro for other levels
                }
            } else {
                // Default case if no matches found
                item.link = 'default'; // Default link or other fallback
            }


            const card = document.createElement('div');
            card.classList.add('card');
            card.style.width = '22rem';
            card.style.textAlign = 'center';
            card.style.border = '1px solid #ddd';
            card.style.boxShadow = '0 4px 6px rgba(0, 0, 0, 0.1)';
            card.style.borderRadius = '8px';

            card.innerHTML = `
                    <img src="${item.img}" alt="${item.title}" style="width:100%;border-bottom:1px solid #ddd;">
                    <h5 style="font-size:1.25rem;font-weight:bold;margin:1rem 0;">${item.title}</h5>
                    <a href="${item.link}" class="btn btn-danger" style="margin-bottom:1rem;font-weight:bold;">Read more</a>
                `;
            cardContainer.appendChild(card);
            
            
        });
    }
</script>


<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-27 01:47:17.804 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Guide? - 200 null text/html; charset=utf-8 135.0431ms
2025-01-27 01:47:17.823 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 01:47:17.823 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 01:47:17.823 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 01:47:17.830 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-27 01:47:17.832 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 9.0183ms
2025-01-27 01:47:17.835 +03:00 [INF] [Response] 404 - 4ms

2025-01-27 01:47:17.823 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 01:47:17.842 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 18.961ms
2025-01-27 01:47:17.847 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-27 01:47:17.851 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 01:47:17.852 +03:00 [INF] [Response] 404 - 4ms

2025-01-27 01:47:17.857 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 34.3264ms
2025-01-27 01:47:17.861 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 38.447ms
2025-01-27 01:47:17.862 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 01:47:30.400 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/saxophone-3246650_1280.jpg - null null
2025-01-27 01:47:30.400 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/bowed-instrument-1853324_1280.jpg - null null
2025-01-27 01:47:30.464 +03:00 [INF] Sending file. Request path: '/Images/saxophone-3246650_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\saxophone-3246650_1280.jpg'
2025-01-27 01:47:30.464 +03:00 [INF] Sending file. Request path: '/Images/bowed-instrument-1853324_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\bowed-instrument-1853324_1280.jpg'
2025-01-27 01:47:30.468 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/saxophone-3246650_1280.jpg - 200 235059 image/jpeg 68.9793ms
2025-01-27 01:47:30.469 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/bowed-instrument-1853324_1280.jpg - 200 172545 image/jpeg 70.0662ms
2025-01-27 01:47:32.004 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/delebeg - null null
2025-01-27 01:47:32.018 +03:00 [INF] [Request] GET /Home/delebeg

2025-01-27 01:47:32.022 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.delebeg (MyShop)'
2025-01-27 01:47:32.026 +03:00 [INF] Route matched with {action = "delebeg", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult delebeg(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 01:47:32.044 +03:00 [INF] Executing ViewResult, running view delebeg.
2025-01-27 01:47:32.060 +03:00 [INF] Executed ViewResult - view delebeg executed in 30.1304ms.
2025-01-27 01:47:32.062 +03:00 [INF] Executed action MyShop.Controllers.HomeController.delebeg (MyShop) in 33.0931ms
2025-01-27 01:47:32.063 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.delebeg (MyShop)'
2025-01-27 01:47:32.064 +03:00 [INF] [Response] 200 - 45ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Electronic Drums Beginner Guide - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
<style>
    /* General Styles */
    body {
        font-family: 'Roboto', sans-serif;
        margin: 0;
        padding: 0;
        background-color: #f4f4f4;
        color: #333;
        line-height: 1.6;
    }

    /* Header Phrase Styles */
    .header-phrase {
        background-color: #333; /* Black */
        color: #fff;
        padding: 20px;
        text-align: center;
    }

    .header-phrase h1 {
        margin: 0;
        font-size: 2.5rem;
    }

    /* Main Content Styles */
    main {
        padding: 20px;
        max-width: 1200px;
        margin: 0 auto;
    }

    section {
        margin-bottom: 40px;
    }

    h2 {
        color: #d32f2f; /* Red */
        border-bottom: 2px solid #d32f2f; /* Red */
        padding-bottom: 10px;
        margin-bottom: 20px;
    }

    .content-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 20px;
    }

    .content-card {
        background-color: #fff;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease;
    }

    .content-card:hover {
        transform: translateY(-5px);
    }

    .content-card img {
        width: 100%;
        height: 200px;
        object-fit: cover;
    }

    .content-card h3 {
        margin: 15px;
        color: #333;
    }

    .content-card p, .content-card ul {
        margin: 0 15px 15px;
        color: #555;
    }

    .content-card ul {
        list-style-type: disc;
        padding-left: 20px;
    }

    /* Footer Phrase Styles */
    .footer-phrase {
        background-color: #333; /* Black */
        color: #fff;
        text-align: center;
        padding: 15px;
        margin-top: 40px;
    }
</style>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Electronic Drums Beginner Guide</title>
    <link rel="stylesheet" href="styles.css">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
</head>
<body>
    <!-- Header Phrase -->
    <div class="header-phrase">
        <h1>Electronic Drums Beginner Guide</h1>
    </div>

    <!-- Main Content -->
    <main>
        <!-- Section 1: Choosing Your First Electronic Drum Kit -->
        <section class="choosing-drum">
            <h2>1. Choosing Your First Electronic Drum Kit</h2>
            <div class="content-grid">
                <div class="content-card">
                    <img src="/Images/basic-elec.jpg" alt="Basic Electronic Drum Kit">
                    <h3>Starter Kits</h3>
                    <p>Perfect for beginners, starter kits are affordable and offer the basic features you need to get started.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/mesh.jpg" alt="Mesh Drum Pads">
                    <h3>Mesh vs. Rubber Pads</h3>
                    <p>Understand the difference between mesh heads for a realistic feel and rubber pads for durability and affordability.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/module.jpg" alt="Drum Module">
                    <h3>Drum Module Features</h3>
                    <p>Explore the importance of the drum module, which controls your drum sounds and includes built-in practice tools.</p>
                </div>
            </div>
        </section>

        <!-- Section 2: Setting Up Your Kit -->
        <section class="setup">
            <h2>2. Setting Up Your Kit</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>Space and Placement</h3>
                    <ul>
                        <li>Choose a quiet, stable location for your drum kit.</li>
                        <li>Arrange pads and cymbals in a comfortable and ergonomic layout.</li>
                    </ul>
                </div>
                <div class="content-card">
                    <h3>Cables and Connections</h3>
                    <ul>
                        <li>Learn how to connect pads and cymbals to the drum module.</li>
                        <li>Organize cables to avoid tangling and interference.</li>
                    </ul>
                </div>
                <div class="content-card">
                    <h3>Volume Control</h3>
                    <ul>
                        <li>Use headphones for quiet practice or connect to an amplifier for performances.</li>
                        <li>Adjust volume levels on the drum module to suit your environment.</li>
                    </ul>
                </div>
            </div>
        </section>

        <!-- Section 3: Practicing on Electronic Drums -->
        <section class="practice-tips">
            <h2>3. Practicing on Electronic Drums</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>Built-In Practice Tools</h3>
                    <p>Utilize features like metronomes, play-along tracks, and training modes to improve your timing and rhythm.</p>
                </div>
                <div class="content-card">
                    <h3>Quiet Practice</h3>
                    <p>Take advantage of the quiet nature of electronic drums to practice without disturbing others.</p>
                </div>
                <div class="content-card">
                    <h3>Exploring Sounds</h3>
                    <p>Experiment with the variety of drum kits and sounds available to discover your style and preferences.</p>
                </div>
            </div>
        </section>

        <!-- Section 4: Essential Accessories -->
        <section class="accessories">
            <h2>4. Essential Accessories</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>Drum Sticks</h3>
                    <p>Start with lightweight, beginner-friendly drum sticks that are easy to control.</p>
                </div>
                <div class="content-card">
                    <h3>Headphones</h3>
                    <p>Invest in high-quality headphones for clear sound and a better practice experience.</p>
                </div>
                <div class="content-card">
                    <h3>Drum Throne</h3>
                    <p>A comfortable, adjustable drum throne is essential for maintaining proper posture during practice.</p>
                </div>
            </div>
        </section>
    </main>

    <!-- Footer Phrase -->
    <div class="footer-phrase">
        <p>Start Your Drumming Journey with Confidence!</p>
    </div>
</body>
</html>

        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-27 01:47:32.103 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/delebeg - 200 null text/html; charset=utf-8 100.0981ms
2025-01-27 01:47:32.116 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/styles.css - null null
2025-01-27 01:47:32.120 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 01:47:32.119 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/mesh.jpg - null null
2025-01-27 01:47:32.118 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/basic-elec.jpg - null null
2025-01-27 01:47:32.120 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/module.jpg - null null
2025-01-27 01:47:32.118 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 01:47:32.119 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 01:47:32.124 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-27 01:47:32.129 +03:00 [INF] The file /Images/mesh.jpg was not modified
2025-01-27 01:47:32.120 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 01:47:32.130 +03:00 [INF] The file /Images/basic-elec.jpg was not modified
2025-01-27 01:47:32.137 +03:00 [INF] [Response] 404 - 12ms

2025-01-27 01:47:32.138 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/mesh.jpg - 304 null image/jpeg 18.1855ms
2025-01-27 01:47:32.146 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 26.4932ms
2025-01-27 01:47:32.145 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/basic-elec.jpg - 304 null image/jpeg 26.3749ms
2025-01-27 01:47:32.131 +03:00 [INF] The file /Images/module.jpg was not modified
2025-01-27 01:47:32.120 +03:00 [INF] [Request] GET /Home/styles.css

2025-01-27 01:47:32.134 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 16.2587ms
2025-01-27 01:47:32.136 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-27 01:47:32.152 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 32.2032ms
2025-01-27 01:47:32.154 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 01:47:32.159 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/module.jpg - 304 null image/jpeg 39.2502ms
2025-01-27 01:47:32.160 +03:00 [INF] [Response] 404 - 39ms

2025-01-27 01:47:32.164 +03:00 [INF] [Response] 404 - 27ms

2025-01-27 01:47:32.171 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/styles.css - 404 0 null 55.1154ms
2025-01-27 01:47:32.177 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 57.8601ms
2025-01-27 01:47:32.183 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/Home/styles.css, Response status code: 404
2025-01-27 01:47:32.185 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 01:49:25.952 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-27 01:49:26.231 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-27 01:49:26.241 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-27 01:49:26.356 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-27 01:49:26.359 +03:00 [INF] Hosting environment: Development
2025-01-27 01:49:26.360 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-27 01:49:26.540 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-27 01:49:26.732 +03:00 [INF] [Request] GET /

2025-01-27 01:49:26.771 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 01:49:26.788 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 01:49:26.812 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 01:49:26.865 +03:00 [INF] Executed ViewResult - view Index executed in 58.5596ms.
2025-01-27 01:49:26.869 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 78.0267ms
2025-01-27 01:49:26.870 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 01:49:26.872 +03:00 [INF] [Response] 200 - 148ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Home - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
    

 <style>
    .instrument-name {
        margin-top: 10px; /* Add space between the image and the text */
        font-size: 16px; /* Adjust the text size */
        font-weight: bold; /* Bold text */
        text-align: center; /* Center the text */
    }
  </style>

<section class="category-section py-4">
    <div class="category-section">
        <h3 style="text-align: center; margin-bottom: 20px;">Start Shopping Here</h3>
        <div class="row">
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Guitars'">
                <img src="/Images/pavlo-t-5rEyYBPLN-w-unsplash.jpg" alt="Guitars" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Guitars</p>
            </div>
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Keyboards & Pianos'">
                <img src="/Images/pexels-mikhail-nilov-7570112.jpg" alt="Keyboards & Pianos" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Keyboards & Pianos</p>
            </div>
            <!-- Drums & Percussion -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Drums & Percussion'">
                <img src="/Images/pexels-reneterp-1327430.jpg" alt="Drums & Percussion" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Drums & Percussion</p>
            </div>
            <!-- Pro Audio -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Pro Audio'">
                <img src="/Images/pexels-everson-mayer-478307-1481312.jpg" alt="Pro Audio" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Pro Audio</p>
            </div>
            <!-- Band & Orchestra -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Band & Orchestra'">
                <img src="/Images/pexels-shottrotter-752535.jpg" alt="Band & Orchestra" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Band & Orchestra</p>
            </div>
            <!-- Accessories -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Accessories'">
                <img src="/Images/pexels-rombo-1510555-5280438.jpg" alt="Accessories" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Accessories</p>
            </div>
        </div>
    </div>
</section>


    <section class="membership-section text-center bg-dark text-white py-5">
    <div class="membership-section">
        <h2>Have no clue what to buy ?</h2>
        <p>Check out our professional guide to get the perfect suited instrument !</p>
        <form class="d-inline-flex mt-2" action="/Home/Guide" method="get">
            
            <button class="btn btn-danger" type="submit">professional Guide</button>
        </form>
        </div>
    </section>

    <section class="features-section py-5 bg-light">
            <div class="container">
            <div class="row text-center">
                <div class="col-md-3">
                    <img src="/Images/box.png" alt="Same Day Delivery" class="mb-sm-1" style="width: 40px; height: 40px;">
                    <h5>Same Day/Next Day Delivery</h5>
                    <p>Next day delivery on most orders in Jordan - Same day available</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/shopping-cart.png" alt="Biggest Selection" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Biggest Selection</h5>
                    <p>Largest collection of any store in MENA</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/user-talking-with-speech-bubble.png" alt="Top-notch Support" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Top-notch Support</h5>
                    <p>We are always happy to help in any way we can</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/secure-payment.png" alt="Secure Payments" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Secure Payments</h5>
                    <p>Cash on Delivery available</p>
                </div>
            </div>
            </div>
     </section>


    

    <!-- JavaScript to Toggle Forms -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.js"></script>


        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-27 01:49:26.928 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 400.6629ms
2025-01-27 01:49:26.955 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 01:49:26.956 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 01:49:26.956 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 01:49:26.956 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 01:49:26.980 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 25.1631ms
2025-01-27 01:49:26.980 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-27 01:49:26.988 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-27 01:49:26.997 +03:00 [INF] [Response] 404 - 16ms

2025-01-27 01:49:26.997 +03:00 [INF] [Response] 404 - 9ms

2025-01-27 01:49:26.998 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 42.8483ms
2025-01-27 01:49:26.999 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 43.3193ms
2025-01-27 01:49:27.003 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 01:49:27.005 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 01:49:27.025 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 68.9348ms
2025-01-27 01:49:29.016 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Guide? - null null
2025-01-27 01:49:29.031 +03:00 [INF] [Request] GET /Home/Guide
[QueryString] ?

2025-01-27 01:49:29.033 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Guide (MyShop)'
2025-01-27 01:49:29.036 +03:00 [INF] Route matched with {action = "Guide", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Guide(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 01:49:29.090 +03:00 [INF] Executing ViewResult, running view Guide.
2025-01-27 01:49:29.100 +03:00 [INF] Executed ViewResult - view Guide executed in 11.5736ms.
2025-01-27 01:49:29.102 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Guide (MyShop) in 63.9008ms
2025-01-27 01:49:29.103 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Guide (MyShop)'
2025-01-27 01:49:29.104 +03:00 [INF] [Response] 200 - 73ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Guide - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
<style>

    .instruments-section h1 {
        font-size: 2.5rem;
        font-weight: bold;
        text-align: center;
    }

    .instruments-section p {
        font-size: 1.25rem;
        color: #555;
        text-align: center;
    }

    /* Black Line */
    hr.thick-black-line {
        border: none; /* Remove default borders */
        height: 5px; /* Set the height */
        background-color: black !important; /* Force black color */
        margin: 0 auto; /* Center it horizontally */
        width: 80%; /* Adjust width */
    }


    /* Dropdown Buttons Alignment */
    .instrument-buttons {
        display: flex;
        gap: 1rem; /* Add spacing between dropdown buttons */
        padding-left: 10%; /* Align dropdown buttons with the left edge of the line */
    }

        .instrument-buttons .dropdown {
            display: inline-block;
        }

        /* Styling for Buttons */
        .instrument-buttons .btn {
            font-size: 1rem;
            font-weight: bold;
            padding: 0.5rem 1.5rem;
        }

    /* Dropdown Menu Styling */
    .dropdown-menu {
        font-size: 1rem;
        text-align: left;
    }



</style>


<section class="instruments-section text-center py-5">
    <h1 class="mb-3">Instruments</h1>
    <p class="mb-4">
        Here, the SoundWave’s expert players guide you through the intricacies of the instruments they play.
        Choose an instrument from one of the sections.
    </p>
    <hr class="thick-black-line mb-4" />

    <!-- Dropdown Buttons -->
    <div class="instrument-buttons text-start">
        <!-- Dropdown for Instruments -->
        <div class="dropdown">
            <button class="btn btn-light border text-danger dropdown-toggle"
                    type="button"
                    id="instrumentDropdown"
                    data-bs-toggle="dropdown"
                    aria-expanded="false">
                Instruments
            </button>
            <ul class="dropdown-menu" aria-labelledby="instrumentDropdown">
                <li><a class="dropdown-item instrument-item" href="#">Guitars</a></li>
                <li><a class="dropdown-item instrument-item" href="#">Drums</a></li>
                <li><a class="dropdown-item instrument-item" href="#">Orchestra</a></li>
            </ul>
        </div>

        <!-- Dropdown for Level -->
        <div class="dropdown">
            <button class="btn btn-light border text-danger dropdown-toggle"
                    type="button"
                    id="levelDropdown"
                    data-bs-toggle="dropdown"
                    aria-expanded="false">
                Level
            </button>
            <ul class="dropdown-menu" aria-labelledby="levelDropdown">
                <li><a class="dropdown-item level-item" href="#">Beginner</a></li>
                <li><a class="dropdown-item level-item" href="#">Professional</a></li>
            </ul>
        </div>
    </div>
    
    <div id="card-container" class="d-flex justify-content-center gap-4 mt-5"></div>

</section>

<script>
    const instrumentDropdown = document.querySelectorAll('.instrument-item');
    const levelDropdown = document.querySelectorAll('.level-item');
    const cardContainer = document.getElementById('card-container');

    let selectedInstrument = '';
    let selectedLevel = '';

    const guitarsData = [
        {
            img: '/Images/guitar-4750599_1280.jpg',
            title: 'Acoustic Guitar',
            link: '#'
        },
        {
            img: '/Images/electric-guitar-7815026_1280.jpg',
            title: 'Electric Guitar',
            link: '#'
        },
        {
            img: '/Images/bass-guitar-913092_1280.jpg',
            title: 'Bass Guitar',
            link: '#'
        }
    ];

    const DrumsData = [
        {
            img: '/Images/african-2771092_1280.jpg',
            title: 'Hand Drums',
            link: '#'
        },
        {
            img: '/Images/electronic-drum-pad-5854409_1280.jpg',
            title: 'Electronic Drums',
            link: '#'
        },
        {
            img: '/Images/drum-set-1839383_1280.jpg',
            title: 'Acoustic Drums',
            link: '#'
        }
    ];

    const OrchestraData = [
        {
            img: '/Images/bowed-instrument-1853324_1280.jpg',
            title: 'Strings',
            link: '#'
        },
        {
            img: '/Images/saxophone-3246650_1280.jpg',
            title: 'Brass',
            link: '#'
        },
        
    ];

    instrumentDropdown.forEach(item => {
        item.addEventListener('click', function () {
            selectedInstrument = this.textContent.trim();
            checkSelection();
        });
    });

    levelDropdown.forEach(item => {
        item.addEventListener('click', function () {
            selectedLevel = this.textContent.trim();
            checkSelection();
        });
    });

    function checkSelection() {
        if (selectedInstrument === 'Guitars' && selectedLevel === 'Beginner') {
            renderCards(guitarsData);
        } 
        else if (selectedInstrument === 'Guitars' && selectedLevel === 'Professional') {
            renderCards(guitarsData);
        }
        else if (selectedInstrument === 'Drums' && (selectedLevel === 'Professional' || selectedLevel === 'Beginner')) {
            renderCards(DrumsData);

        }
        else if (selectedInstrument === 'Orchestra' && (selectedLevel === 'Professional' || selectedLevel === 'Beginner')) {
            renderCards(OrchestraData);

        }
        else {
            cardContainer.innerHTML = ''; // Clear cards
        }
    }

    function renderCards(data) {
        cardContainer.innerHTML = ''; // Clear previous cards

        data.forEach(item => {
            if (item.title.toLowerCase() === 'electric guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'electricguid'; // Set link to electricguid for Beginners
                } else {
                    item.link = 'proelectric'; // Set link to proelectric for other levels
                }
            } else if (item.title.toLowerCase() === 'acoustic guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'acousticpeg'; // Set link to acousticpeg for Beginners
                } else {
                    item.link = 'acousticpro'; // Set link to acousticpro for other levels
                }
            } else if (item.title.toLowerCase() === 'bass guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'bassbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'basspro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'hand drums') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'handbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'handpro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'electronic drums') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'delebeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'delepro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'acoustic drums') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'dacosticbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'dacousticpro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'strings') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'stringsbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'stringspro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'brass') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'brassbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'brasspro'; // Set link to basspro for other levels
                }
            } else {
                // Default case if no matches found
                item.link = 'default'; // Default link or other fallback
            }


            const card = document.createElement('div');
            card.classList.add('card');
            card.style.width = '22rem';
            card.style.textAlign = 'center';
            card.style.border = '1px solid #ddd';
            card.style.boxShadow = '0 4px 6px rgba(0, 0, 0, 0.1)';
            card.style.borderRadius = '8px';

            card.innerHTML = `
                    <img src="${item.img}" alt="${item.title}" style="width:100%;border-bottom:1px solid #ddd;">
                    <h5 style="font-size:1.25rem;font-weight:bold;margin:1rem 0;">${item.title}</h5>
                    <a href="${item.link}" class="btn btn-danger" style="margin-bottom:1rem;font-weight:bold;">Read more</a>
                `;
            cardContainer.appendChild(card);
            
            
        });
    }
</script>


<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-27 01:49:29.154 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Guide? - 200 null text/html; charset=utf-8 138.0984ms
2025-01-27 01:49:29.170 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 01:49:29.170 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 01:49:29.170 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 01:49:29.171 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 01:49:29.175 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 4.7645ms
2025-01-27 01:49:29.177 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-27 01:49:29.180 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-27 01:49:29.188 +03:00 [INF] [Response] 404 - 10ms

2025-01-27 01:49:29.189 +03:00 [INF] [Response] 404 - 8ms

2025-01-27 01:49:29.189 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 18.9719ms
2025-01-27 01:49:29.194 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 23.4527ms
2025-01-27 01:49:29.199 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 01:49:29.206 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 01:49:29.214 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 43.3998ms
2025-01-27 01:49:38.077 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/stringsbeg - null null
2025-01-27 01:49:38.091 +03:00 [INF] [Request] GET /Home/stringsbeg

2025-01-27 01:49:38.098 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.stringsbeg (MyShop)'
2025-01-27 01:49:38.102 +03:00 [INF] Route matched with {action = "stringsbeg", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult stringsbeg(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 01:49:38.105 +03:00 [INF] Executing ViewResult, running view stringsbeg.
2025-01-27 01:49:38.115 +03:00 [INF] Executed ViewResult - view stringsbeg executed in 10.4982ms.
2025-01-27 01:49:38.117 +03:00 [INF] Executed action MyShop.Controllers.HomeController.stringsbeg (MyShop) in 13.3994ms
2025-01-27 01:49:38.118 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.stringsbeg (MyShop)'
2025-01-27 01:49:38.119 +03:00 [INF] [Response] 200 - 27ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Beginners Guide to Orchestra Strings - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
<style>
    /* General Styles */
    body {
        font-family: 'Roboto', sans-serif;
        margin: 0;
        padding: 0;
        background-color: #f4f4f4;
        color: #333;
        line-height: 1.6;
    }

    /* Header Phrase Styles */
    .header-phrase {
        background-color: #333; /* Black */
        color: #fff;
        padding: 20px;
        text-align: center;
    }

    .header-phrase h1 {
        margin: 0;
        font-size: 2.5rem;
    }

    /* Main Content Styles */
    main {
        padding: 20px;
        max-width: 1200px;
        margin: 0 auto;
    }

    section {
        margin-bottom: 40px;
    }

    h2 {
        color: #d32f2f; /* Red */
        border-bottom: 2px solid #d32f2f; /* Red */
        padding-bottom: 10px;
        margin-bottom: 20px;
    }

    .content-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 20px;
    }

    .content-card {
        background-color: #fff;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease;
    }

    .content-card:hover {
        transform: translateY(-5px);
    }

    .content-card img {
        width: 100%;
        height: 200px;
        object-fit: cover;
    }

    .content-card h3 {
        margin: 15px;
        color: #333;
    }

    .content-card p, .content-card ul {
        margin: 0 15px 15px;
        color: #555;
    }

    .content-card ul {
        list-style-type: disc;
        padding-left: 20px;
    }

    /* Footer Phrase Styles */
    .footer-phrase {
        background-color: #333; /* Black */
        color: #fff;
        text-align: center;
        padding: 15px;
        margin-top: 40px;
    }
</style>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Beginners Guide to Orchestra Strings</title>
    <link rel="stylesheet" href="styles.css">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
</head>
<body>
    <!-- Header Phrase -->
    <div class="header-phrase">
        <h1>Beginners Guide to Orchestra Strings</h1>
    </div>

    <!-- Main Content -->
    <main>
        <!-- Section 1: Understanding the Instruments -->
        <section class="instrument-guide">
            <h2>1. Understanding the Instruments</h2>
            <div class="content-grid">
                <div class="content-card">
                    <img src="/Images/violin-6708567_1280.jpg" alt="Violin">
                    <h3>The Violin</h3>
                    <p>Learn about the violin, its role in the orchestra, and basic techniques for getting started.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/instrument-3208416_1280.jpg" alt="Viola">
                    <h3>The Viola</h3>
                    <p>An introduction to the viola, its rich tones, and how it complements the violin section.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/cello-521172_1280.jpg" alt="Cello">
                    <h3>The Cello</h3>
                    <p>Explore the cello's deep, resonant sound and its foundational role in orchestral music.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/Double_Bass__In2.jpg" alt="Double Bass">
                    <h3>The Double Bass</h3>
                    <p>Discover the double bass, the largest string instrument, and its contribution to the orchestra's depth.</p>
                </div>
            </div>
        </section>

        <!-- Section 2: Basic Playing Techniques -->
        <section class="playing-techniques">
            <h2>2. Basic Playing Techniques</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>Bowing Basics</h3>
                    <p>Learn proper bowing techniques to produce clear and consistent sound on string instruments.</p>
                </div>
                <div class="content-card">
                    <h3>Finger Placement</h3>
                    <p>Understand the importance of correct finger placement for intonation and fluid playing.</p>
                </div>
                <div class="content-card">
                    <h3>Posture and Positioning</h3>
                    <p>Develop good posture and instrument positioning to avoid strain and improve performance.</p>
                </div>
            </div>
        </section>

        <!-- Section 3: Maintenance and Care -->
        <section class="maintenance-guide">
            <h2>3. Maintenance and Care</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>String Care</h3>
                    <p>Tips for cleaning and maintaining your strings to ensure longevity and quality sound.</p>
                </div>
                <div class="content-card">
                    <h3>Bow Maintenance</h3>
                    <p>Learn how to care for your bow, including rehairing and proper storage techniques.</p>
                </div>
                <div class="content-card">
                    <h3>Instrument Storage</h3>
                    <p>Best practices for storing your instrument to prevent damage and maintain its condition.</p>
                </div>
            </div>
        </section>

        <!-- Section 4: Recommended Starter Kits -->
        <section class="recommended-kits">
            <h2>4. Recommended Starter Kits</h2>
            <div class="content-grid">
                <div class="content-card">
                    <img src="/Images/violin-kit.jpg" alt="Beginner Violin Kit">
                    <h3>Beginner Violin Kit</h3>
                    <p>A complete violin kit designed for beginners, including a bow, case, and rosin.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/cello-521172_1280.jpg" alt="Beginner Cello Kit">
                    <h3>Beginner Cello Kit</h3>
                    <p>An ideal cello kit for beginners, offering great sound quality and durability.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/strings-kit.jpg" alt="Essential Accessories">
                    <h3>Essential Accessories</h3>
                    <p>A collection of must-have accessories for string players, including tuners, shoulder rests, and more.</p>
                </div>
            </div>
        </section>
    </main>

    <!-- Footer Phrase -->
    <div class="footer-phrase">
        <p>Start Your Musical Journey with Orchestra Strings!</p>
    </div>
</body>
</html>

        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-27 01:49:38.164 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/stringsbeg - 200 null text/html; charset=utf-8 87.4567ms
2025-01-27 01:49:38.177 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/styles.css - null null
2025-01-27 01:49:38.181 +03:00 [INF] [Request] GET /Home/styles.css

2025-01-27 01:49:38.182 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 01:49:38.183 +03:00 [INF] [Response] 404 - 1ms

2025-01-27 01:49:38.184 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/violin-kit.jpg - null null
2025-01-27 01:49:38.183 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/cello-521172_1280.jpg - null null
2025-01-27 01:49:38.182 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/instrument-3208416_1280.jpg - null null
2025-01-27 01:49:38.183 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/Double_Bass__In2.jpg - null null
2025-01-27 01:49:38.184 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/strings-kit.jpg - null null
2025-01-27 01:49:38.182 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/violin-6708567_1280.jpg - null null
2025-01-27 01:49:38.189 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 01:49:38.194 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 01:49:38.194 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/styles.css - 404 0 null 17.6349ms
2025-01-27 01:49:38.218 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-27 01:49:38.219 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-27 01:49:38.221 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/Home/styles.css, Response status code: 404
2025-01-27 01:49:38.229 +03:00 [INF] [Response] 404 - 9ms

2025-01-27 01:49:38.227 +03:00 [INF] [Response] 404 - 8ms

2025-01-27 01:49:38.233 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 39.0638ms
2025-01-27 01:49:38.241 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 01:49:38.243 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 01:49:38.243 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 61.0367ms
2025-01-27 01:49:38.234 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 44.8668ms
2025-01-27 01:49:38.263 +03:00 [INF] Sending file. Request path: '/Images/violin-kit.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\violin-kit.jpg'
2025-01-27 01:49:38.263 +03:00 [INF] Sending file. Request path: '/Images/Double_Bass__In2.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\Double_Bass__In2.jpg'
2025-01-27 01:49:38.266 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/violin-kit.jpg - 200 40577 image/jpeg 82.5686ms
2025-01-27 01:49:38.268 +03:00 [INF] Sending file. Request path: '/Images/violin-6708567_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\violin-6708567_1280.jpg'
2025-01-27 01:49:38.268 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/Double_Bass__In2.jpg - 200 54652 image/jpeg 85.2215ms
2025-01-27 01:49:38.271 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 30.1082ms
2025-01-27 01:49:38.263 +03:00 [INF] Sending file. Request path: '/Images/strings-kit.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\strings-kit.jpg'
2025-01-27 01:49:38.265 +03:00 [INF] Sending file. Request path: '/Images/cello-521172_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\cello-521172_1280.jpg'
2025-01-27 01:49:38.285 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/cello-521172_1280.jpg - 200 173462 image/jpeg 102.6455ms
2025-01-27 01:49:38.263 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 01:49:38.271 +03:00 [INF] Sending file. Request path: '/Images/instrument-3208416_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\instrument-3208416_1280.jpg'
2025-01-27 01:49:38.275 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/violin-6708567_1280.jpg - 200 220999 image/jpeg 92.8977ms
2025-01-27 01:49:38.283 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/strings-kit.jpg - 200 11983 image/jpeg 99.3961ms
2025-01-27 01:49:38.305 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/instrument-3208416_1280.jpg - 200 318169 image/jpeg 123.2048ms
2025-01-27 01:50:13.206 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-27 01:50:13.486 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-27 01:50:13.489 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-27 01:50:13.571 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-27 01:50:13.573 +03:00 [INF] Hosting environment: Development
2025-01-27 01:50:13.574 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-27 01:50:14.182 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-27 01:50:14.368 +03:00 [INF] [Request] GET /

2025-01-27 01:50:14.409 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 01:50:14.428 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 01:50:14.450 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 01:50:14.507 +03:00 [INF] Executed ViewResult - view Index executed in 60.8299ms.
2025-01-27 01:50:14.512 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 81.4181ms
2025-01-27 01:50:14.513 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 01:50:14.515 +03:00 [INF] [Response] 200 - 153ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Home - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
    

 <style>
    .instrument-name {
        margin-top: 10px; /* Add space between the image and the text */
        font-size: 16px; /* Adjust the text size */
        font-weight: bold; /* Bold text */
        text-align: center; /* Center the text */
    }
  </style>

<section class="category-section py-4">
    <div class="category-section">
        <h3 style="text-align: center; margin-bottom: 20px;">Start Shopping Here</h3>
        <div class="row">
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Guitars'">
                <img src="/Images/pavlo-t-5rEyYBPLN-w-unsplash.jpg" alt="Guitars" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Guitars</p>
            </div>
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Keyboards & Pianos'">
                <img src="/Images/pexels-mikhail-nilov-7570112.jpg" alt="Keyboards & Pianos" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Keyboards & Pianos</p>
            </div>
            <!-- Drums & Percussion -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Drums & Percussion'">
                <img src="/Images/pexels-reneterp-1327430.jpg" alt="Drums & Percussion" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Drums & Percussion</p>
            </div>
            <!-- Pro Audio -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Pro Audio'">
                <img src="/Images/pexels-everson-mayer-478307-1481312.jpg" alt="Pro Audio" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Pro Audio</p>
            </div>
            <!-- Band & Orchestra -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Band & Orchestra'">
                <img src="/Images/pexels-shottrotter-752535.jpg" alt="Band & Orchestra" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Band & Orchestra</p>
            </div>
            <!-- Accessories -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Accessories'">
                <img src="/Images/pexels-rombo-1510555-5280438.jpg" alt="Accessories" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Accessories</p>
            </div>
        </div>
    </div>
</section>


    <section class="membership-section text-center bg-dark text-white py-5">
    <div class="membership-section">
        <h2>Have no clue what to buy ?</h2>
        <p>Check out our professional guide to get the perfect suited instrument !</p>
        <form class="d-inline-flex mt-2" action="/Home/Guide" method="get">
            
            <button class="btn btn-danger" type="submit">professional Guide</button>
        </form>
        </div>
    </section>

    <section class="features-section py-5 bg-light">
            <div class="container">
            <div class="row text-center">
                <div class="col-md-3">
                    <img src="/Images/box.png" alt="Same Day Delivery" class="mb-sm-1" style="width: 40px; height: 40px;">
                    <h5>Same Day/Next Day Delivery</h5>
                    <p>Next day delivery on most orders in Jordan - Same day available</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/shopping-cart.png" alt="Biggest Selection" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Biggest Selection</h5>
                    <p>Largest collection of any store in MENA</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/user-talking-with-speech-bubble.png" alt="Top-notch Support" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Top-notch Support</h5>
                    <p>We are always happy to help in any way we can</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/secure-payment.png" alt="Secure Payments" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Secure Payments</h5>
                    <p>Cash on Delivery available</p>
                </div>
            </div>
            </div>
     </section>


    

    <!-- JavaScript to Toggle Forms -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.js"></script>


        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-27 01:50:14.612 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 437.8333ms
2025-01-27 01:50:14.623 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 01:50:14.625 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 01:50:14.624 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 01:50:14.624 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 01:50:14.648 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-27 01:50:14.661 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 37.8045ms
2025-01-27 01:50:14.667 +03:00 [INF] [Response] 404 - 18ms

2025-01-27 01:50:14.662 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-27 01:50:14.676 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 53.2487ms
2025-01-27 01:50:14.677 +03:00 [INF] [Response] 404 - 14ms

2025-01-27 01:50:14.680 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 01:50:14.681 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 56.8484ms
2025-01-27 01:50:14.688 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 01:50:14.710 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 85.6247ms
2025-01-27 01:50:17.830 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Guide? - null null
2025-01-27 01:50:17.840 +03:00 [INF] [Request] GET /Home/Guide
[QueryString] ?

2025-01-27 01:50:17.842 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Guide (MyShop)'
2025-01-27 01:50:17.844 +03:00 [INF] Route matched with {action = "Guide", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Guide(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 01:50:17.888 +03:00 [INF] Executing ViewResult, running view Guide.
2025-01-27 01:50:17.895 +03:00 [INF] Executed ViewResult - view Guide executed in 7.0314ms.
2025-01-27 01:50:17.897 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Guide (MyShop) in 50.1754ms
2025-01-27 01:50:17.898 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Guide (MyShop)'
2025-01-27 01:50:17.899 +03:00 [INF] [Response] 200 - 58ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Guide - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
<style>

    .instruments-section h1 {
        font-size: 2.5rem;
        font-weight: bold;
        text-align: center;
    }

    .instruments-section p {
        font-size: 1.25rem;
        color: #555;
        text-align: center;
    }

    /* Black Line */
    hr.thick-black-line {
        border: none; /* Remove default borders */
        height: 5px; /* Set the height */
        background-color: black !important; /* Force black color */
        margin: 0 auto; /* Center it horizontally */
        width: 80%; /* Adjust width */
    }


    /* Dropdown Buttons Alignment */
    .instrument-buttons {
        display: flex;
        gap: 1rem; /* Add spacing between dropdown buttons */
        padding-left: 10%; /* Align dropdown buttons with the left edge of the line */
    }

        .instrument-buttons .dropdown {
            display: inline-block;
        }

        /* Styling for Buttons */
        .instrument-buttons .btn {
            font-size: 1rem;
            font-weight: bold;
            padding: 0.5rem 1.5rem;
        }

    /* Dropdown Menu Styling */
    .dropdown-menu {
        font-size: 1rem;
        text-align: left;
    }



</style>


<section class="instruments-section text-center py-5">
    <h1 class="mb-3">Instruments</h1>
    <p class="mb-4">
        Here, the SoundWave’s expert players guide you through the intricacies of the instruments they play.
        Choose an instrument from one of the sections.
    </p>
    <hr class="thick-black-line mb-4" />

    <!-- Dropdown Buttons -->
    <div class="instrument-buttons text-start">
        <!-- Dropdown for Instruments -->
        <div class="dropdown">
            <button class="btn btn-light border text-danger dropdown-toggle"
                    type="button"
                    id="instrumentDropdown"
                    data-bs-toggle="dropdown"
                    aria-expanded="false">
                Instruments
            </button>
            <ul class="dropdown-menu" aria-labelledby="instrumentDropdown">
                <li><a class="dropdown-item instrument-item" href="#">Guitars</a></li>
                <li><a class="dropdown-item instrument-item" href="#">Drums</a></li>
                <li><a class="dropdown-item instrument-item" href="#">Orchestra</a></li>
            </ul>
        </div>

        <!-- Dropdown for Level -->
        <div class="dropdown">
            <button class="btn btn-light border text-danger dropdown-toggle"
                    type="button"
                    id="levelDropdown"
                    data-bs-toggle="dropdown"
                    aria-expanded="false">
                Level
            </button>
            <ul class="dropdown-menu" aria-labelledby="levelDropdown">
                <li><a class="dropdown-item level-item" href="#">Beginner</a></li>
                <li><a class="dropdown-item level-item" href="#">Professional</a></li>
            </ul>
        </div>
    </div>
    
    <div id="card-container" class="d-flex justify-content-center gap-4 mt-5"></div>

</section>

<script>
    const instrumentDropdown = document.querySelectorAll('.instrument-item');
    const levelDropdown = document.querySelectorAll('.level-item');
    const cardContainer = document.getElementById('card-container');

    let selectedInstrument = '';
    let selectedLevel = '';

    const guitarsData = [
        {
            img: '/Images/guitar-4750599_1280.jpg',
            title: 'Acoustic Guitar',
            link: '#'
        },
        {
            img: '/Images/electric-guitar-7815026_1280.jpg',
            title: 'Electric Guitar',
            link: '#'
        },
        {
            img: '/Images/bass-guitar-913092_1280.jpg',
            title: 'Bass Guitar',
            link: '#'
        }
    ];

    const DrumsData = [
        {
            img: '/Images/african-2771092_1280.jpg',
            title: 'Hand Drums',
            link: '#'
        },
        {
            img: '/Images/electronic-drum-pad-5854409_1280.jpg',
            title: 'Electronic Drums',
            link: '#'
        },
        {
            img: '/Images/drum-set-1839383_1280.jpg',
            title: 'Acoustic Drums',
            link: '#'
        }
    ];

    const OrchestraData = [
        {
            img: '/Images/bowed-instrument-1853324_1280.jpg',
            title: 'Strings',
            link: '#'
        },
        {
            img: '/Images/saxophone-3246650_1280.jpg',
            title: 'Brass',
            link: '#'
        },
        
    ];

    instrumentDropdown.forEach(item => {
        item.addEventListener('click', function () {
            selectedInstrument = this.textContent.trim();
            checkSelection();
        });
    });

    levelDropdown.forEach(item => {
        item.addEventListener('click', function () {
            selectedLevel = this.textContent.trim();
            checkSelection();
        });
    });

    function checkSelection() {
        if (selectedInstrument === 'Guitars' && selectedLevel === 'Beginner') {
            renderCards(guitarsData);
        } 
        else if (selectedInstrument === 'Guitars' && selectedLevel === 'Professional') {
            renderCards(guitarsData);
        }
        else if (selectedInstrument === 'Drums' && (selectedLevel === 'Professional' || selectedLevel === 'Beginner')) {
            renderCards(DrumsData);

        }
        else if (selectedInstrument === 'Orchestra' && (selectedLevel === 'Professional' || selectedLevel === 'Beginner')) {
            renderCards(OrchestraData);

        }
        else {
            cardContainer.innerHTML = ''; // Clear cards
        }
    }

    function renderCards(data) {
        cardContainer.innerHTML = ''; // Clear previous cards

        data.forEach(item => {
            if (item.title.toLowerCase() === 'electric guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'electricguid'; // Set link to electricguid for Beginners
                } else {
                    item.link = 'proelectric'; // Set link to proelectric for other levels
                }
            } else if (item.title.toLowerCase() === 'acoustic guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'acousticpeg'; // Set link to acousticpeg for Beginners
                } else {
                    item.link = 'acousticpro'; // Set link to acousticpro for other levels
                }
            } else if (item.title.toLowerCase() === 'bass guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'bassbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'basspro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'hand drums') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'handbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'handpro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'electronic drums') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'delebeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'delepro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'acoustic drums') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'dacosticbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'dacousticpro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'strings') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'stringsbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'stringspro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'brass') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'brassbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'brasspro'; // Set link to basspro for other levels
                }
            } else {
                // Default case if no matches found
                item.link = 'default'; // Default link or other fallback
            }


            const card = document.createElement('div');
            card.classList.add('card');
            card.style.width = '22rem';
            card.style.textAlign = 'center';
            card.style.border = '1px solid #ddd';
            card.style.boxShadow = '0 4px 6px rgba(0, 0, 0, 0.1)';
            card.style.borderRadius = '8px';

            card.innerHTML = `
                    <img src="${item.img}" alt="${item.title}" style="width:100%;border-bottom:1px solid #ddd;">
                    <h5 style="font-size:1.25rem;font-weight:bold;margin:1rem 0;">${item.title}</h5>
                    <a href="${item.link}" class="btn btn-danger" style="margin-bottom:1rem;font-weight:bold;">Read more</a>
                `;
            cardContainer.appendChild(card);
            
            
        });
    }
</script>


<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-27 01:50:17.957 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Guide? - 200 null text/html; charset=utf-8 127.6803ms
2025-01-27 01:50:17.974 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 01:50:17.974 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 01:50:17.974 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 01:50:17.975 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 01:50:17.978 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 3.7113ms
2025-01-27 01:50:17.980 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-27 01:50:17.983 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-27 01:50:17.998 +03:00 [INF] [Response] 404 - 17ms

2025-01-27 01:50:18.000 +03:00 [INF] [Response] 404 - 17ms

2025-01-27 01:50:18.005 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 30.8412ms
2025-01-27 01:50:18.007 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 32.5084ms
2025-01-27 01:50:18.010 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 01:50:18.014 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 01:50:18.029 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 54.0271ms
2025-01-27 01:50:35.561 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/stringsbeg - null null
2025-01-27 01:50:35.568 +03:00 [INF] [Request] GET /Home/stringsbeg

2025-01-27 01:50:35.573 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.stringsbeg (MyShop)'
2025-01-27 01:50:35.576 +03:00 [INF] Route matched with {action = "stringsbeg", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult stringsbeg(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 01:50:35.580 +03:00 [INF] Executing ViewResult, running view stringsbeg.
2025-01-27 01:50:35.596 +03:00 [INF] Executed ViewResult - view stringsbeg executed in 16.7155ms.
2025-01-27 01:50:35.597 +03:00 [INF] Executed action MyShop.Controllers.HomeController.stringsbeg (MyShop) in 19.3982ms
2025-01-27 01:50:35.598 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.stringsbeg (MyShop)'
2025-01-27 01:50:35.603 +03:00 [INF] [Response] 200 - 33ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Beginners Guide to Orchestra Strings - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
<style>
    /* General Styles */
    body {
        font-family: 'Roboto', sans-serif;
        margin: 0;
        padding: 0;
        background-color: #f4f4f4;
        color: #333;
        line-height: 1.6;
    }

    /* Header Phrase Styles */
    .header-phrase {
        background-color: #333; /* Black */
        color: #fff;
        padding: 20px;
        text-align: center;
    }

    .header-phrase h1 {
        margin: 0;
        font-size: 2.5rem;
    }

    /* Main Content Styles */
    main {
        padding: 20px;
        max-width: 1200px;
        margin: 0 auto;
    }

    section {
        margin-bottom: 40px;
    }

    h2 {
        color: #d32f2f; /* Red */
        border-bottom: 2px solid #d32f2f; /* Red */
        padding-bottom: 10px;
        margin-bottom: 20px;
    }

    .content-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 20px;
    }

    .content-card {
        background-color: #fff;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease;
    }

    .content-card:hover {
        transform: translateY(-5px);
    }

    .content-card img {
        width: 100%;
        height: 200px;
        object-fit: cover;
    }

    .content-card h3 {
        margin: 15px;
        color: #333;
    }

    .content-card p, .content-card ul {
        margin: 0 15px 15px;
        color: #555;
    }

    .content-card ul {
        list-style-type: disc;
        padding-left: 20px;
    }

    /* Footer Phrase Styles */
    .footer-phrase {
        background-color: #333; /* Black */
        color: #fff;
        text-align: center;
        padding: 15px;
        margin-top: 40px;
    }
</style>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Beginners Guide to Orchestra Strings</title>
    <link rel="stylesheet" href="styles.css">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
</head>
<body>
    <!-- Header Phrase -->
    <div class="header-phrase">
        <h1>Beginners Guide to Orchestra Strings</h1>
    </div>

    <!-- Main Content -->
    <main>
        <!-- Section 1: Understanding the Instruments -->
        <section class="instrument-guide">
            <h2>1. Understanding the Instruments</h2>
            <div class="content-grid">
                <div class="content-card">
                    <img src="/Images/violin-6708567_1280.jpg" alt="Violin">
                    <h3>The Violin</h3>
                    <p>Learn about the violin, its role in the orchestra, and basic techniques for getting started.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/instrument-3208416_1280.jpg" alt="Viola">
                    <h3>The Viola</h3>
                    <p>An introduction to the viola, its rich tones, and how it complements the violin section.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/cello-521172_1280.jpg" alt="Cello">
                    <h3>The Cello</h3>
                    <p>Explore the cello's deep, resonant sound and its foundational role in orchestral music.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/Double_Bass__In2.jpg" alt="Double Bass">
                    <h3>The Double Bass</h3>
                    <p>Discover the double bass, the largest string instrument, and its contribution to the orchestra's depth.</p>
                </div>
            </div>
        </section>

        <!-- Section 2: Basic Playing Techniques -->
        <section class="playing-techniques">
            <h2>2. Basic Playing Techniques</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>Bowing Basics</h3>
                    <p>Learn proper bowing techniques to produce clear and consistent sound on string instruments.</p>
                </div>
                <div class="content-card">
                    <h3>Finger Placement</h3>
                    <p>Understand the importance of correct finger placement for intonation and fluid playing.</p>
                </div>
                <div class="content-card">
                    <h3>Posture and Positioning</h3>
                    <p>Develop good posture and instrument positioning to avoid strain and improve performance.</p>
                </div>
            </div>
        </section>

        <!-- Section 3: Maintenance and Care -->
        <section class="maintenance-guide">
            <h2>3. Maintenance and Care</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>String Care</h3>
                    <p>Tips for cleaning and maintaining your strings to ensure longevity and quality sound.</p>
                </div>
                <div class="content-card">
                    <h3>Bow Maintenance</h3>
                    <p>Learn how to care for your bow, including rehairing and proper storage techniques.</p>
                </div>
                <div class="content-card">
                    <h3>Instrument Storage</h3>
                    <p>Best practices for storing your instrument to prevent damage and maintain its condition.</p>
                </div>
            </div>
        </section>

        <!-- Section 4: Recommended Starter Kits -->
        <section class="recommended-kits">
            <h2>4. Recommended Starter Kits</h2>
            <div class="content-grid">
                <div class="content-card">
                    <img src="/Images/violin-kit.jpg" alt="Beginner Violin Kit">
                    <h3>Beginner Violin Kit</h3>
                    <p>A complete violin kit designed for beginners, including a bow, case, and rosin.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/cello-kit.jpg" alt="Beginner Cello Kit">
                    <h3>Beginner Cello Kit</h3>
                    <p>An ideal cello kit for beginners, offering great sound quality and durability.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/strings-kit.jpg" alt="Essential Accessories">
                    <h3>Essential Accessories</h3>
                    <p>A collection of must-have accessories for string players, including tuners, shoulder rests, and more.</p>
                </div>
            </div>
        </section>
    </main>

    <!-- Footer Phrase -->
    <div class="footer-phrase">
        <p>Start Your Musical Journey with Orchestra Strings!</p>
    </div>
</body>
</html>

        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-27 01:50:35.639 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/stringsbeg - 200 null text/html; charset=utf-8 78.9447ms
2025-01-27 01:50:35.660 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/styles.css - null null
2025-01-27 01:50:35.663 +03:00 [INF] [Request] GET /Home/styles.css

2025-01-27 01:50:35.664 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/cello-kit.jpg - null null
2025-01-27 01:50:35.664 +03:00 [INF] [Response] 404 - 1ms

2025-01-27 01:50:35.668 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/Double_Bass__In2.jpg - null null
2025-01-27 01:50:35.669 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/violin-kit.jpg - null null
2025-01-27 01:50:35.675 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/styles.css - 404 0 null 14.7208ms
2025-01-27 01:50:35.669 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/strings-kit.jpg - null null
2025-01-27 01:50:35.668 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 01:50:35.664 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 01:50:35.668 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 01:50:35.683 +03:00 [INF] The file /Images/Double_Bass__In2.jpg was not modified
2025-01-27 01:50:35.684 +03:00 [INF] The file /Images/violin-kit.jpg was not modified
2025-01-27 01:50:35.688 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/Home/styles.css, Response status code: 404
2025-01-27 01:50:35.706 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/Double_Bass__In2.jpg - 304 null image/jpeg 37.2694ms
2025-01-27 01:50:35.706 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/violin-kit.jpg - 304 null image/jpeg 36.8752ms
2025-01-27 01:50:35.691 +03:00 [INF] The file /Images/strings-kit.jpg was not modified
2025-01-27 01:50:35.693 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-27 01:50:35.701 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 36.9108ms
2025-01-27 01:50:35.705 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-27 01:50:35.677 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 01:50:35.722 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/strings-kit.jpg - 304 null image/jpeg 53.1637ms
2025-01-27 01:50:35.723 +03:00 [INF] [Response] 404 - 29ms

2025-01-27 01:50:35.727 +03:00 [INF] Sending file. Request path: '/Images/cello-kit.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\cello-kit.jpg'
2025-01-27 01:50:35.735 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 66.9493ms
2025-01-27 01:50:35.739 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/cello-kit.jpg - 200 33908 image/jpeg 74.8253ms
2025-01-27 01:50:35.727 +03:00 [INF] [Response] 404 - 22ms

2025-01-27 01:50:35.742 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 64.9815ms
2025-01-27 01:50:35.742 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 01:50:35.746 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 78.0302ms
2025-01-27 01:50:35.757 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 02:00:48.488 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-27 02:00:48.824 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-27 02:00:48.826 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-27 02:00:48.909 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-27 02:00:48.911 +03:00 [INF] Hosting environment: Development
2025-01-27 02:00:48.913 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-27 02:00:49.422 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-27 02:00:49.636 +03:00 [INF] [Request] GET /

2025-01-27 02:00:49.682 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 02:00:49.711 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 02:00:49.747 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 02:00:49.807 +03:00 [INF] Executed ViewResult - view Index executed in 65.9313ms.
2025-01-27 02:00:49.811 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 97.1832ms
2025-01-27 02:00:49.812 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 02:00:49.814 +03:00 [INF] [Response] 200 - 185ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Home - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
    

 <style>
    .instrument-name {
        margin-top: 10px; /* Add space between the image and the text */
        font-size: 16px; /* Adjust the text size */
        font-weight: bold; /* Bold text */
        text-align: center; /* Center the text */
    }
  </style>

<section class="category-section py-4">
    <div class="category-section">
        <h3 style="text-align: center; margin-bottom: 20px;">Start Shopping Here</h3>
        <div class="row">
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Guitars'">
                <img src="/Images/pavlo-t-5rEyYBPLN-w-unsplash.jpg" alt="Guitars" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Guitars</p>
            </div>
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Keyboards & Pianos'">
                <img src="/Images/pexels-mikhail-nilov-7570112.jpg" alt="Keyboards & Pianos" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Keyboards & Pianos</p>
            </div>
            <!-- Drums & Percussion -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Drums & Percussion'">
                <img src="/Images/pexels-reneterp-1327430.jpg" alt="Drums & Percussion" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Drums & Percussion</p>
            </div>
            <!-- Pro Audio -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Pro Audio'">
                <img src="/Images/pexels-everson-mayer-478307-1481312.jpg" alt="Pro Audio" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Pro Audio</p>
            </div>
            <!-- Band & Orchestra -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Band & Orchestra'">
                <img src="/Images/pexels-shottrotter-752535.jpg" alt="Band & Orchestra" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Band & Orchestra</p>
            </div>
            <!-- Accessories -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Accessories'">
                <img src="/Images/pexels-rombo-1510555-5280438.jpg" alt="Accessories" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Accessories</p>
            </div>
        </div>
    </div>
</section>


    <section class="membership-section text-center bg-dark text-white py-5">
    <div class="membership-section">
        <h2>Have no clue what to buy ?</h2>
        <p>Check out our professional guide to get the perfect suited instrument !</p>
        <form class="d-inline-flex mt-2" action="/Home/Guide" method="get">
            
            <button class="btn btn-danger" type="submit">professional Guide</button>
        </form>
        </div>
    </section>

    <section class="features-section py-5 bg-light">
            <div class="container">
            <div class="row text-center">
                <div class="col-md-3">
                    <img src="/Images/box.png" alt="Same Day Delivery" class="mb-sm-1" style="width: 40px; height: 40px;">
                    <h5>Same Day/Next Day Delivery</h5>
                    <p>Next day delivery on most orders in Jordan - Same day available</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/shopping-cart.png" alt="Biggest Selection" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Biggest Selection</h5>
                    <p>Largest collection of any store in MENA</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/user-talking-with-speech-bubble.png" alt="Top-notch Support" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Top-notch Support</h5>
                    <p>We are always happy to help in any way we can</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/secure-payment.png" alt="Secure Payments" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Secure Payments</h5>
                    <p>Cash on Delivery available</p>
                </div>
            </div>
            </div>
     </section>


    

    <!-- JavaScript to Toggle Forms -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.js"></script>


        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-27 02:00:49.880 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 464.7389ms
2025-01-27 02:00:49.914 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 02:00:49.918 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 02:00:49.918 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 02:00:49.923 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 02:00:49.950 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-27 02:00:49.946 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-27 02:00:49.955 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 37.599ms
2025-01-27 02:00:49.964 +03:00 [INF] [Response] 404 - 17ms

2025-01-27 02:00:49.964 +03:00 [INF] [Response] 404 - 17ms

2025-01-27 02:00:49.966 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 47.8079ms
2025-01-27 02:00:49.967 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 48.8402ms
2025-01-27 02:00:49.976 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 02:00:49.979 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 02:00:50.010 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 87.1695ms
2025-01-27 02:00:52.641 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Guide? - null null
2025-01-27 02:00:52.659 +03:00 [INF] [Request] GET /Home/Guide
[QueryString] ?

2025-01-27 02:00:52.662 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Guide (MyShop)'
2025-01-27 02:00:52.665 +03:00 [INF] Route matched with {action = "Guide", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Guide(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 02:00:52.709 +03:00 [INF] Executing ViewResult, running view Guide.
2025-01-27 02:00:52.717 +03:00 [INF] Executed ViewResult - view Guide executed in 8.3267ms.
2025-01-27 02:00:52.719 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Guide (MyShop) in 52.1966ms
2025-01-27 02:00:52.722 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Guide (MyShop)'
2025-01-27 02:00:52.726 +03:00 [INF] [Response] 200 - 66ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Guide - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
<style>

    .instruments-section h1 {
        font-size: 2.5rem;
        font-weight: bold;
        text-align: center;
    }

    .instruments-section p {
        font-size: 1.25rem;
        color: #555;
        text-align: center;
    }

    /* Black Line */
    hr.thick-black-line {
        border: none; /* Remove default borders */
        height: 5px; /* Set the height */
        background-color: black !important; /* Force black color */
        margin: 0 auto; /* Center it horizontally */
        width: 80%; /* Adjust width */
    }


    /* Dropdown Buttons Alignment */
    .instrument-buttons {
        display: flex;
        gap: 1rem; /* Add spacing between dropdown buttons */
        padding-left: 10%; /* Align dropdown buttons with the left edge of the line */
    }

        .instrument-buttons .dropdown {
            display: inline-block;
        }

        /* Styling for Buttons */
        .instrument-buttons .btn {
            font-size: 1rem;
            font-weight: bold;
            padding: 0.5rem 1.5rem;
        }

    /* Dropdown Menu Styling */
    .dropdown-menu {
        font-size: 1rem;
        text-align: left;
    }



</style>


<section class="instruments-section text-center py-5">
    <h1 class="mb-3">Instruments</h1>
    <p class="mb-4">
        Here, the SoundWave’s expert players guide you through the intricacies of the instruments they play.
        Choose an instrument from one of the sections.
    </p>
    <hr class="thick-black-line mb-4" />

    <!-- Dropdown Buttons -->
    <div class="instrument-buttons text-start">
        <!-- Dropdown for Instruments -->
        <div class="dropdown">
            <button class="btn btn-light border text-danger dropdown-toggle"
                    type="button"
                    id="instrumentDropdown"
                    data-bs-toggle="dropdown"
                    aria-expanded="false">
                Instruments
            </button>
            <ul class="dropdown-menu" aria-labelledby="instrumentDropdown">
                <li><a class="dropdown-item instrument-item" href="#">Guitars</a></li>
                <li><a class="dropdown-item instrument-item" href="#">Drums</a></li>
                <li><a class="dropdown-item instrument-item" href="#">Orchestra</a></li>
            </ul>
        </div>

        <!-- Dropdown for Level -->
        <div class="dropdown">
            <button class="btn btn-light border text-danger dropdown-toggle"
                    type="button"
                    id="levelDropdown"
                    data-bs-toggle="dropdown"
                    aria-expanded="false">
                Level
            </button>
            <ul class="dropdown-menu" aria-labelledby="levelDropdown">
                <li><a class="dropdown-item level-item" href="#">Beginner</a></li>
                <li><a class="dropdown-item level-item" href="#">Professional</a></li>
            </ul>
        </div>
    </div>
    
    <div id="card-container" class="d-flex justify-content-center gap-4 mt-5"></div>

</section>

<script>
    const instrumentDropdown = document.querySelectorAll('.instrument-item');
    const levelDropdown = document.querySelectorAll('.level-item');
    const cardContainer = document.getElementById('card-container');

    let selectedInstrument = '';
    let selectedLevel = '';

    const guitarsData = [
        {
            img: '/Images/guitar-4750599_1280.jpg',
            title: 'Acoustic Guitar',
            link: '#'
        },
        {
            img: '/Images/electric-guitar-7815026_1280.jpg',
            title: 'Electric Guitar',
            link: '#'
        },
        {
            img: '/Images/bass-guitar-913092_1280.jpg',
            title: 'Bass Guitar',
            link: '#'
        }
    ];

    const DrumsData = [
        {
            img: '/Images/african-2771092_1280.jpg',
            title: 'Hand Drums',
            link: '#'
        },
        {
            img: '/Images/electronic-drum-pad-5854409_1280.jpg',
            title: 'Electronic Drums',
            link: '#'
        },
        {
            img: '/Images/drum-set-1839383_1280.jpg',
            title: 'Acoustic Drums',
            link: '#'
        }
    ];

    const OrchestraData = [
        {
            img: '/Images/bowed-instrument-1853324_1280.jpg',
            title: 'Strings',
            link: '#'
        },
        {
            img: '/Images/saxophone-3246650_1280.jpg',
            title: 'Brass',
            link: '#'
        },
        
    ];

    instrumentDropdown.forEach(item => {
        item.addEventListener('click', function () {
            selectedInstrument = this.textContent.trim();
            checkSelection();
        });
    });

    levelDropdown.forEach(item => {
        item.addEventListener('click', function () {
            selectedLevel = this.textContent.trim();
            checkSelection();
        });
    });

    function checkSelection() {
        if (selectedInstrument === 'Guitars' && selectedLevel === 'Beginner') {
            renderCards(guitarsData);
        } 
        else if (selectedInstrument === 'Guitars' && selectedLevel === 'Professional') {
            renderCards(guitarsData);
        }
        else if (selectedInstrument === 'Drums' && (selectedLevel === 'Professional' || selectedLevel === 'Beginner')) {
            renderCards(DrumsData);

        }
        else if (selectedInstrument === 'Orchestra' && (selectedLevel === 'Professional' || selectedLevel === 'Beginner')) {
            renderCards(OrchestraData);

        }
        else {
            cardContainer.innerHTML = ''; // Clear cards
        }
    }

    function renderCards(data) {
        cardContainer.innerHTML = ''; // Clear previous cards

        data.forEach(item => {
            if (item.title.toLowerCase() === 'electric guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'electricguid'; // Set link to electricguid for Beginners
                } else {
                    item.link = 'proelectric'; // Set link to proelectric for other levels
                }
            } else if (item.title.toLowerCase() === 'acoustic guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'acousticpeg'; // Set link to acousticpeg for Beginners
                } else {
                    item.link = 'acousticpro'; // Set link to acousticpro for other levels
                }
            } else if (item.title.toLowerCase() === 'bass guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'bassbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'basspro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'hand drums') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'handbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'handpro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'electronic drums') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'delebeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'delepro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'acoustic drums') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'dacosticbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'dacousticpro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'strings') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'stringsbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'stringspro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'brass') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'brassbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'brasspro'; // Set link to basspro for other levels
                }
            } else {
                // Default case if no matches found
                item.link = 'default'; // Default link or other fallback
            }


            const card = document.createElement('div');
            card.classList.add('card');
            card.style.width = '22rem';
            card.style.textAlign = 'center';
            card.style.border = '1px solid #ddd';
            card.style.boxShadow = '0 4px 6px rgba(0, 0, 0, 0.1)';
            card.style.borderRadius = '8px';

            card.innerHTML = `
                    <img src="${item.img}" alt="${item.title}" style="width:100%;border-bottom:1px solid #ddd;">
                    <h5 style="font-size:1.25rem;font-weight:bold;margin:1rem 0;">${item.title}</h5>
                    <a href="${item.link}" class="btn btn-danger" style="margin-bottom:1rem;font-weight:bold;">Read more</a>
                `;
            cardContainer.appendChild(card);
            
            
        });
    }
</script>


<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-27 02:00:52.775 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Guide? - 200 null text/html; charset=utf-8 134.5339ms
2025-01-27 02:00:52.790 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 02:00:52.790 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 02:00:52.790 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 02:00:52.793 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 02:00:52.798 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-27 02:00:52.795 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-27 02:00:52.804 +03:00 [INF] [Response] 404 - 6ms

2025-01-27 02:00:52.805 +03:00 [INF] [Response] 404 - 9ms

2025-01-27 02:00:52.800 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 10.3957ms
2025-01-27 02:00:52.810 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 19.5401ms
2025-01-27 02:00:52.810 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 20.4848ms
2025-01-27 02:00:52.821 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 02:00:52.828 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 02:00:52.833 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 40.9574ms
2025-01-27 02:00:59.226 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/stringspro - null null
2025-01-27 02:00:59.233 +03:00 [INF] [Request] GET /Home/stringspro

2025-01-27 02:00:59.238 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.stringspro (MyShop)'
2025-01-27 02:00:59.242 +03:00 [INF] Route matched with {action = "stringspro", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult stringspro(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 02:00:59.244 +03:00 [INF] Executing ViewResult, running view stringspro.
2025-01-27 02:00:59.251 +03:00 [INF] Executed ViewResult - view stringspro executed in 7.7537ms.
2025-01-27 02:00:59.255 +03:00 [INF] Executed action MyShop.Controllers.HomeController.stringspro (MyShop) in 12.0337ms
2025-01-27 02:00:59.259 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.stringspro (MyShop)'
2025-01-27 02:00:59.260 +03:00 [INF] [Response] 200 - 26ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Professional Guide to Orchestra Strings - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
<style>
    /* General Styles */
    body {
        font-family: 'Roboto', sans-serif;
        margin: 0;
        padding: 0;
        background-color: #f4f4f4;
        color: #333;
        line-height: 1.6;
    }

    /* Header Phrase Styles */
    .header-phrase {
        background-color: #333; /* Black */
        color: #fff;
        padding: 20px;
        text-align: center;
    }

    .header-phrase h1 {
        margin: 0;
        font-size: 2.5rem;
    }

    /* Main Content Styles */
    main {
        padding: 20px;
        max-width: 1200px;
        margin: 0 auto;
    }

    section {
        margin-bottom: 40px;
    }

    h2 {
        color: #d32f2f; /* Red */
        border-bottom: 2px solid #d32f2f; /* Red */
        padding-bottom: 10px;
        margin-bottom: 20px;
    }

    .content-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 20px;
    }

    .content-card {
        background-color: #fff;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease;
    }

    .content-card:hover {
        transform: translateY(-5px);
    }

    .content-card img {
        width: 100%;
        height: 200px;
        object-fit: cover;
    }

    .content-card h3 {
        margin: 15px;
        color: #333;
    }

    .content-card p, .content-card ul {
        margin: 0 15px 15px;
        color: #555;
    }

    .content-card ul {
        list-style-type: disc;
        padding-left: 20px;
    }

    /* Footer Phrase Styles */
    .footer-phrase {
        background-color: #333; /* Black */
        color: #fff;
        text-align: center;
        padding: 15px;
        margin-top: 40px;
    }
</style>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Professional Guide to Orchestra Strings</title>
    <link rel="stylesheet" href="styles.css">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
</head>
<body>
    <!-- Header Phrase -->
    <div class="header-phrase">
        <h1>Professional Guide to Orchestra Strings</h1>
    </div>

    <!-- Main Content -->
    <main>
        <!-- Section 1: Mastering the Instruments -->
        <section class="instrument-guide">
            <h2>1. Mastering the Instruments</h2>
            <div class="content-grid">
                <div class="content-card">
                    <img src="/Images/violin-6708567_1280.jpg" alt="Violin">
                    <h3>Violin</h3>
                    <p>Refine your skills with advanced techniques like vibrato, harmonics, and intricate bowing patterns.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/instrument-3208416_1280.jpg" alt="Viola">
                    <h3>Viola</h3>
                    <p>Master the art of blending and leading with the viola, focusing on its rich midrange tones.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/cello-521172_1280.jpglt=" Cello">
                    <h3>Cello</h3>
                    <p>Develop advanced techniques such as thumb position and flawless legato phrasing on the cello.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/Double_Bass__In2.jpg" alt="Double Bass">
                    <h3>Double Bass</h3>
                    <p>Excel in orchestral and solo performances with advanced bowing techniques and fingerboard mastery.</p>
                </div>
            </div>
        </section>

        <!-- Section 2: Advanced Techniques -->
        <section class="advanced-techniques">
            <h2>2. Advanced Techniques</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>Bowing Artistry</h3>
                    <p>Master advanced bowing styles such as spiccato, sautillé, and ricochet for expressive performance.</p>
                </div>
                <div class="content-card">
                    <h3>Left-Hand Fluency</h3>
                    <p>Enhance dexterity with finger independence exercises and rapid shifting techniques.</p>
                </div>
                <div class="content-card">
                    <h3>Dynamic Control</h3>
                    <p>Achieve nuanced dynamics from pianissimo to fortissimo, adapting to the demands of any composition.</p>
                </div>
            </div>
        </section>

        <!-- Section 3: Instrument Care and Tuning -->
        <section class="maintenance-guide">
            <h2>3. Instrument Care and Tuning</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>String Selection</h3>
                    <p>Choose professional-grade strings tailored to your instrument and preferred tonal qualities.</p>
                </div>
                <div class="content-card">
                    <h3>Tuning Precision</h3>
                    <p>Utilize fine tuners and advanced tuning techniques to ensure pitch-perfect performance.</p>
                </div>
                <div class="content-card">
                    <h3>Maintaining Excellence</h3>
                    <p>Keep your instrument in peak condition with proper cleaning, bow rehairing, and climate control.</p>
                </div>
            </div>
        </section>

        <!-- Section 4: Recommended Professional Equipment -->
        <section class="recommended-equipment">
            <h2>4. Recommended Professional Equipment</h2>
            <div class="content-grid">
                <div class="content-card">
                    <img src="/Images/pro-violin.jpg" alt="Professional Violin">
                    <h3>Professional Violin</h3>
                    <p>A handcrafted violin with unmatched tonal richness and dynamic range.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/prem-cello.jpg" alt="Premium Cello">
                    <h3>Premium Cello</h3>
                    <p>A cello designed for concert-level performance, offering unparalleled sound clarity.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/bow.jpg" alt="Advanced Bow">
                    <h3>Advanced Bow</h3>
                    <p>An expertly balanced bow that enhances responsiveness and tonal expression.</p>
                </div>
            </div>
        </section>
    </main>

    <!-- Footer Phrase -->
    <div class="footer-phrase">
        <p>Elevate Your Orchestral Mastery with Professional Strings!</p>
    </div>
</body>
</html>

        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-27 02:00:59.299 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/stringspro - 200 null text/html; charset=utf-8 73.4766ms
2025-01-27 02:00:59.313 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/styles.css - null null
2025-01-27 02:00:59.317 +03:00 [INF] [Request] GET /Home/styles.css

2025-01-27 02:00:59.318 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/bow.jpg - null null
2025-01-27 02:00:59.317 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/prem-cello.jpg - null null
2025-01-27 02:00:59.317 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/cello-521172_1280.jpglt= - null null
2025-01-27 02:00:59.317 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/pro-violin.jpg - null null
2025-01-27 02:00:59.325 +03:00 [INF] [Response] 404 - 8ms

2025-01-27 02:00:59.317 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/violin-6708567_1280.jpg - null null
2025-01-27 02:00:59.317 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 02:00:59.327 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/instrument-3208416_1280.jpg - null null
2025-01-27 02:00:59.334 +03:00 [INF] [Request] GET /Images/cello-521172_1280.jpglt=

2025-01-27 02:00:59.327 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 02:00:59.349 +03:00 [INF] [Response] 404 - 14ms

2025-01-27 02:00:59.339 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/styles.css - 404 0 null 27.3314ms
2025-01-27 02:00:59.355 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/cello-521172_1280.jpglt= - 404 0 null 37.4773ms
2025-01-27 02:00:59.354 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-27 02:00:59.346 +03:00 [INF] The file /Images/violin-6708567_1280.jpg was not modified
2025-01-27 02:00:59.349 +03:00 [INF] The file /Images/instrument-3208416_1280.jpg was not modified
2025-01-27 02:00:59.359 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 02:00:59.359 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/Double_Bass__In2.jpg - null null
2025-01-27 02:00:59.359 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 02:00:59.362 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/Images/cello-521172_1280.jpglt=, Response status code: 404
2025-01-27 02:00:59.362 +03:00 [INF] [Response] 404 - 7ms

2025-01-27 02:00:59.375 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-27 02:00:59.371 +03:00 [INF] The file /Images/Double_Bass__In2.jpg was not modified
2025-01-27 02:00:59.379 +03:00 [INF] [Response] 404 - 3ms

2025-01-27 02:00:59.378 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 50.951ms
2025-01-27 02:00:59.370 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 52.8797ms
2025-01-27 02:00:59.360 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/Home/styles.css, Response status code: 404
2025-01-27 02:00:59.380 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 20.8153ms
2025-01-27 02:00:59.380 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/Double_Bass__In2.jpg - 304 null image/jpeg 20.1757ms
2025-01-27 02:00:59.384 +03:00 [INF] Sending file. Request path: '/Images/pro-violin.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\pro-violin.jpg'
2025-01-27 02:00:59.396 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 02:00:59.401 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/pro-violin.jpg - 200 29486 image/jpeg 84.1066ms
2025-01-27 02:00:59.383 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 02:00:59.393 +03:00 [INF] Sending file. Request path: '/Images/bow.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\bow.jpg'
2025-01-27 02:00:59.396 +03:00 [INF] Sending file. Request path: '/Images/prem-cello.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\prem-cello.jpg'
2025-01-27 02:00:59.363 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/violin-6708567_1280.jpg - 304 null image/jpeg 46.1945ms
2025-01-27 02:00:59.364 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/instrument-3208416_1280.jpg - 304 null image/jpeg 37.4973ms
2025-01-27 02:00:59.406 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 46.1143ms
2025-01-27 02:00:59.412 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/bow.jpg - 200 86435 image/jpeg 94.5703ms
2025-01-27 02:00:59.414 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/prem-cello.jpg - 200 141399 image/jpeg 97.0275ms
2025-01-27 02:01:28.852 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-27 02:01:29.203 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-27 02:01:29.204 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-27 02:01:29.292 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-27 02:01:29.293 +03:00 [INF] Hosting environment: Development
2025-01-27 02:01:29.294 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-27 02:01:29.647 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-27 02:01:29.862 +03:00 [INF] [Request] GET /

2025-01-27 02:01:29.908 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 02:01:29.927 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 02:01:29.961 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 02:01:30.047 +03:00 [INF] Executed ViewResult - view Index executed in 92.0116ms.
2025-01-27 02:01:30.052 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 119.5366ms
2025-01-27 02:01:30.053 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 02:01:30.055 +03:00 [INF] [Response] 200 - 199ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Home - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
    

 <style>
    .instrument-name {
        margin-top: 10px; /* Add space between the image and the text */
        font-size: 16px; /* Adjust the text size */
        font-weight: bold; /* Bold text */
        text-align: center; /* Center the text */
    }
  </style>

<section class="category-section py-4">
    <div class="category-section">
        <h3 style="text-align: center; margin-bottom: 20px;">Start Shopping Here</h3>
        <div class="row">
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Guitars'">
                <img src="/Images/pavlo-t-5rEyYBPLN-w-unsplash.jpg" alt="Guitars" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Guitars</p>
            </div>
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Keyboards & Pianos'">
                <img src="/Images/pexels-mikhail-nilov-7570112.jpg" alt="Keyboards & Pianos" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Keyboards & Pianos</p>
            </div>
            <!-- Drums & Percussion -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Drums & Percussion'">
                <img src="/Images/pexels-reneterp-1327430.jpg" alt="Drums & Percussion" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Drums & Percussion</p>
            </div>
            <!-- Pro Audio -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Pro Audio'">
                <img src="/Images/pexels-everson-mayer-478307-1481312.jpg" alt="Pro Audio" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Pro Audio</p>
            </div>
            <!-- Band & Orchestra -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Band & Orchestra'">
                <img src="/Images/pexels-shottrotter-752535.jpg" alt="Band & Orchestra" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Band & Orchestra</p>
            </div>
            <!-- Accessories -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Accessories'">
                <img src="/Images/pexels-rombo-1510555-5280438.jpg" alt="Accessories" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Accessories</p>
            </div>
        </div>
    </div>
</section>


    <section class="membership-section text-center bg-dark text-white py-5">
    <div class="membership-section">
        <h2>Have no clue what to buy ?</h2>
        <p>Check out our professional guide to get the perfect suited instrument !</p>
        <form class="d-inline-flex mt-2" action="/Home/Guide" method="get">
            
            <button class="btn btn-danger" type="submit">professional Guide</button>
        </form>
        </div>
    </section>

    <section class="features-section py-5 bg-light">
            <div class="container">
            <div class="row text-center">
                <div class="col-md-3">
                    <img src="/Images/box.png" alt="Same Day Delivery" class="mb-sm-1" style="width: 40px; height: 40px;">
                    <h5>Same Day/Next Day Delivery</h5>
                    <p>Next day delivery on most orders in Jordan - Same day available</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/shopping-cart.png" alt="Biggest Selection" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Biggest Selection</h5>
                    <p>Largest collection of any store in MENA</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/user-talking-with-speech-bubble.png" alt="Top-notch Support" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Top-notch Support</h5>
                    <p>We are always happy to help in any way we can</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/secure-payment.png" alt="Secure Payments" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Secure Payments</h5>
                    <p>Cash on Delivery available</p>
                </div>
            </div>
            </div>
     </section>


    

    <!-- JavaScript to Toggle Forms -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.js"></script>


        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-27 02:01:30.110 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 470.5996ms
2025-01-27 02:01:30.125 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 02:01:30.125 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 02:01:30.125 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 02:01:30.126 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 02:01:30.148 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 21.87ms
2025-01-27 02:01:30.151 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-27 02:01:30.153 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-27 02:01:30.164 +03:00 [INF] [Response] 404 - 10ms

2025-01-27 02:01:30.164 +03:00 [INF] [Response] 404 - 13ms

2025-01-27 02:01:30.167 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 42.6062ms
2025-01-27 02:01:30.168 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 43.2859ms
2025-01-27 02:01:30.172 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 02:01:30.174 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 02:01:30.197 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 72.0558ms
2025-01-27 02:01:32.536 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Guide? - null null
2025-01-27 02:01:32.547 +03:00 [INF] [Request] GET /Home/Guide
[QueryString] ?

2025-01-27 02:01:32.553 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Guide (MyShop)'
2025-01-27 02:01:32.556 +03:00 [INF] Route matched with {action = "Guide", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Guide(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 02:01:32.608 +03:00 [INF] Executing ViewResult, running view Guide.
2025-01-27 02:01:32.613 +03:00 [INF] Executed ViewResult - view Guide executed in 5.6768ms.
2025-01-27 02:01:32.615 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Guide (MyShop) in 56.4336ms
2025-01-27 02:01:32.617 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Guide (MyShop)'
2025-01-27 02:01:32.618 +03:00 [INF] [Response] 200 - 71ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Guide - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
<style>

    .instruments-section h1 {
        font-size: 2.5rem;
        font-weight: bold;
        text-align: center;
    }

    .instruments-section p {
        font-size: 1.25rem;
        color: #555;
        text-align: center;
    }

    /* Black Line */
    hr.thick-black-line {
        border: none; /* Remove default borders */
        height: 5px; /* Set the height */
        background-color: black !important; /* Force black color */
        margin: 0 auto; /* Center it horizontally */
        width: 80%; /* Adjust width */
    }


    /* Dropdown Buttons Alignment */
    .instrument-buttons {
        display: flex;
        gap: 1rem; /* Add spacing between dropdown buttons */
        padding-left: 10%; /* Align dropdown buttons with the left edge of the line */
    }

        .instrument-buttons .dropdown {
            display: inline-block;
        }

        /* Styling for Buttons */
        .instrument-buttons .btn {
            font-size: 1rem;
            font-weight: bold;
            padding: 0.5rem 1.5rem;
        }

    /* Dropdown Menu Styling */
    .dropdown-menu {
        font-size: 1rem;
        text-align: left;
    }



</style>


<section class="instruments-section text-center py-5">
    <h1 class="mb-3">Instruments</h1>
    <p class="mb-4">
        Here, the SoundWave’s expert players guide you through the intricacies of the instruments they play.
        Choose an instrument from one of the sections.
    </p>
    <hr class="thick-black-line mb-4" />

    <!-- Dropdown Buttons -->
    <div class="instrument-buttons text-start">
        <!-- Dropdown for Instruments -->
        <div class="dropdown">
            <button class="btn btn-light border text-danger dropdown-toggle"
                    type="button"
                    id="instrumentDropdown"
                    data-bs-toggle="dropdown"
                    aria-expanded="false">
                Instruments
            </button>
            <ul class="dropdown-menu" aria-labelledby="instrumentDropdown">
                <li><a class="dropdown-item instrument-item" href="#">Guitars</a></li>
                <li><a class="dropdown-item instrument-item" href="#">Drums</a></li>
                <li><a class="dropdown-item instrument-item" href="#">Orchestra</a></li>
            </ul>
        </div>

        <!-- Dropdown for Level -->
        <div class="dropdown">
            <button class="btn btn-light border text-danger dropdown-toggle"
                    type="button"
                    id="levelDropdown"
                    data-bs-toggle="dropdown"
                    aria-expanded="false">
                Level
            </button>
            <ul class="dropdown-menu" aria-labelledby="levelDropdown">
                <li><a class="dropdown-item level-item" href="#">Beginner</a></li>
                <li><a class="dropdown-item level-item" href="#">Professional</a></li>
            </ul>
        </div>
    </div>
    
    <div id="card-container" class="d-flex justify-content-center gap-4 mt-5"></div>

</section>

<script>
    const instrumentDropdown = document.querySelectorAll('.instrument-item');
    const levelDropdown = document.querySelectorAll('.level-item');
    const cardContainer = document.getElementById('card-container');

    let selectedInstrument = '';
    let selectedLevel = '';

    const guitarsData = [
        {
            img: '/Images/guitar-4750599_1280.jpg',
            title: 'Acoustic Guitar',
            link: '#'
        },
        {
            img: '/Images/electric-guitar-7815026_1280.jpg',
            title: 'Electric Guitar',
            link: '#'
        },
        {
            img: '/Images/bass-guitar-913092_1280.jpg',
            title: 'Bass Guitar',
            link: '#'
        }
    ];

    const DrumsData = [
        {
            img: '/Images/african-2771092_1280.jpg',
            title: 'Hand Drums',
            link: '#'
        },
        {
            img: '/Images/electronic-drum-pad-5854409_1280.jpg',
            title: 'Electronic Drums',
            link: '#'
        },
        {
            img: '/Images/drum-set-1839383_1280.jpg',
            title: 'Acoustic Drums',
            link: '#'
        }
    ];

    const OrchestraData = [
        {
            img: '/Images/bowed-instrument-1853324_1280.jpg',
            title: 'Strings',
            link: '#'
        },
        {
            img: '/Images/saxophone-3246650_1280.jpg',
            title: 'Brass',
            link: '#'
        },
        
    ];

    instrumentDropdown.forEach(item => {
        item.addEventListener('click', function () {
            selectedInstrument = this.textContent.trim();
            checkSelection();
        });
    });

    levelDropdown.forEach(item => {
        item.addEventListener('click', function () {
            selectedLevel = this.textContent.trim();
            checkSelection();
        });
    });

    function checkSelection() {
        if (selectedInstrument === 'Guitars' && selectedLevel === 'Beginner') {
            renderCards(guitarsData);
        } 
        else if (selectedInstrument === 'Guitars' && selectedLevel === 'Professional') {
            renderCards(guitarsData);
        }
        else if (selectedInstrument === 'Drums' && (selectedLevel === 'Professional' || selectedLevel === 'Beginner')) {
            renderCards(DrumsData);

        }
        else if (selectedInstrument === 'Orchestra' && (selectedLevel === 'Professional' || selectedLevel === 'Beginner')) {
            renderCards(OrchestraData);

        }
        else {
            cardContainer.innerHTML = ''; // Clear cards
        }
    }

    function renderCards(data) {
        cardContainer.innerHTML = ''; // Clear previous cards

        data.forEach(item => {
            if (item.title.toLowerCase() === 'electric guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'electricguid'; // Set link to electricguid for Beginners
                } else {
                    item.link = 'proelectric'; // Set link to proelectric for other levels
                }
            } else if (item.title.toLowerCase() === 'acoustic guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'acousticpeg'; // Set link to acousticpeg for Beginners
                } else {
                    item.link = 'acousticpro'; // Set link to acousticpro for other levels
                }
            } else if (item.title.toLowerCase() === 'bass guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'bassbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'basspro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'hand drums') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'handbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'handpro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'electronic drums') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'delebeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'delepro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'acoustic drums') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'dacosticbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'dacousticpro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'strings') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'stringsbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'stringspro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'brass') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'brassbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'brasspro'; // Set link to basspro for other levels
                }
            } else {
                // Default case if no matches found
                item.link = 'default'; // Default link or other fallback
            }


            const card = document.createElement('div');
            card.classList.add('card');
            card.style.width = '22rem';
            card.style.textAlign = 'center';
            card.style.border = '1px solid #ddd';
            card.style.boxShadow = '0 4px 6px rgba(0, 0, 0, 0.1)';
            card.style.borderRadius = '8px';

            card.innerHTML = `
                    <img src="${item.img}" alt="${item.title}" style="width:100%;border-bottom:1px solid #ddd;">
                    <h5 style="font-size:1.25rem;font-weight:bold;margin:1rem 0;">${item.title}</h5>
                    <a href="${item.link}" class="btn btn-danger" style="margin-bottom:1rem;font-weight:bold;">Read more</a>
                `;
            cardContainer.appendChild(card);
            
            
        });
    }
</script>


<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-27 02:01:32.661 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Guide? - 200 null text/html; charset=utf-8 124.898ms
2025-01-27 02:01:32.677 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 02:01:32.677 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 02:01:32.677 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 02:01:32.677 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 02:01:32.684 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-27 02:01:32.680 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-27 02:01:32.689 +03:00 [INF] [Response] 404 - 5ms

2025-01-27 02:01:32.687 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 10.6284ms
2025-01-27 02:01:32.694 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 17.0785ms
2025-01-27 02:01:32.691 +03:00 [INF] [Response] 404 - 11ms

2025-01-27 02:01:32.702 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 02:01:32.703 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 26.4981ms
2025-01-27 02:01:32.712 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 02:01:32.720 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 42.9277ms
2025-01-27 02:01:39.101 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/stringspro - null null
2025-01-27 02:01:39.108 +03:00 [INF] [Request] GET /Home/stringspro

2025-01-27 02:01:39.112 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.stringspro (MyShop)'
2025-01-27 02:01:39.115 +03:00 [INF] Route matched with {action = "stringspro", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult stringspro(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 02:01:39.120 +03:00 [INF] Executing ViewResult, running view stringspro.
2025-01-27 02:01:39.128 +03:00 [INF] Executed ViewResult - view stringspro executed in 8.8703ms.
2025-01-27 02:01:39.131 +03:00 [INF] Executed action MyShop.Controllers.HomeController.stringspro (MyShop) in 13.0731ms
2025-01-27 02:01:39.135 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.stringspro (MyShop)'
2025-01-27 02:01:39.137 +03:00 [INF] [Response] 200 - 28ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Professional Guide to Orchestra Strings - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
<style>
    /* General Styles */
    body {
        font-family: 'Roboto', sans-serif;
        margin: 0;
        padding: 0;
        background-color: #f4f4f4;
        color: #333;
        line-height: 1.6;
    }

    /* Header Phrase Styles */
    .header-phrase {
        background-color: #333; /* Black */
        color: #fff;
        padding: 20px;
        text-align: center;
    }

    .header-phrase h1 {
        margin: 0;
        font-size: 2.5rem;
    }

    /* Main Content Styles */
    main {
        padding: 20px;
        max-width: 1200px;
        margin: 0 auto;
    }

    section {
        margin-bottom: 40px;
    }

    h2 {
        color: #d32f2f; /* Red */
        border-bottom: 2px solid #d32f2f; /* Red */
        padding-bottom: 10px;
        margin-bottom: 20px;
    }

    .content-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 20px;
    }

    .content-card {
        background-color: #fff;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease;
    }

    .content-card:hover {
        transform: translateY(-5px);
    }

    .content-card img {
        width: 100%;
        height: 200px;
        object-fit: cover;
    }

    .content-card h3 {
        margin: 15px;
        color: #333;
    }

    .content-card p, .content-card ul {
        margin: 0 15px 15px;
        color: #555;
    }

    .content-card ul {
        list-style-type: disc;
        padding-left: 20px;
    }

    /* Footer Phrase Styles */
    .footer-phrase {
        background-color: #333; /* Black */
        color: #fff;
        text-align: center;
        padding: 15px;
        margin-top: 40px;
    }
</style>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Professional Guide to Orchestra Strings</title>
    <link rel="stylesheet" href="styles.css">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
</head>
<body>
    <!-- Header Phrase -->
    <div class="header-phrase">
        <h1>Professional Guide to Orchestra Strings</h1>
    </div>

    <!-- Main Content -->
    <main>
        <!-- Section 1: Mastering the Instruments -->
        <section class="instrument-guide">
            <h2>1. Mastering the Instruments</h2>
            <div class="content-grid">
                <div class="content-card">
                    <img src="/Images/violin-6708567_1280.jpg" alt="Violin">
                    <h3>Violin</h3>
                    <p>Refine your skills with advanced techniques like vibrato, harmonics, and intricate bowing patterns.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/instrument-3208416_1280.jpg" alt="Viola">
                    <h3>Viola</h3>
                    <p>Master the art of blending and leading with the viola, focusing on its rich midrange tones.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/cello-521172_1280.jpg" Cello">
                    <h3>Cello</h3>
                    <p>Develop advanced techniques such as thumb position and flawless legato phrasing on the cello.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/Double_Bass__In2.jpg" alt="Double Bass">
                    <h3>Double Bass</h3>
                    <p>Excel in orchestral and solo performances with advanced bowing techniques and fingerboard mastery.</p>
                </div>
            </div>
        </section>

        <!-- Section 2: Advanced Techniques -->
        <section class="advanced-techniques">
            <h2>2. Advanced Techniques</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>Bowing Artistry</h3>
                    <p>Master advanced bowing styles such as spiccato, sautillé, and ricochet for expressive performance.</p>
                </div>
                <div class="content-card">
                    <h3>Left-Hand Fluency</h3>
                    <p>Enhance dexterity with finger independence exercises and rapid shifting techniques.</p>
                </div>
                <div class="content-card">
                    <h3>Dynamic Control</h3>
                    <p>Achieve nuanced dynamics from pianissimo to fortissimo, adapting to the demands of any composition.</p>
                </div>
            </div>
        </section>

        <!-- Section 3: Instrument Care and Tuning -->
        <section class="maintenance-guide">
            <h2>3. Instrument Care and Tuning</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>String Selection</h3>
                    <p>Choose professional-grade strings tailored to your instrument and preferred tonal qualities.</p>
                </div>
                <div class="content-card">
                    <h3>Tuning Precision</h3>
                    <p>Utilize fine tuners and advanced tuning techniques to ensure pitch-perfect performance.</p>
                </div>
                <div class="content-card">
                    <h3>Maintaining Excellence</h3>
                    <p>Keep your instrument in peak condition with proper cleaning, bow rehairing, and climate control.</p>
                </div>
            </div>
        </section>

        <!-- Section 4: Recommended Professional Equipment -->
        <section class="recommended-equipment">
            <h2>4. Recommended Professional Equipment</h2>
            <div class="content-grid">
                <div class="content-card">
                    <img src="/Images/pro-violin.jpg" alt="Professional Violin">
                    <h3>Professional Violin</h3>
                    <p>A handcrafted violin with unmatched tonal richness and dynamic range.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/prem-cello.jpg" alt="Premium Cello">
                    <h3>Premium Cello</h3>
                    <p>A cello designed for concert-level performance, offering unparalleled sound clarity.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/bow.jpg" alt="Advanced Bow">
                    <h3>Advanced Bow</h3>
                    <p>An expertly balanced bow that enhances responsiveness and tonal expression.</p>
                </div>
            </div>
        </section>
    </main>

    <!-- Footer Phrase -->
    <div class="footer-phrase">
        <p>Elevate Your Orchestral Mastery with Professional Strings!</p>
    </div>
</body>
</html>

        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-27 02:01:39.179 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/stringspro - 200 null text/html; charset=utf-8 78.6662ms
2025-01-27 02:01:39.194 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/styles.css - null null
2025-01-27 02:01:39.198 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 02:01:39.201 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 02:01:39.202 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/pro-violin.jpg - null null
2025-01-27 02:01:39.201 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 02:01:39.202 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/cello-521172_1280.jpg - null null
2025-01-27 02:01:39.218 +03:00 [INF] The file /Images/pro-violin.jpg was not modified
2025-01-27 02:01:39.207 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/prem-cello.jpg - null null
2025-01-27 02:01:39.200 +03:00 [INF] [Request] GET /Home/styles.css

2025-01-27 02:01:39.209 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/bow.jpg - null null
2025-01-27 02:01:39.209 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 02:01:39.209 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 12.6258ms
2025-01-27 02:01:39.221 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/pro-violin.jpg - 304 null image/jpeg 19.5763ms
2025-01-27 02:01:39.217 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-27 02:01:39.218 +03:00 [INF] The file /Images/cello-521172_1280.jpg was not modified
2025-01-27 02:01:39.223 +03:00 [INF] The file /Images/prem-cello.jpg was not modified
2025-01-27 02:01:39.211 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-27 02:01:39.223 +03:00 [INF] [Response] 404 - 22ms

2025-01-27 02:01:39.225 +03:00 [INF] The file /Images/bow.jpg was not modified
2025-01-27 02:01:39.238 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 29.631ms
2025-01-27 02:01:39.239 +03:00 [INF] [Response] 404 - 22ms

2025-01-27 02:01:39.240 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/cello-521172_1280.jpg - 304 null image/jpeg 38.4952ms
2025-01-27 02:01:39.241 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/prem-cello.jpg - 304 null image/jpeg 33.6378ms
2025-01-27 02:01:39.241 +03:00 [INF] [Response] 404 - 30ms

2025-01-27 02:01:39.242 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/styles.css - 404 0 null 48.4584ms
2025-01-27 02:01:39.243 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/bow.jpg - 304 null image/jpeg 34.7173ms
2025-01-27 02:01:39.246 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 45.3681ms
2025-01-27 02:01:39.257 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 56.6533ms
2025-01-27 02:01:39.260 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/Home/styles.css, Response status code: 404
2025-01-27 02:01:39.269 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 02:01:39.272 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 02:14:31.225 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-27 02:14:31.471 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-27 02:14:31.474 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-27 02:14:31.541 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-27 02:14:31.544 +03:00 [INF] Hosting environment: Development
2025-01-27 02:14:31.545 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-27 02:14:32.138 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-27 02:14:32.340 +03:00 [INF] [Request] GET /

2025-01-27 02:14:32.380 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 02:14:32.405 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 02:14:32.433 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 02:14:32.490 +03:00 [INF] Executed ViewResult - view Index executed in 62.0003ms.
2025-01-27 02:14:32.494 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 86.0263ms
2025-01-27 02:14:32.495 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 02:14:32.497 +03:00 [INF] [Response] 200 - 165ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Home - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
    

 <style>
    .instrument-name {
        margin-top: 10px; /* Add space between the image and the text */
        font-size: 16px; /* Adjust the text size */
        font-weight: bold; /* Bold text */
        text-align: center; /* Center the text */
    }
  </style>

<section class="category-section py-4">
    <div class="category-section">
        <h3 style="text-align: center; margin-bottom: 20px;">Start Shopping Here</h3>
        <div class="row">
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Guitars'">
                <img src="/Images/pavlo-t-5rEyYBPLN-w-unsplash.jpg" alt="Guitars" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Guitars</p>
            </div>
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Keyboards & Pianos'">
                <img src="/Images/pexels-mikhail-nilov-7570112.jpg" alt="Keyboards & Pianos" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Keyboards & Pianos</p>
            </div>
            <!-- Drums & Percussion -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Drums & Percussion'">
                <img src="/Images/pexels-reneterp-1327430.jpg" alt="Drums & Percussion" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Drums & Percussion</p>
            </div>
            <!-- Pro Audio -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Pro Audio'">
                <img src="/Images/pexels-everson-mayer-478307-1481312.jpg" alt="Pro Audio" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Pro Audio</p>
            </div>
            <!-- Band & Orchestra -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Band & Orchestra'">
                <img src="/Images/pexels-shottrotter-752535.jpg" alt="Band & Orchestra" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Band & Orchestra</p>
            </div>
            <!-- Accessories -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Accessories'">
                <img src="/Images/pexels-rombo-1510555-5280438.jpg" alt="Accessories" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Accessories</p>
            </div>
        </div>
    </div>
</section>


    <section class="membership-section text-center bg-dark text-white py-5">
    <div class="membership-section">
        <h2>Have no clue what to buy ?</h2>
        <p>Check out our professional guide to get the perfect suited instrument !</p>
        <form class="d-inline-flex mt-2" action="/Home/Guide" method="get">
            
            <button class="btn btn-danger" type="submit">professional Guide</button>
        </form>
        </div>
    </section>

    <section class="features-section py-5 bg-light">
            <div class="container">
            <div class="row text-center">
                <div class="col-md-3">
                    <img src="/Images/box.png" alt="Same Day Delivery" class="mb-sm-1" style="width: 40px; height: 40px;">
                    <h5>Same Day/Next Day Delivery</h5>
                    <p>Next day delivery on most orders in Jordan - Same day available</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/shopping-cart.png" alt="Biggest Selection" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Biggest Selection</h5>
                    <p>Largest collection of any store in MENA</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/user-talking-with-speech-bubble.png" alt="Top-notch Support" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Top-notch Support</h5>
                    <p>We are always happy to help in any way we can</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/secure-payment.png" alt="Secure Payments" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Secure Payments</h5>
                    <p>Cash on Delivery available</p>
                </div>
            </div>
            </div>
     </section>


    

    <!-- JavaScript to Toggle Forms -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.js"></script>


        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-27 02:14:32.554 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 426.9335ms
2025-01-27 02:14:32.575 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 02:14:32.575 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 02:14:32.575 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 02:14:32.577 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 02:14:32.587 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-27 02:14:32.586 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-27 02:14:32.596 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 21.5296ms
2025-01-27 02:14:32.600 +03:00 [INF] [Response] 404 - 12ms

2025-01-27 02:14:32.600 +03:00 [INF] [Response] 404 - 14ms

2025-01-27 02:14:32.603 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 28.0484ms
2025-01-27 02:14:32.603 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 28.543ms
2025-01-27 02:14:32.607 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 02:14:32.610 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 02:14:32.647 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 70.1329ms
2025-01-27 02:14:34.992 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Guide? - null null
2025-01-27 02:14:35.006 +03:00 [INF] [Request] GET /Home/Guide
[QueryString] ?

2025-01-27 02:14:35.009 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Guide (MyShop)'
2025-01-27 02:14:35.012 +03:00 [INF] Route matched with {action = "Guide", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Guide(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 02:14:35.059 +03:00 [INF] Executing ViewResult, running view Guide.
2025-01-27 02:14:35.069 +03:00 [INF] Executed ViewResult - view Guide executed in 10.5761ms.
2025-01-27 02:14:35.071 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Guide (MyShop) in 57.8099ms
2025-01-27 02:14:35.072 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Guide (MyShop)'
2025-01-27 02:14:35.073 +03:00 [INF] [Response] 200 - 66ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Guide - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
<style>

    .instruments-section h1 {
        font-size: 2.5rem;
        font-weight: bold;
        text-align: center;
    }

    .instruments-section p {
        font-size: 1.25rem;
        color: #555;
        text-align: center;
    }

    /* Black Line */
    hr.thick-black-line {
        border: none; /* Remove default borders */
        height: 5px; /* Set the height */
        background-color: black !important; /* Force black color */
        margin: 0 auto; /* Center it horizontally */
        width: 80%; /* Adjust width */
    }


    /* Dropdown Buttons Alignment */
    .instrument-buttons {
        display: flex;
        gap: 1rem; /* Add spacing between dropdown buttons */
        padding-left: 10%; /* Align dropdown buttons with the left edge of the line */
    }

        .instrument-buttons .dropdown {
            display: inline-block;
        }

        /* Styling for Buttons */
        .instrument-buttons .btn {
            font-size: 1rem;
            font-weight: bold;
            padding: 0.5rem 1.5rem;
        }

    /* Dropdown Menu Styling */
    .dropdown-menu {
        font-size: 1rem;
        text-align: left;
    }



</style>


<section class="instruments-section text-center py-5">
    <h1 class="mb-3">Instruments</h1>
    <p class="mb-4">
        Here, the SoundWave’s expert players guide you through the intricacies of the instruments they play.
        Choose an instrument from one of the sections.
    </p>
    <hr class="thick-black-line mb-4" />

    <!-- Dropdown Buttons -->
    <div class="instrument-buttons text-start">
        <!-- Dropdown for Instruments -->
        <div class="dropdown">
            <button class="btn btn-light border text-danger dropdown-toggle"
                    type="button"
                    id="instrumentDropdown"
                    data-bs-toggle="dropdown"
                    aria-expanded="false">
                Instruments
            </button>
            <ul class="dropdown-menu" aria-labelledby="instrumentDropdown">
                <li><a class="dropdown-item instrument-item" href="#">Guitars</a></li>
                <li><a class="dropdown-item instrument-item" href="#">Drums</a></li>
                <li><a class="dropdown-item instrument-item" href="#">Orchestra</a></li>
            </ul>
        </div>

        <!-- Dropdown for Level -->
        <div class="dropdown">
            <button class="btn btn-light border text-danger dropdown-toggle"
                    type="button"
                    id="levelDropdown"
                    data-bs-toggle="dropdown"
                    aria-expanded="false">
                Level
            </button>
            <ul class="dropdown-menu" aria-labelledby="levelDropdown">
                <li><a class="dropdown-item level-item" href="#">Beginner</a></li>
                <li><a class="dropdown-item level-item" href="#">Professional</a></li>
            </ul>
        </div>
    </div>
    
    <div id="card-container" class="d-flex justify-content-center gap-4 mt-5"></div>

</section>

<script>
    const instrumentDropdown = document.querySelectorAll('.instrument-item');
    const levelDropdown = document.querySelectorAll('.level-item');
    const cardContainer = document.getElementById('card-container');

    let selectedInstrument = '';
    let selectedLevel = '';

    const guitarsData = [
        {
            img: '/Images/guitar-4750599_1280.jpg',
            title: 'Acoustic Guitar',
            link: '#'
        },
        {
            img: '/Images/electric-guitar-7815026_1280.jpg',
            title: 'Electric Guitar',
            link: '#'
        },
        {
            img: '/Images/bass-guitar-913092_1280.jpg',
            title: 'Bass Guitar',
            link: '#'
        }
    ];

    const DrumsData = [
        {
            img: '/Images/african-2771092_1280.jpg',
            title: 'Hand Drums',
            link: '#'
        },
        {
            img: '/Images/electronic-drum-pad-5854409_1280.jpg',
            title: 'Electronic Drums',
            link: '#'
        },
        {
            img: '/Images/drum-set-1839383_1280.jpg',
            title: 'Acoustic Drums',
            link: '#'
        }
    ];

    const OrchestraData = [
        {
            img: '/Images/bowed-instrument-1853324_1280.jpg',
            title: 'Strings',
            link: '#'
        },
        {
            img: '/Images/saxophone-3246650_1280.jpg',
            title: 'Brass',
            link: '#'
        },
        
    ];

    instrumentDropdown.forEach(item => {
        item.addEventListener('click', function () {
            selectedInstrument = this.textContent.trim();
            checkSelection();
        });
    });

    levelDropdown.forEach(item => {
        item.addEventListener('click', function () {
            selectedLevel = this.textContent.trim();
            checkSelection();
        });
    });

    function checkSelection() {
        if (selectedInstrument === 'Guitars' && selectedLevel === 'Beginner') {
            renderCards(guitarsData);
        } 
        else if (selectedInstrument === 'Guitars' && selectedLevel === 'Professional') {
            renderCards(guitarsData);
        }
        else if (selectedInstrument === 'Drums' && (selectedLevel === 'Professional' || selectedLevel === 'Beginner')) {
            renderCards(DrumsData);

        }
        else if (selectedInstrument === 'Orchestra' && (selectedLevel === 'Professional' || selectedLevel === 'Beginner')) {
            renderCards(OrchestraData);

        }
        else {
            cardContainer.innerHTML = ''; // Clear cards
        }
    }

    function renderCards(data) {
        cardContainer.innerHTML = ''; // Clear previous cards

        data.forEach(item => {
            if (item.title.toLowerCase() === 'electric guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'electricguid'; // Set link to electricguid for Beginners
                } else {
                    item.link = 'proelectric'; // Set link to proelectric for other levels
                }
            } else if (item.title.toLowerCase() === 'acoustic guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'acousticpeg'; // Set link to acousticpeg for Beginners
                } else {
                    item.link = 'acousticpro'; // Set link to acousticpro for other levels
                }
            } else if (item.title.toLowerCase() === 'bass guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'bassbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'basspro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'hand drums') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'handbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'handpro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'electronic drums') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'delebeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'delepro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'acoustic drums') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'dacosticbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'dacousticpro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'strings') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'stringsbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'stringspro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'brass') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'brassbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'brasspro'; // Set link to basspro for other levels
                }
            } else {
                // Default case if no matches found
                item.link = 'default'; // Default link or other fallback
            }


            const card = document.createElement('div');
            card.classList.add('card');
            card.style.width = '22rem';
            card.style.textAlign = 'center';
            card.style.border = '1px solid #ddd';
            card.style.boxShadow = '0 4px 6px rgba(0, 0, 0, 0.1)';
            card.style.borderRadius = '8px';

            card.innerHTML = `
                    <img src="${item.img}" alt="${item.title}" style="width:100%;border-bottom:1px solid #ddd;">
                    <h5 style="font-size:1.25rem;font-weight:bold;margin:1rem 0;">${item.title}</h5>
                    <a href="${item.link}" class="btn btn-danger" style="margin-bottom:1rem;font-weight:bold;">Read more</a>
                `;
            cardContainer.appendChild(card);
            
            
        });
    }
</script>


<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-27 02:14:35.125 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Guide? - 200 null text/html; charset=utf-8 133.669ms
2025-01-27 02:14:35.154 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 02:14:35.154 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 02:14:35.154 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 02:14:35.154 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 02:14:35.158 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-27 02:14:35.167 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 12.8166ms
2025-01-27 02:14:35.168 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-27 02:14:35.168 +03:00 [INF] [Response] 404 - 10ms

2025-01-27 02:14:35.174 +03:00 [INF] [Response] 404 - 5ms

2025-01-27 02:14:35.176 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 21.744ms
2025-01-27 02:14:35.177 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 22.9182ms
2025-01-27 02:14:35.190 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 02:14:35.197 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 42.7924ms
2025-01-27 02:14:35.197 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 02:14:42.072 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/brassbeg - null null
2025-01-27 02:14:42.079 +03:00 [INF] [Request] GET /Home/brassbeg

2025-01-27 02:14:42.086 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.brassbeg (MyShop)'
2025-01-27 02:14:42.089 +03:00 [INF] Route matched with {action = "brassbeg", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult brassbeg(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 02:14:42.091 +03:00 [INF] Executing ViewResult, running view brassbeg.
2025-01-27 02:14:42.102 +03:00 [INF] Executed ViewResult - view brassbeg executed in 11.352ms.
2025-01-27 02:14:42.104 +03:00 [INF] Executed action MyShop.Controllers.HomeController.brassbeg (MyShop) in 13.8585ms
2025-01-27 02:14:42.105 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.brassbeg (MyShop)'
2025-01-27 02:14:42.106 +03:00 [INF] [Response] 200 - 26ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Beginner&#x27;s Guide to Orchestra Brass - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
<style>
    /* General Styles */
    body {
        font-family: 'Roboto', sans-serif;
        margin: 0;
        padding: 0;
        background-color: #f4f4f4;
        color: #333;
        line-height: 1.6;
    }

    /* Header Phrase Styles */
    .header-phrase {
        background-color: #333; /* Black */
        color: #fff;
        padding: 20px;
        text-align: center;
    }

    .header-phrase h1 {
        margin: 0;
        font-size: 2.5rem;
    }

    /* Main Content Styles */
    main {
        padding: 20px;
        max-width: 1200px;
        margin: 0 auto;
    }

    section {
        margin-bottom: 40px;
    }

    h2 {
        color: #d32f2f; /* Red */
        border-bottom: 2px solid #d32f2f; /* Red */
        padding-bottom: 10px;
        margin-bottom: 20px;
    }

    .content-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 20px;
    }

    .content-card {
        background-color: #fff;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease;
    }

    .content-card:hover {
        transform: translateY(-5px);
    }

    .content-card img {
        width: 100%;
        height: 200px;
        object-fit: cover;
    }

    .content-card h3 {
        margin: 15px;
        color: #333;
    }

    .content-card p, .content-card ul {
        margin: 0 15px 15px;
        color: #555;
    }

    .content-card ul {
        list-style-type: disc;
        padding-left: 20px;
    }

    /* Footer Phrase Styles */
    .footer-phrase {
        background-color: #333; /* Black */
        color: #fff;
        text-align: center;
        padding: 15px;
        margin-top: 40px;
    }
</style>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Beginner's Guide to Orchestra Brass</title>
    <link rel="stylesheet" href="styles.css">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
</head>
<body>
    <!-- Header Phrase -->
    <div class="header-phrase">
        <h1>Beginner's Guide to Orchestra Brass</h1>
    </div>

    <!-- Main Content -->
    <main>
        <!-- Section 1: Introduction to Brass Instruments -->
        <section class="instrument-intro">
            <h2>1. Introduction to Brass Instruments</h2>
            <div class="content-grid">
                <div class="content-card">
                    <img src="/Images/trumpet-pb40.jpg" alt="Trumpet">
                    <h3>Trumpet</h3>
                    <p>Learn the basics of playing the trumpet, including posture, embouchure, and producing your first notes.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/trombone.jpg" alt="Trombone">
                    <h3>Trombone</h3>
                    <p>Understand how to use the slide to create smooth transitions and hit the right pitches on the trombone.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/French-Horn-Quickstart.jpg" alt="French Horn">
                    <h3>French Horn</h3>
                    <p>Explore the fundamentals of French horn playing, focusing on hand placement and tone control.</p>
                </div>
                
            </div>
        </section>

        <!-- Section 2: Basic Techniques -->
        <section class="basic-techniques">
            <h2>2. Basic Techniques</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>Breath Control</h3>
                    <p>Learn how to manage your breath efficiently to sustain long phrases and maintain a steady tone.</p>
                </div>
                <div class="content-card">
                    <h3>Embouchure Development</h3>
                    <p>Develop a strong and flexible embouchure for better control and tone production across all registers.</p>
                </div>
                <div class="content-card">
                    <h3>Articulation</h3>
                    <p>Practice basic articulation techniques such as tonguing and slurring to create clear and expressive notes.</p>
                </div>
            </div>
        </section>

        <!-- Section 3: Instrument Care -->
        <section class="instrument-care">
            <h2>3. Instrument Care</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>Cleaning and Maintenance</h3>
                    <p>Keep your brass instrument in top condition by regularly cleaning the mouthpiece, slides, and valves.</p>
                </div>
                <div class="content-card">
                    <h3>Proper Storage</h3>
                    <p>Learn how to store your instrument safely to prevent damage and ensure longevity.</p>
                </div>
                <div class="content-card">
                    <h3>Valve and Slide Care</h3>
                    <p>Use valve oil and slide grease to maintain smooth operation and prevent sticking.</p>
                </div>
            </div>
        </section>

        <!-- Section 4: Recommended Beginner Brass Instruments -->
        <section class="recommended-instruments">
            <h2>4. Recommended Beginner Brass Instruments</h2>
            <div class="content-grid">
                <div class="content-card">
                    <img src="/Images/beginner-trumpet.jpg" alt="Beginner Trumpet">
                    <h3>Beginner Trumpet</h3>
                    <p>An affordable and durable trumpet designed for new players with excellent tone and ease of play.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/beg-trombone.jpg" alt="Beginner Trombone">
                    <h3>Beginner Trombone</h3>
                    <p>A lightweight trombone that provides smooth slide action and reliable tuning for beginners.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/beg-french.jpg" alt="Beginner French Horn">
                    <h3>Beginner French Horn</h3>
                    <p>A French horn tailored for easy playability and tonal consistency, perfect for students.</p>
                </div>
            </div>
        </section>
    </main>

    <!-- Footer Phrase -->
    <div class="footer-phrase">
        <p>Embark on Your Brass Journey with Confidence!</p>
    </div>
</body>
</html>

        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-27 02:14:42.152 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/brassbeg - 200 null text/html; charset=utf-8 80.1328ms
2025-01-27 02:14:42.162 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/styles.css - null null
2025-01-27 02:14:42.168 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 02:14:42.169 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/beg-trombone.jpg - null null
2025-01-27 02:14:42.169 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/French-Horn-Quickstart.jpg - null null
2025-01-27 02:14:42.169 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/beginner-trumpet.jpg - null null
2025-01-27 02:14:42.168 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/trombone.jpg - null null
2025-01-27 02:14:42.170 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/beg-french.jpg - null null
2025-01-27 02:14:42.168 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/trumpet-pb40.jpg - null null
2025-01-27 02:14:42.170 +03:00 [INF] [Request] GET /Home/styles.css

2025-01-27 02:14:42.176 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 02:14:42.177 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 02:14:42.195 +03:00 [INF] [Response] 404 - 24ms

2025-01-27 02:14:42.203 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-27 02:14:42.207 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-27 02:14:42.207 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/styles.css - 404 0 null 46.233ms
2025-01-27 02:14:42.217 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 49.2229ms
2025-01-27 02:14:42.215 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 02:14:42.210 +03:00 [INF] [Response] 404 - 2ms

2025-01-27 02:14:42.218 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/Home/styles.css, Response status code: 404
2025-01-27 02:14:42.228 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 51.2368ms
2025-01-27 02:14:42.209 +03:00 [INF] [Response] 404 - 5ms

2025-01-27 02:14:42.244 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 02:14:42.249 +03:00 [INF] Sending file. Request path: '/Images/trumpet-pb40.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\trumpet-pb40.jpg'
2025-01-27 02:14:42.253 +03:00 [INF] Sending file. Request path: '/Images/trombone.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\trombone.jpg'
2025-01-27 02:14:42.254 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/trumpet-pb40.jpg - 200 45887 image/jpeg 86.4624ms
2025-01-27 02:14:42.256 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 42.8832ms
2025-01-27 02:14:42.256 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/trombone.jpg - 200 397458 image/jpeg 88.2391ms
2025-01-27 02:14:42.248 +03:00 [INF] Sending file. Request path: '/Images/beginner-trumpet.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\beginner-trumpet.jpg'
2025-01-27 02:14:42.248 +03:00 [INF] Sending file. Request path: '/Images/beg-french.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\beg-french.jpg'
2025-01-27 02:14:42.276 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/beginner-trumpet.jpg - 200 28326 image/jpeg 107.1696ms
2025-01-27 02:14:42.278 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/beg-french.jpg - 200 73625 image/jpeg 108.8059ms
2025-01-27 02:14:42.249 +03:00 [INF] Sending file. Request path: '/Images/beg-trombone.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\beg-trombone.jpg'
2025-01-27 02:14:42.246 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 70.3866ms
2025-01-27 02:14:42.288 +03:00 [INF] Sending file. Request path: '/Images/French-Horn-Quickstart.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\French-Horn-Quickstart.jpg'
2025-01-27 02:14:42.291 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/beg-trombone.jpg - 200 54860 image/jpeg 121.1984ms
2025-01-27 02:14:42.294 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 02:14:42.295 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/French-Horn-Quickstart.jpg - 200 1167207 image/jpeg 126.2627ms
2025-01-27 02:28:53.019 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-27 02:28:53.347 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-27 02:28:53.349 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-27 02:28:53.430 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-27 02:28:53.432 +03:00 [INF] Hosting environment: Development
2025-01-27 02:28:53.434 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-27 02:28:53.888 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-27 02:28:54.097 +03:00 [INF] [Request] GET /

2025-01-27 02:28:54.136 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 02:28:54.160 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 02:28:54.184 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 02:28:54.257 +03:00 [INF] Executed ViewResult - view Index executed in 76.1837ms.
2025-01-27 02:28:54.261 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 99.9303ms
2025-01-27 02:28:54.262 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 02:28:54.266 +03:00 [INF] [Response] 200 - 176ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Home - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
    

 <style>
    .instrument-name {
        margin-top: 10px; /* Add space between the image and the text */
        font-size: 16px; /* Adjust the text size */
        font-weight: bold; /* Bold text */
        text-align: center; /* Center the text */
    }
  </style>

<section class="category-section py-4">
    <div class="category-section">
        <h3 style="text-align: center; margin-bottom: 20px;">Start Shopping Here</h3>
        <div class="row">
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Guitars'">
                <img src="/Images/pavlo-t-5rEyYBPLN-w-unsplash.jpg" alt="Guitars" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Guitars</p>
            </div>
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Keyboards & Pianos'">
                <img src="/Images/pexels-mikhail-nilov-7570112.jpg" alt="Keyboards & Pianos" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Keyboards & Pianos</p>
            </div>
            <!-- Drums & Percussion -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Drums & Percussion'">
                <img src="/Images/pexels-reneterp-1327430.jpg" alt="Drums & Percussion" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Drums & Percussion</p>
            </div>
            <!-- Pro Audio -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Pro Audio'">
                <img src="/Images/pexels-everson-mayer-478307-1481312.jpg" alt="Pro Audio" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Pro Audio</p>
            </div>
            <!-- Band & Orchestra -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Band & Orchestra'">
                <img src="/Images/pexels-shottrotter-752535.jpg" alt="Band & Orchestra" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Band & Orchestra</p>
            </div>
            <!-- Accessories -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Accessories'">
                <img src="/Images/pexels-rombo-1510555-5280438.jpg" alt="Accessories" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Accessories</p>
            </div>
        </div>
    </div>
</section>


    <section class="membership-section text-center bg-dark text-white py-5">
    <div class="membership-section">
        <h2>Have no clue what to buy ?</h2>
        <p>Check out our professional guide to get the perfect suited instrument !</p>
        <form class="d-inline-flex mt-2" action="/Home/Guide" method="get">
            
            <button class="btn btn-danger" type="submit">professional Guide</button>
        </form>
        </div>
    </section>

    <section class="features-section py-5 bg-light">
            <div class="container">
            <div class="row text-center">
                <div class="col-md-3">
                    <img src="/Images/box.png" alt="Same Day Delivery" class="mb-sm-1" style="width: 40px; height: 40px;">
                    <h5>Same Day/Next Day Delivery</h5>
                    <p>Next day delivery on most orders in Jordan - Same day available</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/shopping-cart.png" alt="Biggest Selection" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Biggest Selection</h5>
                    <p>Largest collection of any store in MENA</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/user-talking-with-speech-bubble.png" alt="Top-notch Support" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Top-notch Support</h5>
                    <p>We are always happy to help in any way we can</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/secure-payment.png" alt="Secure Payments" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Secure Payments</h5>
                    <p>Cash on Delivery available</p>
                </div>
            </div>
            </div>
     </section>


    

    <!-- JavaScript to Toggle Forms -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.js"></script>


        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-27 02:28:54.325 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 445.9216ms
2025-01-27 02:28:54.352 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 02:28:54.353 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 02:28:54.353 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 02:28:54.372 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 19.8379ms
2025-01-27 02:28:54.357 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 02:28:54.382 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-27 02:28:54.384 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-27 02:28:54.392 +03:00 [INF] [Response] 404 - 9ms

2025-01-27 02:28:54.392 +03:00 [INF] [Response] 404 - 7ms

2025-01-27 02:28:54.394 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 41.0269ms
2025-01-27 02:28:54.395 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 41.4809ms
2025-01-27 02:28:54.399 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 02:28:54.401 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 02:28:54.433 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 77.1144ms
2025-01-27 02:28:57.296 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Guide? - null null
2025-01-27 02:28:57.309 +03:00 [INF] [Request] GET /Home/Guide
[QueryString] ?

2025-01-27 02:28:57.312 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Guide (MyShop)'
2025-01-27 02:28:57.315 +03:00 [INF] Route matched with {action = "Guide", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Guide(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 02:28:57.360 +03:00 [INF] Executing ViewResult, running view Guide.
2025-01-27 02:28:57.367 +03:00 [INF] Executed ViewResult - view Guide executed in 7.2175ms.
2025-01-27 02:28:57.369 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Guide (MyShop) in 52.5769ms
2025-01-27 02:28:57.370 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Guide (MyShop)'
2025-01-27 02:28:57.373 +03:00 [INF] [Response] 200 - 61ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Guide - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
<style>

    .instruments-section h1 {
        font-size: 2.5rem;
        font-weight: bold;
        text-align: center;
    }

    .instruments-section p {
        font-size: 1.25rem;
        color: #555;
        text-align: center;
    }

    /* Black Line */
    hr.thick-black-line {
        border: none; /* Remove default borders */
        height: 5px; /* Set the height */
        background-color: black !important; /* Force black color */
        margin: 0 auto; /* Center it horizontally */
        width: 80%; /* Adjust width */
    }


    /* Dropdown Buttons Alignment */
    .instrument-buttons {
        display: flex;
        gap: 1rem; /* Add spacing between dropdown buttons */
        padding-left: 10%; /* Align dropdown buttons with the left edge of the line */
    }

        .instrument-buttons .dropdown {
            display: inline-block;
        }

        /* Styling for Buttons */
        .instrument-buttons .btn {
            font-size: 1rem;
            font-weight: bold;
            padding: 0.5rem 1.5rem;
        }

    /* Dropdown Menu Styling */
    .dropdown-menu {
        font-size: 1rem;
        text-align: left;
    }



</style>


<section class="instruments-section text-center py-5">
    <h1 class="mb-3">Instruments</h1>
    <p class="mb-4">
        Here, the SoundWave’s expert players guide you through the intricacies of the instruments they play.
        Choose an instrument from one of the sections.
    </p>
    <hr class="thick-black-line mb-4" />

    <!-- Dropdown Buttons -->
    <div class="instrument-buttons text-start">
        <!-- Dropdown for Instruments -->
        <div class="dropdown">
            <button class="btn btn-light border text-danger dropdown-toggle"
                    type="button"
                    id="instrumentDropdown"
                    data-bs-toggle="dropdown"
                    aria-expanded="false">
                Instruments
            </button>
            <ul class="dropdown-menu" aria-labelledby="instrumentDropdown">
                <li><a class="dropdown-item instrument-item" href="#">Guitars</a></li>
                <li><a class="dropdown-item instrument-item" href="#">Drums</a></li>
                <li><a class="dropdown-item instrument-item" href="#">Orchestra</a></li>
            </ul>
        </div>

        <!-- Dropdown for Level -->
        <div class="dropdown">
            <button class="btn btn-light border text-danger dropdown-toggle"
                    type="button"
                    id="levelDropdown"
                    data-bs-toggle="dropdown"
                    aria-expanded="false">
                Level
            </button>
            <ul class="dropdown-menu" aria-labelledby="levelDropdown">
                <li><a class="dropdown-item level-item" href="#">Beginner</a></li>
                <li><a class="dropdown-item level-item" href="#">Professional</a></li>
            </ul>
        </div>
    </div>
    
    <div id="card-container" class="d-flex justify-content-center gap-4 mt-5"></div>

</section>

<script>
    const instrumentDropdown = document.querySelectorAll('.instrument-item');
    const levelDropdown = document.querySelectorAll('.level-item');
    const cardContainer = document.getElementById('card-container');

    let selectedInstrument = '';
    let selectedLevel = '';

    const guitarsData = [
        {
            img: '/Images/guitar-4750599_1280.jpg',
            title: 'Acoustic Guitar',
            link: '#'
        },
        {
            img: '/Images/electric-guitar-7815026_1280.jpg',
            title: 'Electric Guitar',
            link: '#'
        },
        {
            img: '/Images/bass-guitar-913092_1280.jpg',
            title: 'Bass Guitar',
            link: '#'
        }
    ];

    const DrumsData = [
        {
            img: '/Images/african-2771092_1280.jpg',
            title: 'Hand Drums',
            link: '#'
        },
        {
            img: '/Images/electronic-drum-pad-5854409_1280.jpg',
            title: 'Electronic Drums',
            link: '#'
        },
        {
            img: '/Images/drum-set-1839383_1280.jpg',
            title: 'Acoustic Drums',
            link: '#'
        }
    ];

    const OrchestraData = [
        {
            img: '/Images/bowed-instrument-1853324_1280.jpg',
            title: 'Strings',
            link: '#'
        },
        {
            img: '/Images/saxophone-3246650_1280.jpg',
            title: 'Brass',
            link: '#'
        },
        
    ];

    instrumentDropdown.forEach(item => {
        item.addEventListener('click', function () {
            selectedInstrument = this.textContent.trim();
            checkSelection();
        });
    });

    levelDropdown.forEach(item => {
        item.addEventListener('click', function () {
            selectedLevel = this.textContent.trim();
            checkSelection();
        });
    });

    function checkSelection() {
        if (selectedInstrument === 'Guitars' && selectedLevel === 'Beginner') {
            renderCards(guitarsData);
        } 
        else if (selectedInstrument === 'Guitars' && selectedLevel === 'Professional') {
            renderCards(guitarsData);
        }
        else if (selectedInstrument === 'Drums' && (selectedLevel === 'Professional' || selectedLevel === 'Beginner')) {
            renderCards(DrumsData);

        }
        else if (selectedInstrument === 'Orchestra' && (selectedLevel === 'Professional' || selectedLevel === 'Beginner')) {
            renderCards(OrchestraData);

        }
        else {
            cardContainer.innerHTML = ''; // Clear cards
        }
    }

    function renderCards(data) {
        cardContainer.innerHTML = ''; // Clear previous cards

        data.forEach(item => {
            if (item.title.toLowerCase() === 'electric guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'electricguid'; // Set link to electricguid for Beginners
                } else {
                    item.link = 'proelectric'; // Set link to proelectric for other levels
                }
            } else if (item.title.toLowerCase() === 'acoustic guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'acousticpeg'; // Set link to acousticpeg for Beginners
                } else {
                    item.link = 'acousticpro'; // Set link to acousticpro for other levels
                }
            } else if (item.title.toLowerCase() === 'bass guitar') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'bassbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'basspro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'hand drums') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'handbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'handpro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'electronic drums') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'delebeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'delepro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'acoustic drums') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'dacosticbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'dacousticpro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'strings') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'stringsbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'stringspro'; // Set link to basspro for other levels
                }
            } else if (item.title.toLowerCase() === 'brass') {
                if (selectedLevel.toLowerCase() === 'beginner') {
                    item.link = 'brassbeg'; // Set link to bassbeg for Beginners
                } else {
                    item.link = 'brasspro'; // Set link to basspro for other levels
                }
            } else {
                // Default case if no matches found
                item.link = 'default'; // Default link or other fallback
            }


            const card = document.createElement('div');
            card.classList.add('card');
            card.style.width = '22rem';
            card.style.textAlign = 'center';
            card.style.border = '1px solid #ddd';
            card.style.boxShadow = '0 4px 6px rgba(0, 0, 0, 0.1)';
            card.style.borderRadius = '8px';

            card.innerHTML = `
                    <img src="${item.img}" alt="${item.title}" style="width:100%;border-bottom:1px solid #ddd;">
                    <h5 style="font-size:1.25rem;font-weight:bold;margin:1rem 0;">${item.title}</h5>
                    <a href="${item.link}" class="btn btn-danger" style="margin-bottom:1rem;font-weight:bold;">Read more</a>
                `;
            cardContainer.appendChild(card);
            
            
        });
    }
</script>


<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-27 02:28:57.428 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Guide? - 200 null text/html; charset=utf-8 132.3393ms
2025-01-27 02:28:57.446 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 02:28:57.447 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 02:28:57.447 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 02:28:57.447 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 02:28:57.456 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-27 02:28:57.452 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 6.4839ms
2025-01-27 02:28:57.463 +03:00 [INF] [Response] 404 - 6ms

2025-01-27 02:28:57.464 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-27 02:28:57.467 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 19.6843ms
2025-01-27 02:28:57.467 +03:00 [INF] [Response] 404 - 2ms

2025-01-27 02:28:57.476 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 02:28:57.478 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 31.6567ms
2025-01-27 02:28:57.486 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 02:28:57.487 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 39.7168ms
2025-01-27 02:29:04.261 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/brasspro - null null
2025-01-27 02:29:04.269 +03:00 [INF] [Request] GET /Home/brasspro

2025-01-27 02:29:04.273 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.brasspro (MyShop)'
2025-01-27 02:29:04.277 +03:00 [INF] Route matched with {action = "brasspro", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult brasspro(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 02:29:04.279 +03:00 [INF] Executing ViewResult, running view brasspro.
2025-01-27 02:29:04.286 +03:00 [INF] Executed ViewResult - view brasspro executed in 6.8968ms.
2025-01-27 02:29:04.289 +03:00 [INF] Executed action MyShop.Controllers.HomeController.brasspro (MyShop) in 10.8558ms
2025-01-27 02:29:04.291 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.brasspro (MyShop)'
2025-01-27 02:29:04.293 +03:00 [INF] [Response] 200 - 23ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Professional&#x27;s Guide to Orchestra Brass - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
<style>
    /* General Styles */
    body {
        font-family: 'Roboto', sans-serif;
        margin: 0;
        padding: 0;
        background-color: #f4f4f4;
        color: #333;
        line-height: 1.6;
    }

    /* Header Phrase Styles */
    .header-phrase {
        background-color: #333; /* Black */
        color: #fff;
        padding: 20px;
        text-align: center;
    }

        .header-phrase h1 {
            margin: 0;
            font-size: 2.5rem;
        }

    /* Main Content Styles */
    main {
        padding: 20px;
        max-width: 1200px;
        margin: 0 auto;
    }

    section {
        margin-bottom: 40px;
    }

    h2 {
        color: #d32f2f; /* Red */
        border-bottom: 2px solid #d32f2f; /* Red */
        padding-bottom: 10px;
        margin-bottom: 20px;
    }

    .content-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 20px;
    }

    .content-card {
        background-color: #fff;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease;
    }

        .content-card:hover {
            transform: translateY(-5px);
        }

        .content-card img {
            width: 100%;
            height: 200px;
            object-fit: cover;
        }

        .content-card h3 {
            margin: 15px;
            color: #333;
        }

        .content-card p, .content-card ul {
            margin: 0 15px 15px;
            color: #555;
        }

        .content-card ul {
            list-style-type: disc;
            padding-left: 20px;
        }

    /* Footer Phrase Styles */
    .footer-phrase {
        background-color: #333; /* Black */
        color: #fff;
        text-align: center;
        padding: 15px;
        margin-top: 40px;
    }
</style>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Professional's Guide to Orchestra Brass</title>
    <link rel="stylesheet" href="styles.css">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
</head>
<body>
    <!-- Header Phrase -->
    <div class="header-phrase">
        <h1>Professional's Guide to Orchestra Brass</h1>
    </div>

    <!-- Main Content -->
    <main>
        <!-- Section 1: Advanced Brass Techniques -->
        <section class="advanced-techniques">
            <h2>1. Advanced Brass Techniques</h2>
            <div class="content-grid">
                <div class="content-card">
                    <img src="/Images/advanced-trumpet.jpg" alt="Advanced Trumpet">
                    <h3>Trumpet: Mastering High Notes</h3>
                    <p>To achieve clear and resonant high notes, focus on breath support, embouchure strength, and consistent practice with scales and arpeggios. Employ buzzing exercises to enhance lip flexibility and ensure a strong foundation for high-pitched playing.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/trombone-411035_1280.jpg" alt="Advanced Trombone">
                    <h3>Trombone: Advanced Slide Control</h3>
                    <p>Master precise slide positioning through daily exercises that emphasize muscle memory. Use a metronome to perfect timing in rapid shifts, and practice smooth legato transitions for seamless note connections.</p>
                </div>
                <div class="content-card">
                    <img src="/Images/pro-frenschhorn.jpg" alt="Professional French Horn">
                    <h3>French Horn: Complex Phrasing</h3>
                    <p>Enhance your musicality by practicing long tones with dynamic variations. Focus on breath control and articulation to achieve smooth, expressive phrasing that conveys emotional depth in your performances.</p>
                </div>
                
            </div>
        </section>

        <!-- Section 2: Professional Performance Skills -->
        <section class="performance-skills">
            <h2>2. Professional Performance Skills</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>Dynamic Range Mastery</h3>
                    <p>Practice crescendos and decrescendos across various dynamic levels. Incorporate etudes that challenge your control of soft passages and powerful climaxes, ensuring a wide expressive range in performances.</p>
                </div>
                <div class="content-card">
                    <h3>Blend and Balance</h3>
                    <p>Focus on listening to fellow musicians during rehearsals. Adjust your tone and volume to complement the brass section, ensuring a harmonious sound within the orchestra.</p>
                </div>
                <div class="content-card">
                    <h3>Improvisation in Brass</h3>
                    <p>For jazz or contemporary settings, practice scale modes, chord progressions, and rhythmic variations. Improvisation requires a deep understanding of musical theory and confidence in real-time creativity.</p>
                </div>
            </div>
        </section>

        <!-- Section 3: Maintenance for Professional Brass Instruments -->
        <section class="instrument-maintenance">
            <h2>3. Maintenance for Professional Brass Instruments</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>Precision Cleaning</h3>
                    <p>Disassemble your instrument periodically for thorough cleaning. Use cleaning brushes and cloths specifically designed for brass instruments to remove dirt and prevent corrosion.</p>
                </div>
                <div class="content-card">
                    <h3>Custom Modifications</h3>
                    <p>Consider custom modifications such as valve alignments or hand-engraving to enhance playability and personalize your instrument. Consult professional technicians for high-quality results.</p>
                </div>
                <div class="content-card">
                    <h3>Storage Solutions</h3>
                    <p>Store your instrument in a sturdy, well-padded case. Use a humidity-controlled environment to protect against extreme temperature changes and ensure longevity.</p>
                </div>
            </div>
        </section>

        <!-- Section 4: Recommended Professional Brass Instruments -->
        <section class="recommended-instruments">
            <h2>4. Recommended Professional Brass Instruments</h2>
            <div class="content-grid">
                <div class="content-card">
                    <h3>Professional Trumpet</h3>
                    <p>This trumpet offers superior craftsmanship, with precision-engineered valves and a rich tonal palette suitable for solo and ensemble performances.</p>
                </div>
                <div class="content-card">
                    <h3>Custom Trombone</h3>
                    <p>Featuring advanced slide mechanics and customizable tuning options, this trombone delivers unparalleled performance for experienced players.</p>
                </div>
                <div class="content-card">
                    <h3>Deluxe French Horn</h3>
                    <p>Handcrafted with precision, this French horn produces a warm, resonant sound. Its durable design ensures reliability in demanding orchestral settings.</p>
                </div>
            </div>
        </section>
    </main>

    <!-- Footer Phrase -->
    <div class="footer-phrase">
        <p>Elevate Your Brass Performance to the Professional Level!</p>
    </div>
</body>
</html>

        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-27 02:29:04.334 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/brasspro - 200 null text/html; charset=utf-8 73.6827ms
2025-01-27 02:29:04.349 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/styles.css - null null
2025-01-27 02:29:04.351 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 02:29:04.352 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 02:29:04.352 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 02:29:04.350 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/trombone-411035_1280.jpg - null null
2025-01-27 02:29:04.361 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-27 02:29:04.351 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/pro-frenschhorn.jpg - null null
2025-01-27 02:29:04.374 +03:00 [INF] [Response] 404 - 12ms

2025-01-27 02:29:04.352 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 02:29:04.380 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 28.558ms
2025-01-27 02:29:04.350 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/advanced-trumpet.jpg - null null
2025-01-27 02:29:04.355 +03:00 [INF] [Request] GET /Home/styles.css

2025-01-27 02:29:04.359 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 8.5582ms
2025-01-27 02:29:04.383 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 30.9648ms
2025-01-27 02:29:04.390 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 02:29:04.385 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-27 02:29:04.394 +03:00 [INF] [Response] 404 - 38ms

2025-01-27 02:29:04.406 +03:00 [INF] [Response] 404 - 20ms

2025-01-27 02:29:04.409 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/styles.css - 404 0 null 59.9687ms
2025-01-27 02:29:04.410 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 58.3366ms
2025-01-27 02:29:04.414 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/Home/styles.css, Response status code: 404
2025-01-27 02:29:04.418 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 02:29:04.430 +03:00 [INF] Sending file. Request path: '/Images/trombone-411035_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\trombone-411035_1280.jpg'
2025-01-27 02:29:04.430 +03:00 [INF] Sending file. Request path: '/Images/pro-frenschhorn.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\pro-frenschhorn.jpg'
2025-01-27 02:29:04.430 +03:00 [INF] Sending file. Request path: '/Images/advanced-trumpet.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\advanced-trumpet.jpg'
2025-01-27 02:29:04.432 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/trombone-411035_1280.jpg - 200 413070 image/jpeg 82.4554ms
2025-01-27 02:29:04.434 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/pro-frenschhorn.jpg - 200 223034 image/jpeg 82.8821ms
2025-01-27 02:29:04.435 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/advanced-trumpet.jpg - 200 122077 image/jpeg 84.7996ms
2025-01-27 02:29:30.405 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Index - null null
2025-01-27 02:29:30.428 +03:00 [INF] [Request] GET /Home/Index

2025-01-27 02:29:30.430 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 02:29:30.432 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 02:29:30.436 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 02:29:30.438 +03:00 [INF] Executed ViewResult - view Index executed in 1.9294ms.
2025-01-27 02:29:30.439 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 4.0609ms
2025-01-27 02:29:30.440 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 02:29:30.441 +03:00 [INF] [Response] 200 - 12ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Home - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
    

 <style>
    .instrument-name {
        margin-top: 10px; /* Add space between the image and the text */
        font-size: 16px; /* Adjust the text size */
        font-weight: bold; /* Bold text */
        text-align: center; /* Center the text */
    }
  </style>

<section class="category-section py-4">
    <div class="category-section">
        <h3 style="text-align: center; margin-bottom: 20px;">Start Shopping Here</h3>
        <div class="row">
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Guitars'">
                <img src="/Images/pavlo-t-5rEyYBPLN-w-unsplash.jpg" alt="Guitars" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Guitars</p>
            </div>
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Keyboards & Pianos'">
                <img src="/Images/pexels-mikhail-nilov-7570112.jpg" alt="Keyboards & Pianos" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Keyboards & Pianos</p>
            </div>
            <!-- Drums & Percussion -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Drums & Percussion'">
                <img src="/Images/pexels-reneterp-1327430.jpg" alt="Drums & Percussion" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Drums & Percussion</p>
            </div>
            <!-- Pro Audio -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Pro Audio'">
                <img src="/Images/pexels-everson-mayer-478307-1481312.jpg" alt="Pro Audio" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Pro Audio</p>
            </div>
            <!-- Band & Orchestra -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Band & Orchestra'">
                <img src="/Images/pexels-shottrotter-752535.jpg" alt="Band & Orchestra" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Band & Orchestra</p>
            </div>
            <!-- Accessories -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Accessories'">
                <img src="/Images/pexels-rombo-1510555-5280438.jpg" alt="Accessories" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Accessories</p>
            </div>
        </div>
    </div>
</section>


    <section class="membership-section text-center bg-dark text-white py-5">
    <div class="membership-section">
        <h2>Have no clue what to buy ?</h2>
        <p>Check out our professional guide to get the perfect suited instrument !</p>
        <form class="d-inline-flex mt-2" action="/Home/Guide" method="get">
            
            <button class="btn btn-danger" type="submit">professional Guide</button>
        </form>
        </div>
    </section>

    <section class="features-section py-5 bg-light">
            <div class="container">
            <div class="row text-center">
                <div class="col-md-3">
                    <img src="/Images/box.png" alt="Same Day Delivery" class="mb-sm-1" style="width: 40px; height: 40px;">
                    <h5>Same Day/Next Day Delivery</h5>
                    <p>Next day delivery on most orders in Jordan - Same day available</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/shopping-cart.png" alt="Biggest Selection" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Biggest Selection</h5>
                    <p>Largest collection of any store in MENA</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/user-talking-with-speech-bubble.png" alt="Top-notch Support" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Top-notch Support</h5>
                    <p>We are always happy to help in any way we can</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/secure-payment.png" alt="Secure Payments" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Secure Payments</h5>
                    <p>Cash on Delivery available</p>
                </div>
            </div>
            </div>
     </section>


    

    <!-- JavaScript to Toggle Forms -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.js"></script>


        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-27 02:29:30.477 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Index - 200 null text/html; charset=utf-8 71.2511ms
2025-01-27 02:29:30.491 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 02:29:30.494 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 02:29:30.492 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 02:29:30.492 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 02:29:30.514 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-27 02:29:30.517 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-27 02:29:30.500 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 8.9584ms
2025-01-27 02:29:30.520 +03:00 [INF] [Response] 404 - 5ms

2025-01-27 02:29:30.521 +03:00 [INF] [Response] 404 - 4ms

2025-01-27 02:29:30.540 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 48.1799ms
2025-01-27 02:29:30.541 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 49.4392ms
2025-01-27 02:29:30.545 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 51.3427ms
2025-01-27 02:29:30.547 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 02:29:30.551 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 10:21:24.682 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-27 10:21:25.009 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-27 10:21:25.012 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-27 10:21:25.113 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-27 10:21:25.115 +03:00 [INF] Hosting environment: Development
2025-01-27 10:21:25.117 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-27 10:21:26.876 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-27 10:21:27.127 +03:00 [INF] [Request] GET /

2025-01-27 10:21:27.175 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 10:21:27.217 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 10:21:27.256 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 10:21:27.397 +03:00 [INF] Executed ViewResult - view Index executed in 143.0124ms.
2025-01-27 10:21:27.405 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 184.775ms
2025-01-27 10:21:27.407 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 10:21:27.411 +03:00 [INF] [Response] 200 - 294ms
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Home - SoundWave</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Instruments Shop</title>

    <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    margin: 0;
                    padding: 0;
                    height: 100vh;
                }


                .container-fluid {
                    width: 100%;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                }

                .row {
                    margin-left: 0 !important;
                    margin-right: 0 !important;
                }

        .navbar-nav {
            display: flex;
            align-items: center; /* This ensures all items are vertically centered */
        }

        .nav-item {
            display: flex;
            align-items: center; /* Ensures that each item is vertically aligned */
        }
                .navbar {
                    background-color: #000;
                    padding: 1rem;
                    align-items: center;
                }

                .navbar-brand {
                    font-weight: bold;
                    color: #fff;
                    align-items: center;
                }

                .navbar .form-control {
                    flex-grow: 1;
                    align-items: center;
                }

                .navbar .btn-search {
                    background-color: #c3002f;
                    color: #fff;
                }

                .category-section {
                    
                    background-color: #f8f9fa;
                    padding-left: 0 !important;
                    padding-right: 0 !important;
                    width : 100%
                }

                    .category-section h3 {
                        text-align: center;
                        margin-bottom: 1.5rem;
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        width: 100%
                    }

                .category-item img {
                    width: 100px;
                    height: 100px;
                    border-radius: 50%;
                }

                .category-item {
                    text-align: center;
                }

                .membership-section {
                    background-color: #000;
                    color: #fff;
                    text-align: center;
                    
                }

                .footer {
                    background-color: #000;
                    color: #fff;
                    padding: 2rem 0;
                    width: 100%;
                }

                    .footer .column-title {
                        font-weight: bold;
                        margin-bottom: 1rem;
                    }

                    .footer a {
                        color: #fff;
                        text-decoration: none;
                    }

                        .footer a:hover {
                            text-decoration: underline;
                        }

                    .footer .subscribe-input {
                        flex-grow: 1;
                    }

                .feature {
                    text-align: center;
                    margin-top: 1rem;
                }

                    .feature img {
                        height: 40px;
                    }

                .instrument-name {
                    transition: transform 0.3s ease, color 0.3s ease;
                    font-weight: bold;
                    text-align: center;
                }

                    /* Hover effect: scale up and change color to red */
                    .instrument-name:hover {
                        transform: scale(1.2); /* Makes the text "pop out" */
                        color: red; /* Changes the text color to red */
                        cursor: pointer; /* Adds a pointer cursor on hover */
                    }

        .card {
            background-color: lightgrey;
        }

        .card-img-top {
            object-fit: contain;
            width: 100%;
            height: 80%; /* Adjust height automatically */
            background-color: white;
        }

        .container {
            display: flex;
            padding: 20px;
            position: relative;
        }

        .left {
            flex: 2;
            padding-right: 20px;
        }

            .left #product-images img {
                width: 100%;
                margin-bottom: 10px;
            }

        .right {
            flex: 1;
            position: sticky;
            top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
        }

            .right h1 {
                font-size: 1.5em;
            }

            .right p {
                margin: 10px 0;
            }

            .right button {
                width: 100%;
                padding: 10px;
                background: #444;
                color: #fff;
                border: none;
                cursor: pointer;
            }

                .right button:disabled {
                    background: #ccc;
                    cursor: not-allowed;
                }

        .description {
            padding: 20px;
            background: #fff;
            border-top: 1px solid #ddd;
        }

            .description h2 {
                margin-top: 0;
            }

        /* Modal container */
        .moddal {
            display: none; /* Hidden by default */
            position: fixed;
            top: 0;
            right: 0; /* Align the modal to the right */
            width: 400px; /* Fixed width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            z-index: 1000; /* Ensure it's above other content */
            overflow-y: auto; /* Enable scrolling for long content */
        }

        /* Modal content */
        .modal-Content {
            position: relative;
            height: 100%; /* Full height */
            background: #fff; /* Modal background */
            padding: 20px;
            border-radius: 10px 0 0 10px; /* Rounded corners on the left */
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
            font-family: Arial, sans-serif;
        }

        /* Close button */
        .close-btn {
            position: absolute;
            top: 15px;
            left: 15px; /* Align close button on the left of modal content */
            font-size: 18px;
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

            .cart-item img {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 10px;
            }

        .item-details {
            flex-grow: 1;
        }

        .item-name {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }

        .item-price {
            font-size: 14px;
            color: #777;
            margin: 5px 0;
        }

        .delete-icon {
            font-size: 18px;
            color: red;
            cursor: pointer;
            margin-left: 10px;
        }

        /* Free shipping message */
        .free-shipping-message {
            text-align: center;
            font-size: 14px;
            color: green;
            margin: 15px 0;
        }

        /* Checkout button */
        .checkout-btn {
            width: calc(100% - 40px); /* Full width with padding */
            padding: 12px;
            background-color: #b30000; /* Darker red background */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            text-align: center;
            position: absolute;
            bottom: 20px;
            left: 20px;
        }

            .checkout-btn:hover {
                background-color: #800000; /* Even darker red on hover */
            }

       
        .moddall {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            width: 100%;
            max-width: 400px; /* Adjust based on your design */
            height: auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

     </style>
   
</head>
<body> 
<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/Home/Index" style="display: inline-block; text-align: right;">
                <div style="position: relative;">
                    <span style="font-size: 1.5em;">
                    S<img src="/Images/audio-waves.png" alt="O" style="width: 0.9em; height: 0.9em; vertical-align: middle;">und<img src="/Images/sound (2).png" alt="W" style="width: 1.9em; height: 1.9em; vertical-align: middle;">ave
                    </span>
                </div>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <form class="d-flex ms-auto" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search..." aria-label="Search">
                    <button class="btn btn-search" type="submit">Search</button>
                </form>

            <ul class="navbar-nav ms-3">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByCategory" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Category
                    </a>
                      <ul class="dropdown-menu" aria-labelledby="shopByCategory" id="categoryDropdown">
                            <li><a class="dropdown-item" href="#" data-category="Guitars">Guitars</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Keyboards & Pianos">Keyboards & Pianos</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Drums & Percussion">Drums & Percussion</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Pro Audio">Pro Audio</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Band & Orchestra">Band & Orchestra</a></li>
                            <li><a class="dropdown-item" href="#" data-category="Accessories">Accessories</a></li>
                      </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="shopByBrand" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Shop by Brand
                    </a>
                        <ul class="dropdown-menu" aria-labelledby="shopByBrand" id="brandDropdown">
                            <li><a class="dropdown-item" href="#" data-brand="Yamaha">Yamaha</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Fender">Fender</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Gibson">Gibson</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Roland">Roland</a></li>
                            <li><a class="dropdown-item" href="#" data-brand="Casio">Casio</a></li>
                    </ul>
                </li>
                    <li class="nav-item" id="authNavItem">
                        <!-- Login/Signup or Username dynamically populated here -->
                    </li>
                <li class="nav-item">
                        <button class="nav-link text-white" onclick="openCartModal()" style="background: none; border: none; padding: 0;">
                            <img src="/Images/shopping-cart (1).png" alt="Cart" style="width: 50px; height: 50px;  margin-top: 2px;">
                    </button>>
                </li>
            </ul>
        </div>

            <div id="shoppingCartModal" class="moddal">
                <div class="modal-Content">
                    <span class="close-btn" onclick="closeModal()">&times;</span>
                    <h2>Your Cart</h2>
                    <div id="cartItems">
                        <!-- Cart items will be dynamically loaded here -->
                    </div>
                    <div class="free-shipping-message" id="freeShippingMessage" style="display: none;">
                        You are eligible for free shipping!
                    </div>
                    <button id="checkoutBtn" class="checkout-btn" onclick="redirectToPayment()">Checkout</button>
                </div>
            </div>



            <!-- Login/Signup Modal -->
            <div class="modal fade" id="loginSignupModal" tabindex="-1" aria-labelledby="loginSignupModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loginSignupModalLabel">Login to My Account</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Login Form -->
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="loginEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="loginPassword" placeholder="Enter your password">
                                </div>
                                <button type="submit" class="btn btn-danger w-100">Login</button>
                                <div class="form-switch-link">
                                    <p>Don't have an account? <a href="#" id="showSignupForm">Signup</a></p>
                                </div>
                            </form>

                            <!-- Signup Form (Hidden by Default) -->
                            <form id="signupForm" style="display: none;">
                                <div class="mb-3">
                                    <label for="signupEmail" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="signupEmail" placeholder="Enter your email">
                                </div>
                                <div class="mb-3">
                                    <label for="signupPassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="signupPassword" placeholder="Enter your password">
                                </div>
                                <div class="mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                </div>
                                <div class="mb-3">
                                    <label for="adress" class="form-label">Adress</label>
                                    <input type="text" class="form-control" id="adress" placeholder="Enter Your Adress">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="text" class="form-control" id="phone" placeholder="Enter Your Phone Number">
                                </div>

                                <button type="submit" class="btn btn-danger w-100">Signup</button>
                                <div class="form-switch-link">
                                    <p>Already have an account? <a href="#" id="showLoginForm">Login</a></p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        
    </nav>
</header>

    
    <div class="container-fluid">
        <main role="main" class="pb-3" style="min-height:600px">
            
    

 <style>
    .instrument-name {
        margin-top: 10px; /* Add space between the image and the text */
        font-size: 16px; /* Adjust the text size */
        font-weight: bold; /* Bold text */
        text-align: center; /* Center the text */
    }
  </style>

<section class="category-section py-4">
    <div class="category-section">
        <h3 style="text-align: center; margin-bottom: 20px;">Start Shopping Here</h3>
        <div class="row">
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Guitars'">
                <img src="/Images/pavlo-t-5rEyYBPLN-w-unsplash.jpg" alt="Guitars" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Guitars</p>
            </div>
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Keyboards & Pianos'">
                <img src="/Images/pexels-mikhail-nilov-7570112.jpg" alt="Keyboards & Pianos" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Keyboards & Pianos</p>
            </div>
            <!-- Drums & Percussion -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Drums & Percussion'">
                <img src="/Images/pexels-reneterp-1327430.jpg" alt="Drums & Percussion" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Drums & Percussion</p>
            </div>
            <!-- Pro Audio -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Pro Audio'">
                <img src="/Images/pexels-everson-mayer-478307-1481312.jpg" alt="Pro Audio" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Pro Audio</p>
            </div>
            <!-- Band & Orchestra -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Band & Orchestra'">
                <img src="/Images/pexels-shottrotter-752535.jpg" alt="Band & Orchestra" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Band & Orchestra</p>
            </div>
            <!-- Accessories -->
            <div class="col-md-2 category-item" style="text-align: center;" onclick="window.location.href='/Home/products?category=Accessories'">
                <img src="/Images/pexels-rombo-1510555-5280438.jpg" alt="Accessories" style="width: 200px; height: 200px; object-fit: cover;">
                <p class="instrument-name" style="margin-top: 10px; font-size: 16px; font-weight: bold;">Accessories</p>
            </div>
        </div>
    </div>
</section>


    <section class="membership-section text-center bg-dark text-white py-5">
    <div class="membership-section">
        <h2>Have no clue what to buy ?</h2>
        <p>Check out our professional guide to get the perfect suited instrument !</p>
        <form class="d-inline-flex mt-2" action="/Home/Guide" method="get">
            
            <button class="btn btn-danger" type="submit">professional Guide</button>
        </form>
        </div>
    </section>

    <section class="features-section py-5 bg-light">
            <div class="container">
            <div class="row text-center">
                <div class="col-md-3">
                    <img src="/Images/box.png" alt="Same Day Delivery" class="mb-sm-1" style="width: 40px; height: 40px;">
                    <h5>Same Day/Next Day Delivery</h5>
                    <p>Next day delivery on most orders in Jordan - Same day available</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/shopping-cart.png" alt="Biggest Selection" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Biggest Selection</h5>
                    <p>Largest collection of any store in MENA</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/user-talking-with-speech-bubble.png" alt="Top-notch Support" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Top-notch Support</h5>
                    <p>We are always happy to help in any way we can</p>
                </div>
                <div class="col-md-3">
                    <img src="/Images/secure-payment.png" alt="Secure Payments" class="mb-2" style="width: 40px; height: 40px;">
                    <h5>Secure Payments</h5>
                    <p>Cash on Delivery available</p>
                </div>
            </div>
            </div>
     </section>


    

    <!-- JavaScript to Toggle Forms -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.js"></script>


        </main>
    </div>
    
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/js/JavaScript.js?v=hRQyftXiu1lLX2P9Ly9xa4gHJgLeR1uGN5qegUobtGo"></script>
    
   
</body>

<footer>
    <div class="footer">

        <div class="row">
            <div class="col-md-4">
                <h5 class="column-title">About SoundWave</h5>
                <p>SoundWave is a professional dedicated online store for musical instruments and pro audio equipment in the MENA region.</p>
            </div>
            <div class="col-md-4">
                <h5 class="column-title">Information</h5>
                <ul class="list-unstyled">
                    <li><a href="/Home/About">About Us</a></li>
                    <li><a href="/Home/Contact">Contact Us</a></li>
                    <li><a href="/Home/Privacy">Privacy Policy</a></li>
                </ul>
            </div>

        </div>
    </div>
</footer>
</html>
<script>

    document.getElementById("searchForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get the user's input from the search box
        const searchInput = document.getElementById("searchInput").value;

        // Store the search input in local storage
        localStorage.setItem("searchQuery", searchInput);

        // Redirect to the search view
        window.location.href = '/Home/Search'; // Update this URL if needed
    });

    function redirectToPayment() {
        window.location.href = '/Home/Payment';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownItems = document.querySelectorAll('#categoryDropdown .dropdown-item');

        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected category to localStorage
                const categoryName = this.getAttribute('data-category');
                localStorage.setItem('selectedCategory', categoryName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchList';
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const brandItems = document.querySelectorAll('#brandDropdown .dropdown-item');

        brandItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();

                // Save the selected brand to localStorage
                const brandName = this.getAttribute('data-brand');
                localStorage.setItem('selectedBrand', brandName);

                // Redirect to the SearchList view
                window.location.href = '/Home/SearchBrand';
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("loginForm");
        const signupForm = document.getElementById("signupForm");
        const loginSignupModalLabel = document.getElementById("loginSignupModalLabel");
        const authNavItem = document.querySelector('.navbar-nav .nav-item:nth-last-child(2)'); // Login/Signup nav item

        // Function to update the navbar based on login state
        function updateNavbar() {
            const userInfo = JSON.parse(localStorage.getItem("userInfo"));

            if (authNavItem) {
                if (userInfo && userInfo.user.name) {
                    // Replace Login/Signup with user dropdown
                    authNavItem.innerHTML = `
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hey, ${userInfo.user.name}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#" id="logoutButton">Logout</a></li>
                            </ul>
                        </div>`;

                    // Add logout functionality dynamically
                    document.getElementById("logoutButton")?.addEventListener("click", handleLogout);
                } else {
                    // Default to Login/Signup
                    authNavItem.innerHTML = `
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginSignupModal">Login / Signup</a>`;
                }
            }
        }

        // Handle logout action
        function handleLogout() {
            localStorage.removeItem("userInfo");
            updateNavbar(); // Update navbar immediately
            alert("You have been logged out.");
        }
       

            document.getElementById("showSignupForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                loginForm.style.display = "none";
                signupForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Create an Account";
            });

            document.getElementById("showLoginForm").addEventListener("click", function (e) {
                e.preventDefault(); // Prevent default link behavior
                signupForm.style.display = "none";
                loginForm.style.display = "block";
                document.getElementById("loginSignupModalLabel").textContent = "Login to My Account";
            });
       


        // Handle login form submission
        loginForm?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const email = document.getElementById("loginEmail").value.trim();
            const password = document.getElementById("loginPassword").value.trim();

            if (!email || !password) {
                alert("Please enter both email and password.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7298/api/Authentication/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ email, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    localStorage.setItem("userInfo", JSON.stringify(result));
                    updateNavbar(); // Update navbar immediately
                    alert("Login successful!");
                    bootstrap.Modal.getInstance(document.getElementById("loginSignupModal"))?.hide();
                } else {
                    alert("Invalid email or password.");
                }
            } catch (error) {
                console.error("Error during login:", error);
                alert("An error occurred while logging in.");
            }
        });

        // Handle signup form submission
        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Collect input values
            const email = document.getElementById("signupEmail").value;
            const password = document.getElementById("signupPassword").value;
            const name = document.getElementById("name").value;
            const address = document.getElementById("adress").value;
            const phone = document.getElementById("phone").value;

            try {
                // Send POST request to the API
                const response = await fetch('https://localhost:7298/api/Authentication/login', { // Update the API endpoint if needed
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        Name: name,
                        Address: address,
                        Number: phone
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log("Signup successful:", result);

                    // Show a success message to the user
                    alert("Signup successful!.");

                    // Redirect to the home page or another desired page
                    document.getElementById("signupForm").style.display = "none";
                    document.getElementById("loginForm").style.display = "block";
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    console.error("Signup failed:", errorData);
                    alert("Signup failed. Please check your inputs and try again.");
                } else {
                    console.error("Signup failed with status:", response.status);
                    alert("An unexpected error occurred. Please try again later.");
                }
            } catch (error) {
                console.error("An error occurred:", error);
                alert("Unable to connect to the server. Please check your connection.");
            }
        });

        // Initial navbar setup
        updateNavbar();
    });
    function openCartModal() {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage
        if (userInfo && userInfo.user.id) {
            fetchCartItems(userInfo.user.id); // Fetch cart items using the user ID
        } else {
            alert("Please log in to view your cart.");
        }
    }

    // Close the shopping cart modal
    function closeModal() {
        document.getElementById("shoppingCartModal").style.display = "none";
    }



    // Fetch cart items from the API
    async function fetchCartItems(userId) {
        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/view", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId
                })
            });

            console.log("Response Status:", response.status);

            // Try to parse JSON even if there's an error
            let responseBody;
            try {
                responseBody = await response.json();
            } catch (jsonError) {
                console.error("Error parsing JSON:", jsonError);
                const text = await response.text();
                console.log("Response Text:", text);
                alert("Error: " + text); // Show plain text error message to the user
                return;
            }

            if (!response.ok) {
                throw new Error('Failed to fetch cart items');
            }

            displayCartItems(responseBody);
        } catch (error) {
            console.error("Error fetching cart items:", error);
            alert("Error fetching cart items.");
        }
    }

    // Display cart items in the modal
    function displayCartItems(cartItems) {
        const cartItemsContainer = document.getElementById("cartItems");
        cartItemsContainer.innerHTML = "";

        if (cartItems.length === 0) {
            cartItemsContainer.innerHTML = "<p>Your cart is empty.</p>";
        } else {
            cartItems.forEach(item => {
                const itemElement = document.createElement("div");
                itemElement.classList.add("cart-item");

                const imageFormat = item.imageFormat || 'jpeg'; // Fallback to 'jpeg' if format is not provided

                // Check if the imageData exists and handle accordingly
                const image = item.imageData ? `data:image/${imageFormat};base64,${item.imageData}`
                    : "/images/default-image.png";

                // Convert ImageData to a base64 string if it exists
                // const image = item.ImageData ? `data:image/png;base64,${btoa(String.fromCharCode.apply(null, new Uint8Array(item.ImageData)))}`
                //     : "/images/default-image.png";
                itemElement.innerHTML = `
                    <img src="${image}" alt="${item.name}" style="width: 50px; height: 50px;">
                    <p>${item.name}</p>
                    <p>Price: $${item.price}</p>
                    <p>Quantity: ${item.quantity}</p>
                        <button class="delete-icon" data-product="${item.name}" style="background: none; border: none; color: red; cursor: pointer;">
                        🗑️
                    </button>
                           
                `;

                const deleteButton = itemElement.querySelector(".delete-icon");
                deleteButton.addEventListener("click", () => deleteCartItem(item.name));

                cartItemsContainer.appendChild(itemElement);
            });
        }
        document.getElementById("shoppingCartModal").style.display = "block";
    }
    async function deleteCartItem(productName) {
        const userInfo = JSON.parse(localStorage.getItem("userInfo")); // Get user info from local storage

        if (!userInfo || !userInfo.user.id) {
            alert("Please log in to remove items from your cart.");
            return;
        }

        const userId = userInfo.user.id;

        try {
            const response = await fetch("https://localhost:7298/api/ShoppingCart/delete", {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    UserId: userId,
                    ProductName: productName
                })
            });

            if (response.ok) {
                alert("Item removed from the cart.");
                // Optionally, refresh the cart after deletion
                fetchCartItems(userId);
            } else {
                throw new Error("Failed to delete item from cart");
            }
        } catch (error) {
            console.error("Error deleting item:", error);
            alert("Error removing item from cart.");
        }
    }
</script>
2025-01-27 10:21:27.516 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 652.6144ms
2025-01-27 10:21:27.557 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 10:21:27.563 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 10:21:27.557 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/pexels-mikhail-nilov-7570112.jpg - null null
2025-01-27 10:21:27.557 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/pavlo-t-5rEyYBPLN-w-unsplash.jpg - null null
2025-01-27 10:21:27.580 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/user-talking-with-speech-bubble.png - null null
2025-01-27 10:21:27.557 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 10:21:27.566 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/pexels-everson-mayer-478307-1481312.jpg - null null
2025-01-27 10:21:27.574 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/pexels-shottrotter-752535.jpg - null null
2025-01-27 10:21:27.579 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/shopping-cart.png - null null
2025-01-27 10:21:27.586 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/box.png - null null
2025-01-27 10:21:27.589 +03:00 [INF] [Request] GET /lib/bootstrap/dist/js/bootstrap.js

2025-01-27 10:21:27.593 +03:00 [INF] The file /Images/pexels-mikhail-nilov-7570112.jpg was not modified
2025-01-27 10:21:27.593 +03:00 [INF] The file /Images/pavlo-t-5rEyYBPLN-w-unsplash.jpg was not modified
2025-01-27 10:21:27.605 +03:00 [INF] The file /Images/box.png was not modified
2025-01-27 10:21:27.593 +03:00 [INF] The file /Images/user-talking-with-speech-bubble.png was not modified
2025-01-27 10:21:27.594 +03:00 [INF] [Request] GET /lib/jquery/dist/jquery.js

2025-01-27 10:21:27.596 +03:00 [INF] The file /Images/pexels-everson-mayer-478307-1481312.jpg was not modified
2025-01-27 10:21:27.597 +03:00 [INF] The file /Images/pexels-shottrotter-752535.jpg was not modified
2025-01-27 10:21:27.601 +03:00 [INF] The file /Images/shopping-cart.png was not modified
2025-01-27 10:21:27.616 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/pexels-mikhail-nilov-7570112.jpg - 304 null image/jpeg 58.4374ms
2025-01-27 10:21:27.617 +03:00 [INF] [Response] 404 - 28ms

2025-01-27 10:21:27.620 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/pavlo-t-5rEyYBPLN-w-unsplash.jpg - 304 null image/jpeg 62.5354ms
2025-01-27 10:21:27.623 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/box.png - 304 null image/png 38.0508ms
2025-01-27 10:21:27.647 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 10:21:27.628 +03:00 [INF] [Response] 404 - 33ms

2025-01-27 10:21:27.630 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/pexels-everson-mayer-478307-1481312.jpg - 304 null image/jpeg 64.0904ms
2025-01-27 10:21:27.631 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/pexels-shottrotter-752535.jpg - 304 null image/jpeg 57.4476ms
2025-01-27 10:21:27.634 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/shopping-cart.png - 304 null image/png 54.2799ms
2025-01-27 10:21:27.641 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 82.9253ms
2025-01-27 10:21:27.640 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/pexels-reneterp-1327430.jpg - null null
2025-01-27 10:21:27.745 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 10:21:27.644 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/pexels-rombo-1510555-5280438.jpg - null null
2025-01-27 10:21:27.625 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/user-talking-with-speech-bubble.png - 304 null image/png 45.6115ms
2025-01-27 10:21:27.658 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 100.4989ms
2025-01-27 10:21:27.663 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/secure-payment.png - null null
2025-01-27 10:21:27.681 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 124.5945ms
2025-01-27 10:21:27.857 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 209.6673ms
2025-01-27 10:21:27.867 +03:00 [INF] The file /Images/pexels-reneterp-1327430.jpg was not modified
2025-01-27 10:21:27.874 +03:00 [INF] The file /Images/pexels-rombo-1510555-5280438.jpg was not modified
2025-01-27 10:21:27.903 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 10:21:27.907 +03:00 [INF] The file /Images/secure-payment.png was not modified
2025-01-27 10:21:27.914 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/pexels-reneterp-1327430.jpg - 304 null image/jpeg 274.0214ms
2025-01-27 10:21:27.915 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/pexels-rombo-1510555-5280438.jpg - 304 null image/jpeg 270.6301ms
2025-01-27 10:21:27.918 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/secure-payment.png - 304 null image/png 255.4562ms
2025-01-27 10:37:55.394 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7298/api/Products/createProduct - multipart/form-data; boundary=--------------------------312904381613525651959116 633922
2025-01-27 10:37:55.399 +03:00 [INF] [Request] POST /api/Products/createProduct

2025-01-27 10:37:55.489 +03:00 [ERR] An unhandled exception occurred.
System.InvalidOperationException: Endpoint MyShop.API.Controllers.ProductsController.CreateProduct (MyShop) contains authorization metadata, but a middleware was not found that supports authorization.
Configure your application startup by adding app.UseAuthorization() in the application startup code. If there are calls to app.UseRouting() and app.UseEndpoints(...), the call to app.UseAuthorization() must go between them.
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.ThrowMissingAuthMiddlewareException(Endpoint endpoint)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware.Invoke(HttpContext context)
   at GlobalExceptionHandlerMiddleware.InvokeAsync(HttpContext context) in C:\Users\user\Downloads\MyShop\MyShop\Middleware\GlobalExceptionHandlerMiddleware.cs:line 23
2025-01-27 10:37:55.535 +03:00 [INF] [Response] 500 - 136ms
{"StatusCode":500,"Message":"An unexpected error occurred. Please try again later.","Details":"Endpoint MyShop.API.Controllers.ProductsController.CreateProduct (MyShop) contains authorization metadata, but a middleware was not found that supports authorization.\r\nConfigure your application startup by adding app.UseAuthorization() in the application startup code. If there are calls to app.UseRouting() and app.UseEndpoints(...), the call to app.UseAuthorization() must go between them."}
2025-01-27 10:37:55.539 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7298/api/Products/createProduct - 500 null application/json 145.285ms
2025-01-27 10:37:55.549 +03:00 [INF] Connection id "0HN9UKCQK1CRK", Request id "0HN9UKCQK1CRK:00000001": the application completed without reading the entire request body.
2025-01-27 10:40:05.568 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-27 10:40:05.850 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-27 10:40:05.852 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-27 10:40:05.927 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-27 10:40:05.931 +03:00 [INF] Hosting environment: Development
2025-01-27 10:40:05.931 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-27 10:40:06.276 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-27 10:40:06.501 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 10:40:06.522 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 10:40:06.552 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 10:40:06.660 +03:00 [INF] Executed ViewResult - view Index executed in 106.9945ms.
2025-01-27 10:40:06.671 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 144.7917ms
2025-01-27 10:40:06.674 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 10:40:06.678 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 10:40:06.679 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 10:40:06.679 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 10:40:06.686 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 10:40:06.695 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 426.4884ms
2025-01-27 10:40:06.713 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 34.4166ms
2025-01-27 10:40:06.713 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 34.4728ms
2025-01-27 10:40:06.713 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 34.1728ms
2025-01-27 10:40:06.719 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 10:40:06.725 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 10:40:06.780 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 93.315ms
2025-01-27 10:40:33.782 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7298/api/Products/createProduct - multipart/form-data; boundary=--------------------------690667757717709665114113 633922
2025-01-27 10:40:33.795 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Endpoint MyShop.API.Controllers.ProductsController.CreateProduct (MyShop) contains authorization metadata, but a middleware was not found that supports authorization.
Configure your application startup by adding app.UseAuthorization() in the application startup code. If there are calls to app.UseRouting() and app.UseEndpoints(...), the call to app.UseAuthorization() must go between them.
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.ThrowMissingAuthMiddlewareException(Endpoint endpoint)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-01-27 10:40:33.824 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7298/api/Products/createProduct - 500 null text/plain; charset=utf-8 42.436ms
2025-01-27 10:40:33.831 +03:00 [INF] Connection id "0HN9UKN8MDIUD", Request id "0HN9UKN8MDIUD:00000001": the application completed without reading the entire request body.
2025-01-27 10:41:43.272 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-27 10:41:43.614 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-27 10:41:43.616 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-27 10:41:43.713 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-27 10:41:43.714 +03:00 [INF] Hosting environment: Development
2025-01-27 10:41:43.716 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-27 10:41:44.332 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-27 10:41:44.567 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 10:41:44.586 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 10:41:44.618 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 10:41:44.711 +03:00 [INF] Executed ViewResult - view Index executed in 96.9459ms.
2025-01-27 10:41:44.719 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 130.2046ms
2025-01-27 10:41:44.723 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 10:41:44.727 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 10:41:44.730 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 10:41:44.729 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 10:41:44.742 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 420.0836ms
2025-01-27 10:41:44.751 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 24.03ms
2025-01-27 10:41:44.751 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 24.183ms
2025-01-27 10:41:44.728 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 10:41:44.760 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 32.9475ms
2025-01-27 10:41:44.762 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 10:41:44.766 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 10:41:44.836 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 107.9863ms
2025-01-27 10:41:49.314 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7298/api/Products/createProduct - multipart/form-data; boundary=--------------------------305855305933343339020335 633922
2025-01-27 10:41:49.321 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.CreateProduct (MyShop)'
2025-01-27 10:41:49.339 +03:00 [INF] Route matched with {action = "CreateProduct", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ProductResponse]] CreateProduct(CreateProductCommand) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 10:41:51.082 +03:00 [INF] Executed DbCommand (44ms) [Parameters=[@__request_CategoryId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Name]
FROM [category] AS [c]
WHERE [c].[Id] = @__request_CategoryId_0
2025-01-27 10:41:51.306 +03:00 [INF] Executed DbCommand (16ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (DbType = Boolean), @p5='?' (Size = 4000), @p6='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Products] ([BrandId], [CtegoryId], [Description], [ImagePath], [IsPaid], [Name], [Price], [StockQuantity])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-01-27 10:41:51.337 +03:00 [INF] Executing OkObjectResult, writing value of type 'ProductResponse'.
2025-01-27 10:41:51.368 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.CreateProduct (MyShop) in 2027.3559ms
2025-01-27 10:41:51.370 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.CreateProduct (MyShop)'
2025-01-27 10:41:51.381 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7298/api/Products/createProduct - 200 null application/json; charset=utf-8 2067.5473ms
2025-01-27 10:44:45.552 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7298/api/Products/createProduct - multipart/form-data; boundary=--------------------------522058714333786910672347 163869
2025-01-27 10:44:45.558 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.CreateProduct (MyShop)'
2025-01-27 10:44:45.560 +03:00 [INF] Route matched with {action = "CreateProduct", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ProductResponse]] CreateProduct(CreateProductCommand) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 10:44:45.596 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__request_CategoryId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Name]
FROM [category] AS [c]
WHERE [c].[Id] = @__request_CategoryId_0
2025-01-27 10:44:45.619 +03:00 [INF] Executed DbCommand (14ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (DbType = Boolean), @p5='?' (Size = 4000), @p6='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Products] ([BrandId], [CtegoryId], [Description], [ImagePath], [IsPaid], [Name], [Price], [StockQuantity])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-01-27 10:44:45.624 +03:00 [INF] Executing OkObjectResult, writing value of type 'ProductResponse'.
2025-01-27 10:44:45.625 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.CreateProduct (MyShop) in 63.6357ms
2025-01-27 10:44:45.628 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.CreateProduct (MyShop)'
2025-01-27 10:44:45.629 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7298/api/Products/createProduct - 200 null application/json; charset=utf-8 77.2612ms
2025-01-27 10:49:04.945 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7298/api/Products/createProduct - multipart/form-data; boundary=--------------------------582846877084953742486475 227629
2025-01-27 10:49:04.949 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.CreateProduct (MyShop)'
2025-01-27 10:49:04.954 +03:00 [INF] Route matched with {action = "CreateProduct", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ProductResponse]] CreateProduct(CreateProductCommand) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 10:49:05.042 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__request_CategoryId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Name]
FROM [category] AS [c]
WHERE [c].[Id] = @__request_CategoryId_0
2025-01-27 10:49:05.053 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (DbType = Boolean), @p5='?' (Size = 4000), @p6='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Products] ([BrandId], [CtegoryId], [Description], [ImagePath], [IsPaid], [Name], [Price], [StockQuantity])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-01-27 10:49:05.057 +03:00 [INF] Executing OkObjectResult, writing value of type 'ProductResponse'.
2025-01-27 10:49:05.059 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.CreateProduct (MyShop) in 101.7403ms
2025-01-27 10:49:05.060 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.CreateProduct (MyShop)'
2025-01-27 10:49:05.062 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7298/api/Products/createProduct - 200 null application/json; charset=utf-8 116.5323ms
2025-01-27 10:55:33.330 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7298/api/Products/createProduct - multipart/form-data; boundary=--------------------------316186275470205362419614 107350
2025-01-27 10:55:33.334 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.CreateProduct (MyShop)'
2025-01-27 10:55:33.335 +03:00 [INF] Route matched with {action = "CreateProduct", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ProductResponse]] CreateProduct(CreateProductCommand) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 10:55:33.345 +03:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-01-27 10:55:33.363 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.CreateProduct (MyShop) in 24.8088ms
2025-01-27 10:55:33.365 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.CreateProduct (MyShop)'
2025-01-27 10:55:33.369 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7298/api/Products/createProduct - 400 null application/problem+json; charset=utf-8 39.0562ms
2025-01-27 10:55:50.862 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7298/api/Products/createProduct - multipart/form-data; boundary=--------------------------800632848409016084506061 107350
2025-01-27 10:55:50.866 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.CreateProduct (MyShop)'
2025-01-27 10:55:50.867 +03:00 [INF] Route matched with {action = "CreateProduct", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ProductResponse]] CreateProduct(CreateProductCommand) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 10:55:50.879 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__request_CategoryId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Name]
FROM [category] AS [c]
WHERE [c].[Id] = @__request_CategoryId_0
2025-01-27 10:55:50.905 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (DbType = Boolean), @p5='?' (Size = 4000), @p6='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Products] ([BrandId], [CtegoryId], [Description], [ImagePath], [IsPaid], [Name], [Price], [StockQuantity])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-01-27 10:55:50.909 +03:00 [INF] Executing OkObjectResult, writing value of type 'ProductResponse'.
2025-01-27 10:55:50.910 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.CreateProduct (MyShop) in 40.6737ms
2025-01-27 10:55:50.912 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.CreateProduct (MyShop)'
2025-01-27 10:55:50.913 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7298/api/Products/createProduct - 200 null application/json; charset=utf-8 50.974ms
2025-01-27 10:55:59.097 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/products?category=Keyboards%20&%20Pianos - null null
2025-01-27 10:55:59.113 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 10:55:59.116 +03:00 [INF] Route matched with {action = "Products", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Products(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 10:55:59.183 +03:00 [INF] Executing ViewResult, running view Products.
2025-01-27 10:55:59.210 +03:00 [INF] Executed ViewResult - view Products executed in 27.4372ms.
2025-01-27 10:55:59.213 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Products (MyShop) in 95.6196ms
2025-01-27 10:55:59.214 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 10:55:59.215 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/products?category=Keyboards%20&%20Pianos - 200 null text/html; charset=utf-8 118.884ms
2025-01-27 10:55:59.218 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 10:55:59.217 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 10:55:59.218 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 10:55:59.218 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 10:55:59.229 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 11.038ms
2025-01-27 10:55:59.231 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 14.1906ms
2025-01-27 10:55:59.248 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 10:55:59.265 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 10:55:59.235 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 17.8098ms
2025-01-27 10:55:59.250 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Keyboards  - null null
2025-01-27 10:55:59.281 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 10:55:59.283 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 64.6582ms
2025-01-27 10:55:59.289 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 10:55:59.368 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 10:55:59.374 +03:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-01-27 10:55:59.377 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 84.9831ms
2025-01-27 10:55:59.378 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 10:55:59.379 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Keyboards  - 404 null text/plain; charset=utf-8 130.2588ms
2025-01-27 10:56:16.904 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-27 10:56:17.272 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-27 10:56:17.273 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-27 10:56:17.392 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-27 10:56:17.394 +03:00 [INF] Hosting environment: Development
2025-01-27 10:56:17.394 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-27 10:56:17.924 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-27 10:56:18.140 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 10:56:18.160 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 10:56:18.193 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 10:56:18.280 +03:00 [INF] Executed ViewResult - view Index executed in 90.0957ms.
2025-01-27 10:56:18.290 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 126.8022ms
2025-01-27 10:56:18.292 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 10:56:18.314 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 407.9524ms
2025-01-27 10:56:18.315 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 10:56:18.315 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 10:56:18.315 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 10:56:18.315 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 10:56:18.345 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 29.8199ms
2025-01-27 10:56:18.345 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 30.0528ms
2025-01-27 10:56:18.358 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 41.2894ms
2025-01-27 10:56:18.360 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 10:56:18.362 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 10:56:18.397 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 81.5917ms
2025-01-27 10:56:21.081 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/products?category=Keyboards%20&%20Pianos - null null
2025-01-27 10:56:21.100 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 10:56:21.108 +03:00 [INF] Route matched with {action = "Products", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Products(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 10:56:21.159 +03:00 [INF] Executing ViewResult, running view Products.
2025-01-27 10:56:21.181 +03:00 [INF] Executed ViewResult - view Products executed in 22.1889ms.
2025-01-27 10:56:21.182 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Products (MyShop) in 70.3611ms
2025-01-27 10:56:21.184 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 10:56:21.185 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/products?category=Keyboards%20&%20Pianos - 200 null text/html; charset=utf-8 103.8248ms
2025-01-27 10:56:21.200 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 10:56:21.204 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 10:56:21.200 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 10:56:21.206 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 6.0347ms
2025-01-27 10:56:21.205 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 10:56:21.219 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 10:56:21.231 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Keyboards  - null null
2025-01-27 10:56:21.211 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 6.6622ms
2025-01-27 10:56:21.245 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 10:56:21.215 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 14.9136ms
2025-01-27 10:56:21.258 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 10:56:21.265 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 60.5408ms
2025-01-27 10:56:21.274 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 10:56:22.750 +03:00 [INF] Executed DbCommand (54ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 10:56:22.784 +03:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-01-27 10:56:22.789 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 1509.6223ms
2025-01-27 10:56:22.791 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 10:56:22.803 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Keyboards  - 404 null text/plain; charset=utf-8 1577.6671ms
2025-01-27 10:56:27.913 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 10:56:27.921 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 8.2836ms
2025-01-27 10:56:30.064 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/products?category=Drums%20&%20Percussion - null null
2025-01-27 10:56:30.083 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 10:56:30.086 +03:00 [INF] Route matched with {action = "Products", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Products(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 10:56:30.089 +03:00 [INF] Executing ViewResult, running view Products.
2025-01-27 10:56:30.094 +03:00 [INF] Executed ViewResult - view Products executed in 5.0717ms.
2025-01-27 10:56:30.095 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Products (MyShop) in 7.2148ms
2025-01-27 10:56:30.097 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 10:56:30.098 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/products?category=Drums%20&%20Percussion - 200 null text/html; charset=utf-8 34.5862ms
2025-01-27 10:56:30.109 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 10:56:30.109 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 10:56:30.109 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 10:56:30.109 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 10:56:30.123 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 14.1455ms
2025-01-27 10:56:30.127 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 17.8145ms
2025-01-27 10:56:30.130 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 10:56:30.112 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 3.4295ms
2025-01-27 10:56:30.133 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 24.1071ms
2025-01-27 10:56:30.133 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Drums  - null null
2025-01-27 10:56:30.135 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 10:56:30.152 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 10:56:30.155 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 10:56:30.189 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 10:56:30.191 +03:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-01-27 10:56:30.192 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 33.982ms
2025-01-27 10:56:30.194 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 10:56:30.195 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Drums  - 404 null text/plain; charset=utf-8 61.797ms
2025-01-27 10:56:32.418 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 10:56:32.425 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 6.6247ms
2025-01-27 10:56:34.882 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/products?category=Guitars - null null
2025-01-27 10:56:34.900 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 10:56:34.903 +03:00 [INF] Route matched with {action = "Products", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Products(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 10:56:34.904 +03:00 [INF] Executing ViewResult, running view Products.
2025-01-27 10:56:34.909 +03:00 [INF] Executed ViewResult - view Products executed in 4.5278ms.
2025-01-27 10:56:34.910 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Products (MyShop) in 5.6539ms
2025-01-27 10:56:34.911 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 10:56:34.911 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/products?category=Guitars - 200 null text/html; charset=utf-8 30.8046ms
2025-01-27 10:56:34.936 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 10:56:34.942 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 5.5781ms
2025-01-27 10:56:34.944 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 10:56:34.944 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 10:56:34.944 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 10:56:34.953 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 9.393ms
2025-01-27 10:56:34.949 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 10:56:34.967 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 10:56:34.961 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Guitars - null null
2025-01-27 10:56:34.956 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 12.0881ms
2025-01-27 10:56:34.977 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 33.4368ms
2025-01-27 10:56:34.979 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 10:56:34.991 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 10:56:35.057 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 10:56:35.139 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MyShop.API.Controllers.ProductDto, MyShop, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 10:56:35.159 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 166.3092ms
2025-01-27 10:56:35.161 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 10:56:35.162 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Guitars - 200 null application/json; charset=utf-8 200.9355ms
2025-01-27 10:56:35.167 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/c9ad9316-a2ed-4c7f-9d54-aa037c0e0ee2_jacek-dylag-71k2FbrLMjA-unsplash.jpg - null null
2025-01-27 10:56:35.168 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/f3e2c08e-5387-46c8-ba90-1eec605fd674_guitar-1022724_1280.jpg - null null
2025-01-27 10:56:35.168 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/2a74f05c-b6db-4f95-accc-fa55101a59cb_guitar-1024678_1280.jpg - null null
2025-01-27 10:56:35.168 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/0e412ced-462c-4f37-805a-2a1bb5d06668_fender-stratocaster-6738902_1280.jpg - null null
2025-01-27 10:56:35.168 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/3327c227-a0bc-453e-a4f8-0988ea626d8e_guitar-1022710_1280.jpg - null null
2025-01-27 10:56:35.167 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/aee43035-f2a4-44a1-9ac6-40fe53691a1a_pexels-philboakye-3428498.jpg - null null
2025-01-27 10:56:35.168 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/2a2337ff-a0cf-4fcf-9f90-a2a9cdfedf78_guitar-5543780_1280.jpg - null null
2025-01-27 10:56:35.168 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/b6fc6667-b586-4b61-ab4d-1f4de3969e7d_guitar-5543780_1280.jpg - null null
2025-01-27 10:56:35.183 +03:00 [INF] The file /images/c9ad9316-a2ed-4c7f-9d54-aa037c0e0ee2_jacek-dylag-71k2FbrLMjA-unsplash.jpg was not modified
2025-01-27 10:56:35.183 +03:00 [INF] The file /images/f3e2c08e-5387-46c8-ba90-1eec605fd674_guitar-1022724_1280.jpg was not modified
2025-01-27 10:56:35.183 +03:00 [INF] The file /images/2a74f05c-b6db-4f95-accc-fa55101a59cb_guitar-1024678_1280.jpg was not modified
2025-01-27 10:56:35.196 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/f3e2c08e-5387-46c8-ba90-1eec605fd674_guitar-1022724_1280.jpg - 304 null image/jpeg 27.3128ms
2025-01-27 10:56:35.185 +03:00 [INF] The file /images/0e412ced-462c-4f37-805a-2a1bb5d06668_fender-stratocaster-6738902_1280.jpg was not modified
2025-01-27 10:56:35.187 +03:00 [INF] The file /images/3327c227-a0bc-453e-a4f8-0988ea626d8e_guitar-1022710_1280.jpg was not modified
2025-01-27 10:56:35.195 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/c9ad9316-a2ed-4c7f-9d54-aa037c0e0ee2_jacek-dylag-71k2FbrLMjA-unsplash.jpg - 304 null image/jpeg 27.8669ms
2025-01-27 10:56:35.190 +03:00 [INF] The file /images/aee43035-f2a4-44a1-9ac6-40fe53691a1a_pexels-philboakye-3428498.jpg was not modified
2025-01-27 10:56:35.192 +03:00 [INF] The file /images/2a2337ff-a0cf-4fcf-9f90-a2a9cdfedf78_guitar-5543780_1280.jpg was not modified
2025-01-27 10:56:35.194 +03:00 [INF] The file /images/b6fc6667-b586-4b61-ab4d-1f4de3969e7d_guitar-5543780_1280.jpg was not modified
2025-01-27 10:56:35.204 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/2a74f05c-b6db-4f95-accc-fa55101a59cb_guitar-1024678_1280.jpg - 304 null image/jpeg 35.845ms
2025-01-27 10:56:35.208 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/0e412ced-462c-4f37-805a-2a1bb5d06668_fender-stratocaster-6738902_1280.jpg - 304 null image/jpeg 39.7728ms
2025-01-27 10:56:35.209 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/3327c227-a0bc-453e-a4f8-0988ea626d8e_guitar-1022710_1280.jpg - 304 null image/jpeg 40.7351ms
2025-01-27 10:56:35.213 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/aee43035-f2a4-44a1-9ac6-40fe53691a1a_pexels-philboakye-3428498.jpg - 304 null image/jpeg 46.4625ms
2025-01-27 10:56:35.215 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/2a2337ff-a0cf-4fcf-9f90-a2a9cdfedf78_guitar-5543780_1280.jpg - 304 null image/jpeg 47.8458ms
2025-01-27 10:56:35.217 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/b6fc6667-b586-4b61-ab4d-1f4de3969e7d_guitar-5543780_1280.jpg - 304 null image/jpeg 48.7409ms
2025-01-27 10:56:37.280 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 10:56:37.285 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 5.0983ms
2025-01-27 10:56:40.901 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/products?category=Guitars - null null
2025-01-27 10:56:40.910 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 10:56:40.914 +03:00 [INF] Route matched with {action = "Products", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Products(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 10:56:40.917 +03:00 [INF] Executing ViewResult, running view Products.
2025-01-27 10:56:40.922 +03:00 [INF] Executed ViewResult - view Products executed in 5.2325ms.
2025-01-27 10:56:40.923 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Products (MyShop) in 6.5809ms
2025-01-27 10:56:40.924 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 10:56:40.925 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/products?category=Guitars - 200 null text/html; charset=utf-8 24.0478ms
2025-01-27 10:56:40.932 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 10:56:40.938 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 10:56:40.939 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 7.3139ms
2025-01-27 10:56:40.938 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 10:56:40.945 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 10:56:40.938 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 10:56:40.949 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 11.3883ms
2025-01-27 10:56:40.950 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 11.8877ms
2025-01-27 10:56:40.954 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 16.0946ms
2025-01-27 10:56:40.960 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 10:56:40.963 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Guitars - null null
2025-01-27 10:56:40.970 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 10:56:40.972 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 10:56:40.983 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 10:56:40.989 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MyShop.API.Controllers.ProductDto, MyShop, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 10:56:40.991 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 16.6092ms
2025-01-27 10:56:40.992 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 10:56:40.993 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Guitars - 200 null application/json; charset=utf-8 31.0686ms
2025-01-27 10:56:43.236 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 10:56:43.242 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 5.6205ms
2025-01-27 11:00:37.345 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-27 11:00:37.708 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-27 11:00:37.710 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-27 11:00:37.829 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-27 11:00:37.830 +03:00 [INF] Hosting environment: Development
2025-01-27 11:00:37.831 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-27 11:00:38.360 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-27 11:00:38.622 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 11:00:38.649 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 11:00:38.684 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 11:00:38.791 +03:00 [INF] Executed ViewResult - view Index executed in 107.0274ms.
2025-01-27 11:00:38.799 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 146.332ms
2025-01-27 11:00:38.807 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 11:00:38.815 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 11:00:38.820 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 11:00:38.832 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 11:00:38.815 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 11:00:38.833 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 481.5154ms
2025-01-27 11:00:38.854 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 38.2609ms
2025-01-27 11:00:38.856 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 40.8047ms
2025-01-27 11:00:38.871 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 56.7221ms
2025-01-27 11:00:38.885 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 11:00:38.888 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 11:00:38.911 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 78.9183ms
2025-01-27 11:00:41.894 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/products?category=Keyboards%20&%20Pianos - null null
2025-01-27 11:00:41.906 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 11:00:41.909 +03:00 [INF] Route matched with {action = "Products", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Products(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 11:00:41.953 +03:00 [INF] Executing ViewResult, running view Products.
2025-01-27 11:00:41.974 +03:00 [INF] Executed ViewResult - view Products executed in 21.5872ms.
2025-01-27 11:00:41.976 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Products (MyShop) in 65.048ms
2025-01-27 11:00:41.977 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 11:00:41.978 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/products?category=Keyboards%20&%20Pianos - 200 null text/html; charset=utf-8 84.4938ms
2025-01-27 11:00:41.988 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 11:00:41.990 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 11:00:41.991 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 11:00:41.990 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 11:00:41.996 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 5.2759ms
2025-01-27 11:00:42.003 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 12.2998ms
2025-01-27 11:00:42.007 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 11:00:42.012 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Keyboards  - null null
2025-01-27 11:00:41.993 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 5.3715ms
2025-01-27 11:00:42.021 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 11:00:42.025 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 11:00:42.025 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 34.651ms
2025-01-27 11:00:42.041 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 11:00:43.501 +03:00 [INF] Executed DbCommand (52ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 11:00:43.537 +03:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-01-27 11:00:43.540 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 1495.7765ms
2025-01-27 11:00:43.542 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 11:00:43.553 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Keyboards  - 404 null text/plain; charset=utf-8 1542.2452ms
2025-01-27 11:00:50.629 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-27 11:00:50.637 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 11:00:50.639 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 11:00:50.642 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 11:00:50.651 +03:00 [INF] Executed ViewResult - view Index executed in 9.5595ms.
2025-01-27 11:00:50.654 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 13.3891ms
2025-01-27 11:00:50.655 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 11:00:50.657 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 28.2124ms
2025-01-27 11:00:50.687 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 11:00:50.689 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 11:00:50.693 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 5.7832ms
2025-01-27 11:00:50.694 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 11:00:50.696 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 7.1962ms
2025-01-27 11:00:50.698 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 11:00:50.704 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 10.176ms
2025-01-27 11:00:50.706 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 11:00:50.763 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 11:00:50.777 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 14.6589ms
2025-01-27 11:00:52.244 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Contact - null null
2025-01-27 11:00:52.256 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Contact (MyShop)'
2025-01-27 11:00:52.259 +03:00 [INF] Route matched with {action = "Contact", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Contact(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 11:00:52.268 +03:00 [INF] Executing ViewResult, running view Contact.
2025-01-27 11:00:52.325 +03:00 [INF] Executed ViewResult - view Contact executed in 57.1944ms.
2025-01-27 11:00:52.326 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Contact (MyShop) in 65.0355ms
2025-01-27 11:00:52.327 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Contact (MyShop)'
2025-01-27 11:00:52.329 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Contact - 200 null text/html; charset=utf-8 85.2841ms
2025-01-27 11:00:52.342 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 11:00:52.342 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 11:00:52.343 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 11:00:52.346 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 4.3563ms
2025-01-27 11:00:52.347 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 5.332ms
2025-01-27 11:00:52.350 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 6.424ms
2025-01-27 11:00:52.352 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 11:00:52.352 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 11:00:52.355 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 11:00:52.369 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 17.8101ms
2025-01-27 11:00:53.079 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/swagger/index.html - null null
2025-01-27 11:00:53.130 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/swagger/index.html - 200 null text/html;charset=utf-8 50.9671ms
2025-01-27 11:00:53.145 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/swagger/swagger-ui.css - null null
2025-01-27 11:00:53.145 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 11:00:53.145 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 11:00:53.145 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/swagger/swagger-ui-standalone-preset.js - null null
2025-01-27 11:00:53.160 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 15.2165ms
2025-01-27 11:00:53.165 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 20.3568ms
2025-01-27 11:00:53.145 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/swagger/swagger-ui-bundle.js - null null
2025-01-27 11:00:53.181 +03:00 [INF] Sending file. Request path: '/swagger-ui.css'. Physical path: 'N/A'
2025-01-27 11:00:53.184 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/swagger/swagger-ui.css - 200 143943 text/css 39.5037ms
2025-01-27 11:00:53.191 +03:00 [INF] Sending file. Request path: '/swagger-ui-standalone-preset.js'. Physical path: 'N/A'
2025-01-27 11:00:53.195 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/swagger/swagger-ui-standalone-preset.js - 200 339486 text/javascript 49.6527ms
2025-01-27 11:00:53.228 +03:00 [INF] Sending file. Request path: '/swagger-ui-bundle.js'. Physical path: 'N/A'
2025-01-27 11:00:53.231 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/swagger/swagger-ui-bundle.js - 200 1096145 text/javascript 86.4306ms
2025-01-27 11:00:53.419 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/swagger/v1/swagger.json - null null
2025-01-27 11:00:53.548 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 128.9777ms
2025-01-27 11:01:05.409 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Keyboards & Pianos - null null
2025-01-27 11:01:05.417 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 11:01:05.421 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 11:01:05.444 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 11:01:05.520 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MyShop.API.Controllers.ProductDto, MyShop, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 11:01:05.529 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 106.3081ms
2025-01-27 11:01:05.531 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 11:01:05.535 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Keyboards & Pianos - 200 null application/json; charset=utf-8 126.1832ms
2025-01-27 11:01:19.160 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Guitars - null null
2025-01-27 11:01:19.172 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 11:01:19.175 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 11:01:19.236 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 11:01:19.243 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MyShop.API.Controllers.ProductDto, MyShop, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 11:01:19.247 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 65.6878ms
2025-01-27 11:01:19.251 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 11:01:19.253 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Guitars - 200 null application/json; charset=utf-8 93.3459ms
2025-01-27 11:01:28.920 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Keyboards & Pianos - null null
2025-01-27 11:01:28.924 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 11:01:28.928 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 11:01:28.938 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 11:01:28.941 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MyShop.API.Controllers.ProductDto, MyShop, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 11:01:28.942 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 8.9848ms
2025-01-27 11:01:28.944 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 11:01:28.946 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Keyboards & Pianos - 200 null application/json; charset=utf-8 25.5424ms
2025-01-27 11:02:24.651 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-27 11:02:24.680 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 11:02:24.683 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 11:02:24.685 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 11:02:24.700 +03:00 [INF] Executed ViewResult - view Index executed in 15.5737ms.
2025-01-27 11:02:24.701 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 16.8712ms
2025-01-27 11:02:24.702 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 11:02:24.703 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 52.3804ms
2025-01-27 11:02:24.731 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 11:02:24.733 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 11:02:24.736 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 11:02:24.742 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 9.718ms
2025-01-27 11:02:24.746 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 9.3258ms
2025-01-27 11:02:24.735 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 4.8148ms
2025-01-27 11:02:24.753 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 11:02:24.758 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 11:02:24.811 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 11:02:24.824 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 12.8061ms
2025-01-27 11:02:32.964 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/home/Index - null null
2025-01-27 11:02:32.972 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 11:02:32.975 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 11:02:32.977 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 11:02:32.982 +03:00 [INF] Executed ViewResult - view Index executed in 4.744ms.
2025-01-27 11:02:32.983 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 6.3007ms
2025-01-27 11:02:32.987 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 11:02:32.990 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/home/Index - 200 null text/html; charset=utf-8 25.8602ms
2025-01-27 11:02:33.008 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 11:02:33.008 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 11:02:33.011 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 11:02:33.009 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 11:02:33.069 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 60.4358ms
2025-01-27 11:02:33.061 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 52.8575ms
2025-01-27 11:02:33.077 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 69.0214ms
2025-01-27 11:02:33.096 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 84.8199ms
2025-01-27 11:02:33.096 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 11:02:33.105 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 11:02:35.395 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/products?category=Keyboards%20&%20Pianos - null null
2025-01-27 11:02:35.407 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 11:02:35.410 +03:00 [INF] Route matched with {action = "Products", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Products(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 11:02:35.415 +03:00 [INF] Executing ViewResult, running view Products.
2025-01-27 11:02:35.428 +03:00 [INF] Executed ViewResult - view Products executed in 12.5032ms.
2025-01-27 11:02:35.431 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Products (MyShop) in 17.3612ms
2025-01-27 11:02:35.435 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 11:02:35.437 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/products?category=Keyboards%20&%20Pianos - 200 null text/html; charset=utf-8 42.6005ms
2025-01-27 11:02:35.951 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 11:02:35.954 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 11:02:35.954 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 11:02:35.955 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 11:02:35.962 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 7.8343ms
2025-01-27 11:02:35.965 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 10.902ms
2025-01-27 11:02:35.973 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 11:02:35.960 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 9.9138ms
2025-01-27 11:02:35.986 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 30.9244ms
2025-01-27 11:02:35.989 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 11:02:36.012 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Keyboards  - null null
2025-01-27 11:02:36.016 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 11:02:36.018 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 11:02:36.026 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 11:02:36.028 +03:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-01-27 11:02:36.030 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 9.5861ms
2025-01-27 11:02:36.031 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 11:02:36.032 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Keyboards  - 404 null text/plain; charset=utf-8 20.418ms
2025-01-27 11:03:47.351 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Keyboards  - null null
2025-01-27 11:03:47.367 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 11:03:47.369 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 11:03:47.375 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 11:03:47.383 +03:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-01-27 11:03:47.385 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 14.3717ms
2025-01-27 11:03:47.386 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 11:03:47.386 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Keyboards  - 404 null text/plain; charset=utf-8 35.4114ms
2025-01-27 11:05:04.399 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Keyboards  - null null
2025-01-27 11:05:04.412 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 11:05:04.414 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 11:05:04.422 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 11:05:04.425 +03:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-01-27 11:05:04.426 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 11.2987ms
2025-01-27 11:05:04.431 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 11:05:04.435 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Keyboards  - 404 null text/plain; charset=utf-8 36.0196ms
2025-01-27 11:07:10.477 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-27 11:07:10.750 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-27 11:07:10.752 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-27 11:07:10.863 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-27 11:07:10.865 +03:00 [INF] Hosting environment: Development
2025-01-27 11:07:10.866 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-27 11:07:11.056 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-27 11:07:11.279 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 11:07:11.296 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 11:07:11.330 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 11:07:11.416 +03:00 [INF] Executed ViewResult - view Index executed in 87.8487ms.
2025-01-27 11:07:11.426 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 123.6062ms
2025-01-27 11:07:11.428 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 11:07:11.431 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 11:07:11.434 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 11:07:11.431 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 11:07:11.431 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 11:07:11.491 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 442.3284ms
2025-01-27 11:07:11.499 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 67.721ms
2025-01-27 11:07:11.499 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 67.7612ms
2025-01-27 11:07:11.509 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 77.8216ms
2025-01-27 11:07:11.533 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 11:07:11.536 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 11:07:11.571 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 138.2769ms
2025-01-27 11:07:14.661 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/products?category=Keyboards%20%26%20Pianos - null null
2025-01-27 11:07:14.674 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 11:07:14.677 +03:00 [INF] Route matched with {action = "Products", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Products(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 11:07:14.723 +03:00 [INF] Executing ViewResult, running view Products.
2025-01-27 11:07:14.742 +03:00 [INF] Executed ViewResult - view Products executed in 19.493ms.
2025-01-27 11:07:14.744 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Products (MyShop) in 64.6199ms
2025-01-27 11:07:14.745 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 11:07:14.746 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/products?category=Keyboards%20%26%20Pianos - 200 null text/html; charset=utf-8 84.7749ms
2025-01-27 11:07:14.754 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 11:07:14.758 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 11:07:14.757 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 11:07:14.758 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 4.1487ms
2025-01-27 11:07:14.767 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 9.9428ms
2025-01-27 11:07:14.769 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 11:07:14.758 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 11:07:14.781 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 23.5827ms
2025-01-27 11:07:14.786 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 11:07:14.787 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 29.8746ms
2025-01-27 11:07:14.790 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Keyboards & Pianos - null null
2025-01-27 11:07:14.797 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 11:07:14.810 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 11:07:16.211 +03:00 [INF] Executed DbCommand (52ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 11:07:16.338 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MyShop.API.Controllers.ProductDto, MyShop, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 11:07:16.354 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 1541.4177ms
2025-01-27 11:07:16.356 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 11:07:16.361 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/c584c8c6-467e-49bb-a019-f2a9e425cd48_Roland-GO_KEYS61.jpg - null null
2025-01-27 11:07:16.361 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/e15076e0-5127-4d1b-9306-2096f88005f2_PX-S1100 (1).jpg - null null
2025-01-27 11:07:16.361 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/a2ce68fd-95e9-4754-a64d-8adb7db3fe03_e373.jpg - null null
2025-01-27 11:07:16.361 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/6ed18e30-061b-41a1-9501-c0d44bd66df5_rp701_photo_02 (1).jpg - null null
2025-01-27 11:07:16.369 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Keyboards & Pianos - 200 null application/json; charset=utf-8 1579.9992ms
2025-01-27 11:07:16.412 +03:00 [INF] Sending file. Request path: '/images/e15076e0-5127-4d1b-9306-2096f88005f2_PX-S1100 (1).jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\e15076e0-5127-4d1b-9306-2096f88005f2_PX-S1100 (1).jpg'
2025-01-27 11:07:16.416 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/e15076e0-5127-4d1b-9306-2096f88005f2_PX-S1100 (1).jpg - 200 105791 image/jpeg 53.7775ms
2025-01-27 11:07:16.420 +03:00 [INF] Sending file. Request path: '/images/c584c8c6-467e-49bb-a019-f2a9e425cd48_Roland-GO_KEYS61.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\c584c8c6-467e-49bb-a019-f2a9e425cd48_Roland-GO_KEYS61.jpg'
2025-01-27 11:07:16.426 +03:00 [INF] Sending file. Request path: '/images/6ed18e30-061b-41a1-9501-c0d44bd66df5_rp701_photo_02 (1).jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\6ed18e30-061b-41a1-9501-c0d44bd66df5_rp701_photo_02 (1).jpg'
2025-01-27 11:07:16.429 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/c584c8c6-467e-49bb-a019-f2a9e425cd48_Roland-GO_KEYS61.jpg - 200 162453 image/jpeg 67.6127ms
2025-01-27 11:07:16.435 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/6ed18e30-061b-41a1-9501-c0d44bd66df5_rp701_photo_02 (1).jpg - 200 226125 image/jpeg 73.6545ms
2025-01-27 11:07:16.446 +03:00 [INF] Sending file. Request path: '/images/a2ce68fd-95e9-4754-a64d-8adb7db3fe03_e373.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\a2ce68fd-95e9-4754-a64d-8adb7db3fe03_e373.jpg'
2025-01-27 11:07:16.451 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/a2ce68fd-95e9-4754-a64d-8adb7db3fe03_e373.jpg - 200 632594 image/jpeg 90.1905ms
2025-01-27 11:07:22.238 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/product?name=Yamaha%20PSR-E373 - null null
2025-01-27 11:07:22.252 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Product (MyShop)'
2025-01-27 11:07:22.255 +03:00 [INF] Route matched with {action = "Product", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Product(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 11:07:22.259 +03:00 [INF] Executing ViewResult, running view Product.
2025-01-27 11:07:22.275 +03:00 [INF] Executed ViewResult - view Product executed in 16.2886ms.
2025-01-27 11:07:22.277 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Product (MyShop) in 20.4325ms
2025-01-27 11:07:22.279 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Product (MyShop)'
2025-01-27 11:07:22.280 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/product?name=Yamaha%20PSR-E373 - 200 null text/html; charset=utf-8 43.3776ms
2025-01-27 11:07:22.291 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 11:07:22.295 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 5.0469ms
2025-01-27 11:07:22.296 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 11:07:22.296 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 11:07:22.297 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 11:07:22.305 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 8.4752ms
2025-01-27 11:07:22.315 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 11:07:22.314 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/reviews/Yamaha PSR-E373 - application/json null
2025-01-27 11:07:22.308 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 12.6041ms
2025-01-27 11:07:22.302 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 11:07:22.336 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 38.8798ms
2025-01-27 11:07:22.337 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetReviews (MyShop)'
2025-01-27 11:07:22.346 +03:00 [INF] Route matched with {action = "GetReviews", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetReviews(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 11:07:22.393 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__productName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [u].[name] AS [UserName], [p].[ReviewText]
FROM [ProductReviews] AS [p]
INNER JOIN [Usesrs] AS [u] ON [p].[UserId] = [u].[id]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE [p0].[Name] = @__productName_0
2025-01-27 11:07:22.395 +03:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-01-27 11:07:22.396 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetReviews (MyShop) in 47.2094ms
2025-01-27 11:07:22.398 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetReviews (MyShop)'
2025-01-27 11:07:22.401 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/reviews/Yamaha PSR-E373 - 404 null text/plain; charset=utf-8 87.2901ms
2025-01-27 11:07:23.789 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7298/api/Products/GetProductByName - application/json 26
2025-01-27 11:07:23.798 +03:00 [INF] CORS policy execution successful.
2025-01-27 11:07:23.802 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductByName (MyShop)'
2025-01-27 11:07:23.807 +03:00 [INF] Route matched with {action = "GetProductByName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductByName(GetProductByNameQuery) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 11:07:23.922 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ToLower_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity]
FROM [Products] AS [p]
WHERE LOWER([p].[Name]) = @__ToLower_0
2025-01-27 11:07:23.930 +03:00 [INF] Executing OkObjectResult, writing value of type 'ProductDto'.
2025-01-27 11:07:23.943 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductByName (MyShop) in 134.5168ms
2025-01-27 11:07:23.945 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductByName (MyShop)'
2025-01-27 11:07:23.946 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7298/api/Products/GetProductByName - 200 null application/json; charset=utf-8 157.2965ms
2025-01-27 11:07:42.333 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 11:07:42.339 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 6.2919ms
2025-01-27 11:07:44.485 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/product?name=Casio%20Privia%20PX-S1100 - null null
2025-01-27 11:07:44.495 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Product (MyShop)'
2025-01-27 11:07:44.497 +03:00 [INF] Route matched with {action = "Product", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Product(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 11:07:44.500 +03:00 [INF] Executing ViewResult, running view Product.
2025-01-27 11:07:44.510 +03:00 [INF] Executed ViewResult - view Product executed in 10.3803ms.
2025-01-27 11:07:44.512 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Product (MyShop) in 12.5594ms
2025-01-27 11:07:44.514 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Product (MyShop)'
2025-01-27 11:07:44.515 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 11:07:44.516 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/product?name=Casio%20Privia%20PX-S1100 - 200 null text/html; charset=utf-8 31.9873ms
2025-01-27 11:07:44.519 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 4.2759ms
2025-01-27 11:07:44.521 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 11:07:44.523 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 11:07:44.536 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 11:07:44.539 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 11:07:44.541 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 20.8965ms
2025-01-27 11:07:44.554 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 18.4321ms
2025-01-27 11:07:44.560 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/reviews/Casio Privia PX-S1100 - application/json null
2025-01-27 11:07:44.561 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 37.273ms
2025-01-27 11:07:44.566 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 11:07:44.574 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetReviews (MyShop)'
2025-01-27 11:07:44.585 +03:00 [INF] Route matched with {action = "GetReviews", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetReviews(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 11:07:44.596 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__productName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [u].[name] AS [UserName], [p].[ReviewText]
FROM [ProductReviews] AS [p]
INNER JOIN [Usesrs] AS [u] ON [p].[UserId] = [u].[id]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE [p0].[Name] = @__productName_0
2025-01-27 11:07:44.599 +03:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-01-27 11:07:44.600 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetReviews (MyShop) in 12.8098ms
2025-01-27 11:07:44.602 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetReviews (MyShop)'
2025-01-27 11:07:44.603 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/reviews/Casio Privia PX-S1100 - 404 null text/plain; charset=utf-8 42.8286ms
2025-01-27 11:07:46.109 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7298/api/Products/GetProductByName - application/json 32
2025-01-27 11:07:46.118 +03:00 [INF] CORS policy execution successful.
2025-01-27 11:07:46.121 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductByName (MyShop)'
2025-01-27 11:07:46.124 +03:00 [INF] Route matched with {action = "GetProductByName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductByName(GetProductByNameQuery) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 11:07:46.138 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ToLower_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity]
FROM [Products] AS [p]
WHERE LOWER([p].[Name]) = @__ToLower_0
2025-01-27 11:07:46.143 +03:00 [INF] Executing OkObjectResult, writing value of type 'ProductDto'.
2025-01-27 11:07:46.150 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductByName (MyShop) in 22.3746ms
2025-01-27 11:07:46.152 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductByName (MyShop)'
2025-01-27 11:07:46.153 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7298/api/Products/GetProductByName - 200 null application/json; charset=utf-8 44.5416ms
2025-01-27 11:08:07.227 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 11:08:07.233 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 5.9679ms
2025-01-27 11:08:09.647 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/product?name=Roland%20GO%3AKEYS%2061 - null null
2025-01-27 11:08:09.655 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Product (MyShop)'
2025-01-27 11:08:09.656 +03:00 [INF] Route matched with {action = "Product", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Product(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 11:08:09.658 +03:00 [INF] Executing ViewResult, running view Product.
2025-01-27 11:08:09.665 +03:00 [INF] Executed ViewResult - view Product executed in 7.5085ms.
2025-01-27 11:08:09.667 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Product (MyShop) in 9.5695ms
2025-01-27 11:08:09.668 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Product (MyShop)'
2025-01-27 11:08:09.669 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/product?name=Roland%20GO%3AKEYS%2061 - 200 null text/html; charset=utf-8 22.0261ms
2025-01-27 11:08:09.673 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 11:08:09.674 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 11:08:09.678 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 5.1478ms
2025-01-27 11:08:09.682 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 11:08:09.682 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 8.5517ms
2025-01-27 11:08:09.690 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 11:08:09.683 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 11:08:09.699 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 11:08:09.702 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/reviews/Roland GO:KEYS 61 - application/json null
2025-01-27 11:08:09.695 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 12.8202ms
2025-01-27 11:08:09.717 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetReviews (MyShop)'
2025-01-27 11:08:09.721 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 38.056ms
2025-01-27 11:08:09.723 +03:00 [INF] Route matched with {action = "GetReviews", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetReviews(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 11:08:09.737 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__productName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [u].[name] AS [UserName], [p].[ReviewText]
FROM [ProductReviews] AS [p]
INNER JOIN [Usesrs] AS [u] ON [p].[UserId] = [u].[id]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE [p0].[Name] = @__productName_0
2025-01-27 11:08:09.741 +03:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-01-27 11:08:09.745 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetReviews (MyShop) in 15.9622ms
2025-01-27 11:08:09.748 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetReviews (MyShop)'
2025-01-27 11:08:09.751 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/reviews/Roland GO:KEYS 61 - 404 null text/plain; charset=utf-8 48.7196ms
2025-01-27 11:08:11.547 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7298/api/Products/GetProductByName - application/json 28
2025-01-27 11:08:11.552 +03:00 [INF] CORS policy execution successful.
2025-01-27 11:08:11.553 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductByName (MyShop)'
2025-01-27 11:08:11.554 +03:00 [INF] Route matched with {action = "GetProductByName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductByName(GetProductByNameQuery) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 11:08:11.563 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__ToLower_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity]
FROM [Products] AS [p]
WHERE LOWER([p].[Name]) = @__ToLower_0
2025-01-27 11:08:11.565 +03:00 [INF] Executing OkObjectResult, writing value of type 'ProductDto'.
2025-01-27 11:08:11.568 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductByName (MyShop) in 12.2046ms
2025-01-27 11:08:11.570 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductByName (MyShop)'
2025-01-27 11:08:11.571 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7298/api/Products/GetProductByName - 200 null application/json; charset=utf-8 24.5441ms
2025-01-27 11:08:13.947 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 11:08:13.953 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 6.2458ms
2025-01-27 11:13:40.681 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7298/api/Products/createProduct - multipart/form-data; boundary=--------------------------536746375703733893665735 334933
2025-01-27 11:13:40.686 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.CreateProduct (MyShop)'
2025-01-27 11:13:40.693 +03:00 [INF] Route matched with {action = "CreateProduct", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ProductResponse]] CreateProduct(CreateProductCommand) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 11:13:40.742 +03:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-01-27 11:13:40.765 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.CreateProduct (MyShop) in 68.9049ms
2025-01-27 11:13:40.767 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.CreateProduct (MyShop)'
2025-01-27 11:13:40.774 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7298/api/Products/createProduct - 400 null application/problem+json; charset=utf-8 92.3758ms
2025-01-27 11:13:59.229 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7298/api/Products/createProduct - multipart/form-data; boundary=--------------------------595208411300323635984564 334934
2025-01-27 11:13:59.236 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.CreateProduct (MyShop)'
2025-01-27 11:13:59.237 +03:00 [INF] Route matched with {action = "CreateProduct", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ProductResponse]] CreateProduct(CreateProductCommand) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 11:13:59.279 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__request_CategoryId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Name]
FROM [category] AS [c]
WHERE [c].[Id] = @__request_CategoryId_0
2025-01-27 11:13:59.413 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (DbType = Boolean), @p5='?' (Size = 4000), @p6='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Products] ([BrandId], [CtegoryId], [Description], [ImagePath], [IsPaid], [Name], [Price], [StockQuantity])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-01-27 11:13:59.441 +03:00 [INF] Executing OkObjectResult, writing value of type 'ProductResponse'.
2025-01-27 11:13:59.454 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.CreateProduct (MyShop) in 215.0791ms
2025-01-27 11:13:59.456 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.CreateProduct (MyShop)'
2025-01-27 11:13:59.457 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7298/api/Products/createProduct - 200 null application/json; charset=utf-8 227.8587ms
2025-01-27 11:14:13.631 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Index - null null
2025-01-27 11:14:13.641 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 11:14:13.642 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 11:14:13.644 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 11:14:13.651 +03:00 [INF] Executed ViewResult - view Index executed in 7.1067ms.
2025-01-27 11:14:13.657 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 13.5441ms
2025-01-27 11:14:13.659 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 11:14:13.660 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Index - 200 null text/html; charset=utf-8 29.7247ms
2025-01-27 11:14:13.670 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 11:14:13.672 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 11:14:13.671 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 11:14:13.680 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 10.5637ms
2025-01-27 11:14:13.689 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 18.3873ms
2025-01-27 11:14:13.671 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 11:14:13.704 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 11:14:13.706 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 35.7469ms
2025-01-27 11:14:13.713 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 11:14:13.717 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 45.0497ms
2025-01-27 11:14:16.880 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/products?category=Drums%20&%20Percussion - null null
2025-01-27 11:14:16.889 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 11:14:16.892 +03:00 [INF] Route matched with {action = "Products", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Products(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 11:14:16.897 +03:00 [INF] Executing ViewResult, running view Products.
2025-01-27 11:14:16.904 +03:00 [INF] Executed ViewResult - view Products executed in 7.2129ms.
2025-01-27 11:14:16.906 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Products (MyShop) in 8.6048ms
2025-01-27 11:14:16.906 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 11:14:16.907 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/products?category=Drums%20&%20Percussion - 200 null text/html; charset=utf-8 27.808ms
2025-01-27 11:14:16.931 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 11:14:16.932 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 11:14:16.932 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 11:14:16.932 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 11:14:16.937 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 8.323ms
2025-01-27 11:14:16.940 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 8.2213ms
2025-01-27 11:14:16.956 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Drums  - null null
2025-01-27 11:14:16.949 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 17.4212ms
2025-01-27 11:14:16.962 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 30.3839ms
2025-01-27 11:14:16.965 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 11:14:16.968 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 11:14:16.971 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 11:14:16.985 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 11:14:17.002 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 11:14:17.009 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MyShop.API.Controllers.ProductDto, MyShop, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 11:14:17.012 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 17.9074ms
2025-01-27 11:14:17.014 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 11:14:17.017 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Drums  - 200 null application/json; charset=utf-8 60.3784ms
2025-01-27 11:14:17.025 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/1d9ade06-eea3-4f73-9a03-a58d6522c4dd_339309307_1202944837249554_344406632706968113_n__69997.jpg - null null
2025-01-27 11:14:17.043 +03:00 [INF] Sending file. Request path: '/images/1d9ade06-eea3-4f73-9a03-a58d6522c4dd_339309307_1202944837249554_344406632706968113_n__69997.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\images\1d9ade06-eea3-4f73-9a03-a58d6522c4dd_339309307_1202944837249554_344406632706968113_n__69997.jpg'
2025-01-27 11:14:17.047 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/1d9ade06-eea3-4f73-9a03-a58d6522c4dd_339309307_1202944837249554_344406632706968113_n__69997.jpg - 200 333044 image/jpeg 21.8618ms
2025-01-27 11:14:26.049 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/product?name=Bonga - null null
2025-01-27 11:14:26.063 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Product (MyShop)'
2025-01-27 11:14:26.065 +03:00 [INF] Route matched with {action = "Product", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Product(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 11:14:26.067 +03:00 [INF] Executing ViewResult, running view Product.
2025-01-27 11:14:26.075 +03:00 [INF] Executed ViewResult - view Product executed in 7.8437ms.
2025-01-27 11:14:26.095 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 11:14:26.095 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 11:14:26.116 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 21.3775ms
2025-01-27 11:14:26.098 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 11:14:26.100 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Product (MyShop) in 33.3848ms
2025-01-27 11:14:26.133 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Product (MyShop)'
2025-01-27 11:14:26.099 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 11:14:26.132 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 35.0558ms
2025-01-27 11:14:26.134 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/product?name=Bonga - 200 null text/html; charset=utf-8 84.5256ms
2025-01-27 11:14:26.139 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 11:14:26.139 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/reviews/Bonga - application/json null
2025-01-27 11:14:26.103 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 8.2557ms
2025-01-27 11:14:26.150 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 51.0113ms
2025-01-27 11:14:26.152 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetReviews (MyShop)'
2025-01-27 11:14:26.155 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 11:14:26.158 +03:00 [INF] Route matched with {action = "GetReviews", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetReviews(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 11:14:26.170 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__productName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [u].[name] AS [UserName], [p].[ReviewText]
FROM [ProductReviews] AS [p]
INNER JOIN [Usesrs] AS [u] ON [p].[UserId] = [u].[id]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE [p0].[Name] = @__productName_0
2025-01-27 11:14:26.172 +03:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-01-27 11:14:26.173 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetReviews (MyShop) in 10.7786ms
2025-01-27 11:14:26.174 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetReviews (MyShop)'
2025-01-27 11:14:26.175 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/reviews/Bonga - 404 null text/plain; charset=utf-8 36.7581ms
2025-01-27 11:14:27.949 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7298/api/Products/GetProductByName - application/json 16
2025-01-27 11:14:27.956 +03:00 [INF] CORS policy execution successful.
2025-01-27 11:14:27.959 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductByName (MyShop)'
2025-01-27 11:14:27.960 +03:00 [INF] Route matched with {action = "GetProductByName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductByName(GetProductByNameQuery) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 11:14:27.971 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ToLower_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity]
FROM [Products] AS [p]
WHERE LOWER([p].[Name]) = @__ToLower_0
2025-01-27 11:14:27.973 +03:00 [INF] Executing OkObjectResult, writing value of type 'ProductDto'.
2025-01-27 11:14:27.977 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductByName (MyShop) in 11.4954ms
2025-01-27 11:14:27.980 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductByName (MyShop)'
2025-01-27 11:14:27.982 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7298/api/Products/GetProductByName - 200 null application/json; charset=utf-8 33.7004ms
2025-01-27 11:19:03.131 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7298/api/Products/createProduct - multipart/form-data; boundary=--------------------------927032610996525031162260 123947
2025-01-27 11:19:03.140 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.CreateProduct (MyShop)'
2025-01-27 11:19:03.142 +03:00 [INF] Route matched with {action = "CreateProduct", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ProductResponse]] CreateProduct(CreateProductCommand) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 11:19:03.154 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__request_CategoryId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Name]
FROM [category] AS [c]
WHERE [c].[Id] = @__request_CategoryId_0
2025-01-27 11:19:03.170 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (DbType = Boolean), @p5='?' (Size = 4000), @p6='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Products] ([BrandId], [CtegoryId], [Description], [ImagePath], [IsPaid], [Name], [Price], [StockQuantity])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-01-27 11:19:03.173 +03:00 [INF] Executing OkObjectResult, writing value of type 'ProductResponse'.
2025-01-27 11:19:03.175 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.CreateProduct (MyShop) in 30.7979ms
2025-01-27 11:19:03.176 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.CreateProduct (MyShop)'
2025-01-27 11:19:03.179 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7298/api/Products/createProduct - 200 null application/json; charset=utf-8 48.142ms
2025-01-27 11:30:56.843 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Index - null null
2025-01-27 11:30:56.860 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 11:30:56.861 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 11:30:56.863 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 11:30:56.879 +03:00 [INF] Executed ViewResult - view Index executed in 16.7792ms.
2025-01-27 11:30:56.881 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 19.0555ms
2025-01-27 11:30:56.882 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 11:30:56.884 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Index - 200 null text/html; charset=utf-8 41.5707ms
2025-01-27 11:30:56.897 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 11:30:56.898 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 11:30:56.898 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 11:30:56.909 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 12.6833ms
2025-01-27 11:30:56.899 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 11:30:56.921 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 22.3612ms
2025-01-27 11:30:56.923 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 24.7163ms
2025-01-27 11:30:56.940 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 11:30:56.944 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 11:30:56.946 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 47.4082ms
2025-01-27 11:31:00.022 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Guide? - null null
2025-01-27 11:31:00.030 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Guide (MyShop)'
2025-01-27 11:31:00.033 +03:00 [INF] Route matched with {action = "Guide", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Guide(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 11:31:00.041 +03:00 [INF] Executing ViewResult, running view Guide.
2025-01-27 11:31:00.051 +03:00 [INF] Executed ViewResult - view Guide executed in 9.7566ms.
2025-01-27 11:31:00.053 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Guide (MyShop) in 16.1681ms
2025-01-27 11:31:00.056 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Guide (MyShop)'
2025-01-27 11:31:00.058 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Guide? - 200 null text/html; charset=utf-8 36.8242ms
2025-01-27 11:31:00.073 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 11:31:00.073 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 11:31:00.073 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 11:31:00.073 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 11:31:00.086 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 12.8957ms
2025-01-27 11:31:00.090 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 16.8447ms
2025-01-27 11:31:00.094 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 11:31:00.077 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 4.1703ms
2025-01-27 11:31:00.095 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 22.1037ms
2025-01-27 11:31:00.097 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 11:36:21.667 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7298/api/Products/createProduct - multipart/form-data; boundary=--------------------------457406741882377108312093 95788
2025-01-27 11:36:21.674 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.CreateProduct (MyShop)'
2025-01-27 11:36:21.676 +03:00 [INF] Route matched with {action = "CreateProduct", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ProductResponse]] CreateProduct(CreateProductCommand) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 11:36:21.696 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__request_CategoryId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Name]
FROM [category] AS [c]
WHERE [c].[Id] = @__request_CategoryId_0
2025-01-27 11:36:21.716 +03:00 [INF] Executed DbCommand (14ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (DbType = Boolean), @p5='?' (Size = 4000), @p6='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Products] ([BrandId], [CtegoryId], [Description], [ImagePath], [IsPaid], [Name], [Price], [StockQuantity])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-01-27 11:36:21.719 +03:00 [INF] Executing OkObjectResult, writing value of type 'ProductResponse'.
2025-01-27 11:36:21.720 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.CreateProduct (MyShop) in 42.2716ms
2025-01-27 11:36:21.721 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.CreateProduct (MyShop)'
2025-01-27 11:36:21.723 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7298/api/Products/createProduct - 200 null application/json; charset=utf-8 96.2653ms
2025-01-27 11:36:35.848 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Index - null null
2025-01-27 11:36:35.868 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 11:36:35.870 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 11:36:35.872 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 11:36:35.881 +03:00 [INF] Executed ViewResult - view Index executed in 7.8155ms.
2025-01-27 11:36:35.884 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 12.4577ms
2025-01-27 11:36:35.885 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 11:36:35.886 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Index - 200 null text/html; charset=utf-8 37.9866ms
2025-01-27 11:36:35.910 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 11:36:35.913 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 11:36:35.917 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 11:36:35.931 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 20.8683ms
2025-01-27 11:36:35.939 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 26.5759ms
2025-01-27 11:36:35.913 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 11:36:35.954 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 41.505ms
2025-01-27 11:36:35.950 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 11:36:35.950 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 33.0907ms
2025-01-27 11:36:35.957 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 11:36:38.880 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/products?category=Drums%20&%20Percussion - null null
2025-01-27 11:36:38.886 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 11:36:38.888 +03:00 [INF] Route matched with {action = "Products", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Products(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 11:36:38.891 +03:00 [INF] Executing ViewResult, running view Products.
2025-01-27 11:36:38.898 +03:00 [INF] Executed ViewResult - view Products executed in 7.1908ms.
2025-01-27 11:36:38.899 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Products (MyShop) in 8.5107ms
2025-01-27 11:36:38.900 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 11:36:38.901 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/products?category=Drums%20&%20Percussion - 200 null text/html; charset=utf-8 21.3696ms
2025-01-27 11:36:38.924 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 11:36:38.925 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 11:36:38.924 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 11:36:38.931 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 7.4279ms
2025-01-27 11:36:38.933 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 8.9494ms
2025-01-27 11:36:38.937 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 13.2844ms
2025-01-27 11:36:38.941 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 11:36:38.943 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Drums  - null null
2025-01-27 11:36:38.925 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 11:36:38.944 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 11:36:38.952 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 11:36:38.961 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 11:36:38.968 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 43.1013ms
2025-01-27 11:36:38.973 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 11:36:38.978 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MyShop.API.Controllers.ProductDto, MyShop, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 11:36:38.980 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 14.5348ms
2025-01-27 11:36:38.981 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 11:36:38.982 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Drums  - 200 null application/json; charset=utf-8 39.7631ms
2025-01-27 11:36:38.985 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/1d9ade06-eea3-4f73-9a03-a58d6522c4dd_339309307_1202944837249554_344406632706968113_n__69997.jpg - null null
2025-01-27 11:36:38.984 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/76baa1b0-8a1e-464e-bf01-b49dbbe09e78_IMG_20230504_111833.jpg - null null
2025-01-27 11:36:38.984 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/acd9764c-a970-4529-a8b5-341fef0e6fef_Conga-Set-Rope-Tuned.jpg - null null
2025-01-27 11:36:38.994 +03:00 [INF] The file /images/1d9ade06-eea3-4f73-9a03-a58d6522c4dd_339309307_1202944837249554_344406632706968113_n__69997.jpg was not modified
2025-01-27 11:36:38.999 +03:00 [INF] Sending file. Request path: '/images/76baa1b0-8a1e-464e-bf01-b49dbbe09e78_IMG_20230504_111833.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\images\76baa1b0-8a1e-464e-bf01-b49dbbe09e78_IMG_20230504_111833.jpg'
2025-01-27 11:36:39.001 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/1d9ade06-eea3-4f73-9a03-a58d6522c4dd_339309307_1202944837249554_344406632706968113_n__69997.jpg - 304 null image/jpeg 15.4743ms
2025-01-27 11:36:39.003 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/76baa1b0-8a1e-464e-bf01-b49dbbe09e78_IMG_20230504_111833.jpg - 200 94237 image/jpeg 18.8663ms
2025-01-27 11:36:39.005 +03:00 [INF] Sending file. Request path: '/images/acd9764c-a970-4529-a8b5-341fef0e6fef_Conga-Set-Rope-Tuned.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\images\acd9764c-a970-4529-a8b5-341fef0e6fef_Conga-Set-Rope-Tuned.jpg'
2025-01-27 11:36:39.016 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/acd9764c-a970-4529-a8b5-341fef0e6fef_Conga-Set-Rope-Tuned.jpg - 200 121575 image/jpeg 31.7222ms
2025-01-27 11:36:51.129 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/product?name=Roland%20TD-1K - null null
2025-01-27 11:36:51.135 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Product (MyShop)'
2025-01-27 11:36:51.136 +03:00 [INF] Route matched with {action = "Product", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Product(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 11:36:51.140 +03:00 [INF] Executing ViewResult, running view Product.
2025-01-27 11:36:51.145 +03:00 [INF] Executed ViewResult - view Product executed in 5.6238ms.
2025-01-27 11:36:51.153 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Product (MyShop) in 13.7173ms
2025-01-27 11:36:51.154 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Product (MyShop)'
2025-01-27 11:36:51.156 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/product?name=Roland%20TD-1K - 200 null text/html; charset=utf-8 27.5025ms
2025-01-27 11:36:51.159 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 11:36:51.165 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 6.5244ms
2025-01-27 11:36:51.166 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 11:36:51.165 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 11:36:51.166 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 11:36:51.197 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 31.9985ms
2025-01-27 11:36:51.201 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 34.8919ms
2025-01-27 11:36:51.171 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 11:36:51.209 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 42.8984ms
2025-01-27 11:36:51.210 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/reviews/Roland TD-1K - application/json null
2025-01-27 11:36:51.211 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 11:36:51.220 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetReviews (MyShop)'
2025-01-27 11:36:51.225 +03:00 [INF] Route matched with {action = "GetReviews", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetReviews(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 11:36:51.235 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__productName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [u].[name] AS [UserName], [p].[ReviewText]
FROM [ProductReviews] AS [p]
INNER JOIN [Usesrs] AS [u] ON [p].[UserId] = [u].[id]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE [p0].[Name] = @__productName_0
2025-01-27 11:36:51.237 +03:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-01-27 11:36:51.238 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetReviews (MyShop) in 9.9473ms
2025-01-27 11:36:51.240 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetReviews (MyShop)'
2025-01-27 11:36:51.241 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/reviews/Roland TD-1K - 404 null text/plain; charset=utf-8 32.0339ms
2025-01-27 11:36:54.304 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7298/api/Products/GetProductByName - application/json 23
2025-01-27 11:36:54.316 +03:00 [INF] CORS policy execution successful.
2025-01-27 11:36:54.318 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductByName (MyShop)'
2025-01-27 11:36:54.321 +03:00 [INF] Route matched with {action = "GetProductByName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductByName(GetProductByNameQuery) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 11:36:54.330 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__ToLower_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity]
FROM [Products] AS [p]
WHERE LOWER([p].[Name]) = @__ToLower_0
2025-01-27 11:36:54.333 +03:00 [INF] Executing OkObjectResult, writing value of type 'ProductDto'.
2025-01-27 11:36:54.335 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductByName (MyShop) in 11.3071ms
2025-01-27 11:36:54.336 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductByName (MyShop)'
2025-01-27 11:36:54.338 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7298/api/Products/GetProductByName - 200 null application/json; charset=utf-8 34.3648ms
2025-01-27 11:36:58.462 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Index - null null
2025-01-27 11:36:58.474 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 11:36:58.476 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 11:36:58.478 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 11:36:58.483 +03:00 [INF] Executed ViewResult - view Index executed in 4.9718ms.
2025-01-27 11:36:58.484 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 6.2395ms
2025-01-27 11:36:58.485 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 11:36:58.487 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Index - 200 null text/html; charset=utf-8 24.2813ms
2025-01-27 11:36:58.509 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 11:36:58.509 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 11:36:58.509 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 11:36:58.514 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 5.309ms
2025-01-27 11:36:58.527 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 17.879ms
2025-01-27 11:36:58.509 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 11:36:58.536 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 11:36:58.540 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 31.3247ms
2025-01-27 11:36:58.541 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 32.0173ms
2025-01-27 11:36:58.550 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 11:41:34.722 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 11:41:34.734 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 12.4413ms
2025-01-27 11:41:37.219 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7298/api/Products/GetProductByName - application/json 23
2025-01-27 11:41:37.224 +03:00 [INF] CORS policy execution successful.
2025-01-27 11:41:37.227 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductByName (MyShop)'
2025-01-27 11:41:37.228 +03:00 [INF] Route matched with {action = "GetProductByName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductByName(GetProductByNameQuery) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 11:41:37.238 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__ToLower_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity]
FROM [Products] AS [p]
WHERE LOWER([p].[Name]) = @__ToLower_0
2025-01-27 11:41:37.243 +03:00 [INF] Executing OkObjectResult, writing value of type 'ProductDto'.
2025-01-27 11:41:37.248 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductByName (MyShop) in 17.3577ms
2025-01-27 11:41:37.252 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductByName (MyShop)'
2025-01-27 11:41:37.253 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7298/api/Products/GetProductByName - 200 null application/json; charset=utf-8 34.4464ms
2025-01-27 11:41:59.592 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/SearchList - null null
2025-01-27 11:41:59.608 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.SearchList (MyShop)'
2025-01-27 11:41:59.612 +03:00 [INF] Route matched with {action = "SearchList", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult SearchList(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 11:41:59.621 +03:00 [INF] Executing ViewResult, running view SearchList.
2025-01-27 11:41:59.641 +03:00 [INF] Executed ViewResult - view SearchList executed in 20.7307ms.
2025-01-27 11:41:59.645 +03:00 [INF] Executed action MyShop.Controllers.HomeController.SearchList (MyShop) in 25.1179ms
2025-01-27 11:41:59.649 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.SearchList (MyShop)'
2025-01-27 11:41:59.652 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/SearchList - 200 null text/html; charset=utf-8 60.333ms
2025-01-27 11:41:59.655 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 11:41:59.660 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 11:41:59.668 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 11:41:59.671 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 11.4811ms
2025-01-27 11:41:59.660 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 11:41:59.688 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 11:41:59.660 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 4.9384ms
2025-01-27 11:41:59.733 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Guitars - null null
2025-01-27 11:41:59.697 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 37.6016ms
2025-01-27 11:41:59.738 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 70.059ms
2025-01-27 11:41:59.739 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 11:41:59.742 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 11:41:59.754 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 11:41:59.766 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 11:41:59.770 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MyShop.API.Controllers.ProductDto, MyShop, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 11:41:59.773 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 17.1767ms
2025-01-27 11:41:59.774 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 11:41:59.776 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Guitars - 200 null application/json; charset=utf-8 68.837ms
2025-01-27 11:42:08.147 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/SearchList - null null
2025-01-27 11:42:08.153 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.SearchList (MyShop)'
2025-01-27 11:42:08.155 +03:00 [INF] Route matched with {action = "SearchList", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult SearchList(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 11:42:08.160 +03:00 [INF] Executing ViewResult, running view SearchList.
2025-01-27 11:42:08.170 +03:00 [INF] Executed ViewResult - view SearchList executed in 10.3245ms.
2025-01-27 11:42:08.172 +03:00 [INF] Executed action MyShop.Controllers.HomeController.SearchList (MyShop) in 12.098ms
2025-01-27 11:42:08.174 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.SearchList (MyShop)'
2025-01-27 11:42:08.175 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/SearchList - 200 null text/html; charset=utf-8 28.1173ms
2025-01-27 11:42:08.191 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 11:42:08.191 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 11:42:08.191 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 11:42:08.191 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 11:42:08.223 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 32.1798ms
2025-01-27 11:42:08.229 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 37.6035ms
2025-01-27 11:42:08.233 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 11:42:08.209 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 18.2089ms
2025-01-27 11:42:08.238 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Keyboards & Pianos - null null
2025-01-27 11:42:08.239 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 11:42:08.239 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 47.8712ms
2025-01-27 11:42:08.247 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 11:42:08.254 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 11:42:08.273 +03:00 [INF] Executed DbCommand (15ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 11:42:08.279 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MyShop.API.Controllers.ProductDto, MyShop, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 11:42:08.284 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 27.9575ms
2025-01-27 11:42:08.287 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 11:42:08.288 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Keyboards & Pianos - 200 null application/json; charset=utf-8 51.8852ms
2025-01-27 11:42:08.292 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/a2ce68fd-95e9-4754-a64d-8adb7db3fe03_e373.jpg - null null
2025-01-27 11:42:08.292 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/c584c8c6-467e-49bb-a019-f2a9e425cd48_Roland-GO_KEYS61.jpg - null null
2025-01-27 11:42:08.293 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/6ed18e30-061b-41a1-9501-c0d44bd66df5_rp701_photo_02 (1).jpg - null null
2025-01-27 11:42:08.293 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/e15076e0-5127-4d1b-9306-2096f88005f2_PX-S1100 (1).jpg - null null
2025-01-27 11:42:08.300 +03:00 [INF] The file /images/a2ce68fd-95e9-4754-a64d-8adb7db3fe03_e373.jpg was not modified
2025-01-27 11:42:08.302 +03:00 [INF] The file /images/c584c8c6-467e-49bb-a019-f2a9e425cd48_Roland-GO_KEYS61.jpg was not modified
2025-01-27 11:42:08.305 +03:00 [INF] The file /images/6ed18e30-061b-41a1-9501-c0d44bd66df5_rp701_photo_02 (1).jpg was not modified
2025-01-27 11:42:08.307 +03:00 [INF] The file /images/e15076e0-5127-4d1b-9306-2096f88005f2_PX-S1100 (1).jpg was not modified
2025-01-27 11:42:08.308 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/a2ce68fd-95e9-4754-a64d-8adb7db3fe03_e373.jpg - 304 null image/jpeg 16.0564ms
2025-01-27 11:42:08.309 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/c584c8c6-467e-49bb-a019-f2a9e425cd48_Roland-GO_KEYS61.jpg - 304 null image/jpeg 17.1934ms
2025-01-27 11:42:08.313 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/6ed18e30-061b-41a1-9501-c0d44bd66df5_rp701_photo_02 (1).jpg - 304 null image/jpeg 20.7889ms
2025-01-27 11:42:08.314 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/e15076e0-5127-4d1b-9306-2096f88005f2_PX-S1100 (1).jpg - 304 null image/jpeg 21.9475ms
2025-01-27 11:42:17.786 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/SearchList - null null
2025-01-27 11:42:17.795 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.SearchList (MyShop)'
2025-01-27 11:42:17.799 +03:00 [INF] Route matched with {action = "SearchList", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult SearchList(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 11:42:17.800 +03:00 [INF] Executing ViewResult, running view SearchList.
2025-01-27 11:42:17.806 +03:00 [INF] Executed ViewResult - view SearchList executed in 5.9042ms.
2025-01-27 11:42:17.807 +03:00 [INF] Executed action MyShop.Controllers.HomeController.SearchList (MyShop) in 7.0355ms
2025-01-27 11:42:17.808 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.SearchList (MyShop)'
2025-01-27 11:42:17.809 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/SearchList - 200 null text/html; charset=utf-8 23.0295ms
2025-01-27 11:42:17.824 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 11:42:17.824 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 11:42:17.826 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 11:42:17.826 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 11:42:17.830 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 6.5951ms
2025-01-27 11:42:17.834 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 10.8825ms
2025-01-27 11:42:17.845 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 11:42:17.837 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 11.3402ms
2025-01-27 11:42:17.842 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Guitars - null null
2025-01-27 11:42:17.850 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 11:42:17.850 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 24.3505ms
2025-01-27 11:42:17.859 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 11:42:17.873 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 11:42:17.882 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 11:42:17.887 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MyShop.API.Controllers.ProductDto, MyShop, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 11:42:17.888 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 13.4183ms
2025-01-27 11:42:17.890 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 11:42:17.891 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Guitars - 200 null application/json; charset=utf-8 49.034ms
2025-01-27 11:42:33.117 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/SearchList - null null
2025-01-27 11:42:33.125 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.SearchList (MyShop)'
2025-01-27 11:42:33.128 +03:00 [INF] Route matched with {action = "SearchList", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult SearchList(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 11:42:33.130 +03:00 [INF] Executing ViewResult, running view SearchList.
2025-01-27 11:42:33.135 +03:00 [INF] Executed ViewResult - view SearchList executed in 4.7802ms.
2025-01-27 11:42:33.136 +03:00 [INF] Executed action MyShop.Controllers.HomeController.SearchList (MyShop) in 6.5256ms
2025-01-27 11:42:33.138 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.SearchList (MyShop)'
2025-01-27 11:42:33.139 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/SearchList - 200 null text/html; charset=utf-8 21.8258ms
2025-01-27 11:42:33.147 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 11:42:33.150 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 3.3375ms
2025-01-27 11:42:33.151 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 11:42:33.152 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 11:42:33.152 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 11:42:33.156 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 11:42:33.163 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 11.5724ms
2025-01-27 11:42:33.161 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 10.3557ms
2025-01-27 11:42:33.180 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 11:42:33.170 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Drums & Percussion - null null
2025-01-27 11:42:33.184 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 32.4924ms
2025-01-27 11:42:33.196 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 11:42:33.204 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 11:42:33.210 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 11:42:33.217 +03:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-01-27 11:42:33.218 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 12.8698ms
2025-01-27 11:42:33.220 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 11:42:33.221 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Drums & Percussion - 404 null text/plain; charset=utf-8 51.1577ms
2025-01-27 11:42:36.488 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/SearchList - null null
2025-01-27 11:42:36.500 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.SearchList (MyShop)'
2025-01-27 11:42:36.502 +03:00 [INF] Route matched with {action = "SearchList", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult SearchList(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 11:42:36.504 +03:00 [INF] Executing ViewResult, running view SearchList.
2025-01-27 11:42:36.512 +03:00 [INF] Executed ViewResult - view SearchList executed in 7.5773ms.
2025-01-27 11:42:36.515 +03:00 [INF] Executed action MyShop.Controllers.HomeController.SearchList (MyShop) in 11.2774ms
2025-01-27 11:42:36.517 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.SearchList (MyShop)'
2025-01-27 11:42:36.518 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/SearchList - 200 null text/html; charset=utf-8 30.2862ms
2025-01-27 11:42:36.525 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 11:42:36.529 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 11:42:36.525 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 11:42:36.531 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 6.2442ms
2025-01-27 11:42:36.530 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 11:42:36.539 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 11:42:36.542 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Guitars - null null
2025-01-27 11:42:36.535 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 5.5855ms
2025-01-27 11:42:36.550 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 11:42:36.537 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 11.8687ms
2025-01-27 11:42:36.555 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 25.0375ms
2025-01-27 11:42:36.556 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 11:42:36.561 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 11:42:36.569 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 11:42:36.576 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MyShop.API.Controllers.ProductDto, MyShop, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 11:42:36.578 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 12.9215ms
2025-01-27 11:42:36.580 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 11:42:36.581 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Guitars - 200 null application/json; charset=utf-8 39.7356ms
2025-01-27 11:42:44.837 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/SearchBrand - null null
2025-01-27 11:42:44.848 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.SearchBrand (MyShop)'
2025-01-27 11:42:44.851 +03:00 [INF] Route matched with {action = "SearchBrand", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult SearchBrand(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 11:42:44.858 +03:00 [INF] Executing ViewResult, running view SearchBrand.
2025-01-27 11:42:44.883 +03:00 [INF] Executed ViewResult - view SearchBrand executed in 26.4832ms.
2025-01-27 11:42:44.885 +03:00 [INF] Executed action MyShop.Controllers.HomeController.SearchBrand (MyShop) in 29.7152ms
2025-01-27 11:42:44.886 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.SearchBrand (MyShop)'
2025-01-27 11:42:44.887 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/SearchBrand - 200 null text/html; charset=utf-8 50.4606ms
2025-01-27 11:42:44.899 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 11:42:44.903 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 11:42:44.903 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 11:42:44.904 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 4.5619ms
2025-01-27 11:42:44.908 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 5.436ms
2025-01-27 11:42:44.916 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 11:42:44.903 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 11:42:44.919 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 16.3301ms
2025-01-27 11:42:44.920 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 11:42:44.927 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 24.5855ms
2025-01-27 11:42:44.933 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category-and-brand?categoryName=Guitars&brandName=Yamaha - null null
2025-01-27 11:42:44.941 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryAndBrand (MyShop)'
2025-01-27 11:42:44.948 +03:00 [INF] Route matched with {action = "GetProductsByCategoryAndBrand", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[ProductDTO]]] GetProductsByCategoryAndBrand(System.String, System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 11:42:44.991 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__request_CategoryName_0='?' (Size = 4000), @__request_BrandName_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name], [b].[Id], [b].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
LEFT JOIN [Brands] AS [b] ON [p].[BrandId] = [b].[Id]
WHERE [c].[Name] = @__request_CategoryName_0 AND [b].[Id] IS NOT NULL AND [b].[Name] = @__request_BrandName_1
2025-01-27 11:42:45.002 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ProducctDTO, MyShop.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 11:42:45.012 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryAndBrand (MyShop) in 60.6414ms
2025-01-27 11:42:45.014 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryAndBrand (MyShop)'
2025-01-27 11:42:45.015 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category-and-brand?categoryName=Guitars&brandName=Yamaha - 200 null application/json; charset=utf-8 82.6871ms
2025-01-27 11:42:53.977 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/product?name=Revstar%20RS502T - null null
2025-01-27 11:42:53.984 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Product (MyShop)'
2025-01-27 11:42:53.985 +03:00 [INF] Route matched with {action = "Product", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Product(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 11:42:53.991 +03:00 [INF] Executing ViewResult, running view Product.
2025-01-27 11:42:53.997 +03:00 [INF] Executed ViewResult - view Product executed in 6.3358ms.
2025-01-27 11:42:53.999 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Product (MyShop) in 8.5464ms
2025-01-27 11:42:54.001 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Product (MyShop)'
2025-01-27 11:42:54.002 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/product?name=Revstar%20RS502T - 200 null text/html; charset=utf-8 25.3153ms
2025-01-27 11:42:54.010 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 11:42:54.013 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 11:42:54.013 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 11:42:54.014 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 4.197ms
2025-01-27 11:42:54.013 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 11:42:54.025 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 11:42:54.028 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/reviews/Revstar RS502T - application/json null
2025-01-27 11:42:54.018 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 5.1388ms
2025-01-27 11:42:54.038 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetReviews (MyShop)'
2025-01-27 11:42:54.021 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 7.9807ms
2025-01-27 11:42:54.045 +03:00 [INF] Route matched with {action = "GetReviews", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetReviews(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 11:42:54.046 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 33.2302ms
2025-01-27 11:42:54.048 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 11:42:54.063 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__productName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [u].[name] AS [UserName], [p].[ReviewText]
FROM [ProductReviews] AS [p]
INNER JOIN [Usesrs] AS [u] ON [p].[UserId] = [u].[id]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE [p0].[Name] = @__productName_0
2025-01-27 11:42:54.067 +03:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-01-27 11:42:54.069 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetReviews (MyShop) in 18.7679ms
2025-01-27 11:42:54.075 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetReviews (MyShop)'
2025-01-27 11:42:54.077 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/reviews/Revstar RS502T - 404 null text/plain; charset=utf-8 48.8676ms
2025-01-27 11:42:56.375 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7298/api/Products/GetProductByName - application/json 25
2025-01-27 11:42:56.381 +03:00 [INF] CORS policy execution successful.
2025-01-27 11:42:56.383 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductByName (MyShop)'
2025-01-27 11:42:56.385 +03:00 [INF] Route matched with {action = "GetProductByName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductByName(GetProductByNameQuery) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 11:42:56.395 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__ToLower_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity]
FROM [Products] AS [p]
WHERE LOWER([p].[Name]) = @__ToLower_0
2025-01-27 11:42:56.399 +03:00 [INF] Executing OkObjectResult, writing value of type 'ProductDto'.
2025-01-27 11:42:56.407 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductByName (MyShop) in 18.9765ms
2025-01-27 11:42:56.411 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductByName (MyShop)'
2025-01-27 11:42:56.412 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7298/api/Products/GetProductByName - 200 null application/json; charset=utf-8 37.1767ms
2025-01-27 11:43:44.690 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Search - null null
2025-01-27 11:43:44.707 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Search (MyShop)'
2025-01-27 11:43:44.709 +03:00 [INF] Route matched with {action = "Search", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Search(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 11:43:44.711 +03:00 [INF] Executing ViewResult, running view Search.
2025-01-27 11:43:44.735 +03:00 [INF] Executed ViewResult - view Search executed in 24.1669ms.
2025-01-27 11:43:44.740 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Search (MyShop) in 29.5751ms
2025-01-27 11:43:44.741 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Search (MyShop)'
2025-01-27 11:43:44.743 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Search - 200 null text/html; charset=utf-8 52.1834ms
2025-01-27 11:43:44.745 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 11:43:44.751 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 11:43:44.751 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 11:43:44.751 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 11:43:44.772 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 21.001ms
2025-01-27 11:43:44.776 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 25.613ms
2025-01-27 11:43:44.787 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/search?searchTerm=gibson - null null
2025-01-27 11:43:44.780 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 11:43:44.756 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 11.4226ms
2025-01-27 11:43:44.792 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 41.5781ms
2025-01-27 11:43:44.796 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.SearchProducts (MyShop)'
2025-01-27 11:43:44.806 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 11:43:44.817 +03:00 [INF] Route matched with {action = "SearchProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[MyShop.Domain.Entities.Product]]] SearchProducts(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 11:43:44.842 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__request_SearchTerm_0_contains='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity]
FROM [Products] AS [p]
WHERE [p].[Name] LIKE @__request_SearchTerm_0_contains ESCAPE N'\' OR [p].[Description] LIKE @__request_SearchTerm_0_contains ESCAPE N'\'
2025-01-27 11:43:44.855 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ProductDTO, MyShop.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 11:43:44.870 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.SearchProducts (MyShop) in 48.5122ms
2025-01-27 11:43:44.872 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.SearchProducts (MyShop)'
2025-01-27 11:43:44.873 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/search?searchTerm=gibson - 200 null application/json; charset=utf-8 85.2748ms
2025-01-27 11:43:49.906 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Index - null null
2025-01-27 11:43:49.912 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 11:43:49.915 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 11:43:49.919 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 11:43:49.924 +03:00 [INF] Executed ViewResult - view Index executed in 4.4689ms.
2025-01-27 11:43:49.925 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 5.5923ms
2025-01-27 11:43:49.926 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 11:43:49.927 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Index - 200 null text/html; charset=utf-8 21.768ms
2025-01-27 11:43:49.942 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 11:43:49.943 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 11:43:49.944 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 11:43:49.942 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 11:43:49.951 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 7.834ms
2025-01-27 11:43:49.947 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 5.8948ms
2025-01-27 11:43:49.967 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 11:43:49.958 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 15.7383ms
2025-01-27 11:43:49.971 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 27.7688ms
2025-01-27 11:43:49.979 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 11:43:55.025 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Guide? - null null
2025-01-27 11:43:55.038 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Guide (MyShop)'
2025-01-27 11:43:55.042 +03:00 [INF] Route matched with {action = "Guide", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Guide(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 11:43:55.044 +03:00 [INF] Executing ViewResult, running view Guide.
2025-01-27 11:43:55.054 +03:00 [INF] Executed ViewResult - view Guide executed in 9.7002ms.
2025-01-27 11:43:55.057 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Guide (MyShop) in 13.4353ms
2025-01-27 11:43:55.058 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Guide (MyShop)'
2025-01-27 11:43:55.059 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Guide? - 200 null text/html; charset=utf-8 33.9517ms
2025-01-27 11:43:55.077 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 11:43:55.077 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 11:43:55.077 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 11:43:55.077 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 11:43:55.082 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 5.5844ms
2025-01-27 11:43:55.096 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 11:43:55.089 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 12.09ms
2025-01-27 11:43:55.086 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 9.0775ms
2025-01-27 11:43:55.106 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 28.3282ms
2025-01-27 11:43:55.111 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 11:44:01.009 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/electric-guitar-7815026_1280.jpg - null null
2025-01-27 11:44:01.009 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/guitar-4750599_1280.jpg - null null
2025-01-27 11:44:01.009 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/bass-guitar-913092_1280.jpg - null null
2025-01-27 11:44:01.012 +03:00 [INF] The file /Images/electric-guitar-7815026_1280.jpg was not modified
2025-01-27 11:44:01.016 +03:00 [INF] The file /Images/guitar-4750599_1280.jpg was not modified
2025-01-27 11:44:01.019 +03:00 [INF] The file /Images/bass-guitar-913092_1280.jpg was not modified
2025-01-27 11:44:01.019 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/electric-guitar-7815026_1280.jpg - 304 null image/jpeg 10.0561ms
2025-01-27 11:44:01.021 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/guitar-4750599_1280.jpg - 304 null image/jpeg 11.4561ms
2025-01-27 11:44:01.022 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/bass-guitar-913092_1280.jpg - 304 null image/jpeg 12.2589ms
2025-01-27 11:44:05.265 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/acousticpeg - null null
2025-01-27 11:44:05.287 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.acousticpeg (MyShop)'
2025-01-27 11:44:05.290 +03:00 [INF] Route matched with {action = "acousticpeg", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult acousticpeg(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 11:44:05.310 +03:00 [INF] Executing ViewResult, running view acousticpeg.
2025-01-27 11:44:05.326 +03:00 [INF] Executed ViewResult - view acousticpeg executed in 28.2753ms.
2025-01-27 11:44:05.328 +03:00 [INF] Executed action MyShop.Controllers.HomeController.acousticpeg (MyShop) in 32.8782ms
2025-01-27 11:44:05.330 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.acousticpeg (MyShop)'
2025-01-27 11:44:05.334 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/acousticpeg - 200 null text/html; charset=utf-8 69.4769ms
2025-01-27 11:44:05.342 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 11:44:05.342 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/guitar-5836611_1280.jpg - null null
2025-01-27 11:44:05.344 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 11:44:05.349 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 11:44:05.376 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 32.3922ms
2025-01-27 11:44:05.342 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/guitar-756326_1280.jpg - null null
2025-01-27 11:44:05.342 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/floor-1256804_1280.jpg - null null
2025-01-27 11:44:05.342 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/instrument-6756408_1280.jpg - null null
2025-01-27 11:44:05.343 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/styles.css - null null
2025-01-27 11:44:05.342 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/guitar-490310_1280.jpg - null null
2025-01-27 11:44:05.359 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 16.6701ms
2025-01-27 11:44:05.391 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 11:44:05.388 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 39.1612ms
2025-01-27 11:44:05.427 +03:00 [INF] Sending file. Request path: '/Images/guitar-5836611_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\guitar-5836611_1280.jpg'
2025-01-27 11:44:05.433 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 11:44:05.436 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/guitar-5836611_1280.jpg - 200 155904 image/jpeg 94.238ms
2025-01-27 11:44:05.405 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/styles.css - 404 0 null 62.2563ms
2025-01-27 11:44:05.451 +03:00 [INF] Sending file. Request path: '/Images/guitar-756326_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\guitar-756326_1280.jpg'
2025-01-27 11:44:05.454 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/Home/styles.css, Response status code: 404
2025-01-27 11:44:05.456 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/guitar-756326_1280.jpg - 200 171111 image/jpeg 113.6615ms
2025-01-27 11:44:05.356 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/wallet-2292428_1280.jpg - null null
2025-01-27 11:44:05.469 +03:00 [INF] The file /Images/wallet-2292428_1280.jpg was not modified
2025-01-27 11:44:05.359 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 11:44:05.471 +03:00 [INF] Sending file. Request path: '/Images/instrument-6756408_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\instrument-6756408_1280.jpg'
2025-01-27 11:44:05.476 +03:00 [INF] Sending file. Request path: '/Images/guitar-490310_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\guitar-490310_1280.jpg'
2025-01-27 11:44:05.481 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/instrument-6756408_1280.jpg - 200 336726 image/jpeg 138.6596ms
2025-01-27 11:44:05.486 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/guitar-490310_1280.jpg - 200 401698 image/jpeg 143.4917ms
2025-01-27 11:44:05.470 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/wallet-2292428_1280.jpg - 304 null image/jpeg 114.9873ms
2025-01-27 11:44:05.491 +03:00 [INF] Sending file. Request path: '/Images/floor-1256804_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\floor-1256804_1280.jpg'
2025-01-27 11:44:05.498 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 138.9833ms
2025-01-27 11:44:05.507 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/floor-1256804_1280.jpg - 200 435189 image/jpeg 164.8254ms
2025-01-27 11:44:17.247 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7298/api/ShoppingCart/view - application/json 12
2025-01-27 11:44:17.251 +03:00 [INF] CORS policy execution successful.
2025-01-27 11:44:17.252 +03:00 [INF] Executing endpoint 'apiProject.Controllers.ShoppingCartController.ViewCart (MyShop)'
2025-01-27 11:44:17.255 +03:00 [INF] Route matched with {action = "ViewCart", controller = "ShoppingCart"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ViewCart(ViewCartQuery) on controller apiProject.Controllers.ShoppingCartController (MyShop).
2025-01-27 11:44:17.287 +03:00 [INF] Executed DbCommand (20ms) [Parameters=[@__request_UserId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[Id], [s].[ProductId], [s].[ProductName], [s].[Quantity], [s].[UserId], [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity]
FROM [ShoppingCarts] AS [s]
INNER JOIN [Products] AS [p] ON [s].[ProductId] = [p].[Id]
WHERE [s].[UserId] = @__request_UserId_0
2025-01-27 11:44:17.301 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ShoppingDTO, MyShop.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 11:44:17.344 +03:00 [INF] Executed action apiProject.Controllers.ShoppingCartController.ViewCart (MyShop) in 87.5741ms
2025-01-27 11:44:17.347 +03:00 [INF] Executed endpoint 'apiProject.Controllers.ShoppingCartController.ViewCart (MyShop)'
2025-01-27 11:44:17.348 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7298/api/ShoppingCart/view - 200 null application/json; charset=utf-8 101.8406ms
2025-01-27 11:44:29.945 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7298/api/ShoppingCart/view - application/json 12
2025-01-27 11:44:29.948 +03:00 [INF] CORS policy execution successful.
2025-01-27 11:44:29.950 +03:00 [INF] Executing endpoint 'apiProject.Controllers.ShoppingCartController.ViewCart (MyShop)'
2025-01-27 11:44:29.950 +03:00 [INF] Route matched with {action = "ViewCart", controller = "ShoppingCart"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ViewCart(ViewCartQuery) on controller apiProject.Controllers.ShoppingCartController (MyShop).
2025-01-27 11:44:29.956 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__request_UserId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[Id], [s].[ProductId], [s].[ProductName], [s].[Quantity], [s].[UserId], [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity]
FROM [ShoppingCarts] AS [s]
INNER JOIN [Products] AS [p] ON [s].[ProductId] = [p].[Id]
WHERE [s].[UserId] = @__request_UserId_0
2025-01-27 11:44:29.961 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ShoppingDTO, MyShop.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 11:44:29.993 +03:00 [INF] Executed action apiProject.Controllers.ShoppingCartController.ViewCart (MyShop) in 41.3001ms
2025-01-27 11:44:29.996 +03:00 [INF] Executed endpoint 'apiProject.Controllers.ShoppingCartController.ViewCart (MyShop)'
2025-01-27 11:44:29.997 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7298/api/ShoppingCart/view - 200 null application/json; charset=utf-8 52.5561ms
2025-01-27 11:44:32.316 +03:00 [INF] Request starting HTTP/2 DELETE https://localhost:7298/api/ShoppingCart/delete - application/json 44
2025-01-27 11:44:32.333 +03:00 [INF] CORS policy execution successful.
2025-01-27 11:44:32.338 +03:00 [INF] Executing endpoint 'apiProject.Controllers.ShoppingCartController.RemoveFromCart (MyShop)'
2025-01-27 11:44:32.346 +03:00 [INF] Route matched with {action = "RemoveFromCart", controller = "ShoppingCart"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RemoveFromCart(RemoveFromCartCommand) on controller apiProject.Controllers.ShoppingCartController (MyShop).
2025-01-27 11:44:32.367 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__request_UserId_0='?' (DbType = Int32), @__request_ProductName_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [s].[Id], [s].[ProductId], [s].[ProductName], [s].[Quantity], [s].[UserId]
FROM [ShoppingCarts] AS [s]
WHERE [s].[UserId] = @__request_UserId_0 AND [s].[ProductName] = @__request_ProductName_1
2025-01-27 11:44:32.397 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [ShoppingCarts]
OUTPUT 1
WHERE [Id] = @p0;
2025-01-27 11:44:32.406 +03:00 [INF] Executing StatusCodeResult, setting HTTP status code 204
2025-01-27 11:44:32.410 +03:00 [INF] Executed action apiProject.Controllers.ShoppingCartController.RemoveFromCart (MyShop) in 62.0536ms
2025-01-27 11:44:32.413 +03:00 [INF] Executed endpoint 'apiProject.Controllers.ShoppingCartController.RemoveFromCart (MyShop)'
2025-01-27 11:44:32.413 +03:00 [INF] Request finished HTTP/2 DELETE https://localhost:7298/api/ShoppingCart/delete - 204 null null 97.8627ms
2025-01-27 11:44:34.790 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7298/api/ShoppingCart/view - application/json 12
2025-01-27 11:44:34.801 +03:00 [INF] CORS policy execution successful.
2025-01-27 11:44:34.805 +03:00 [INF] Executing endpoint 'apiProject.Controllers.ShoppingCartController.ViewCart (MyShop)'
2025-01-27 11:44:34.808 +03:00 [INF] Route matched with {action = "ViewCart", controller = "ShoppingCart"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ViewCart(ViewCartQuery) on controller apiProject.Controllers.ShoppingCartController (MyShop).
2025-01-27 11:44:34.818 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__request_UserId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[Id], [s].[ProductId], [s].[ProductName], [s].[Quantity], [s].[UserId], [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity]
FROM [ShoppingCarts] AS [s]
INNER JOIN [Products] AS [p] ON [s].[ProductId] = [p].[Id]
WHERE [s].[UserId] = @__request_UserId_0
2025-01-27 11:44:34.825 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ShoppingDTO, MyShop.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 11:44:34.856 +03:00 [INF] Executed action apiProject.Controllers.ShoppingCartController.ViewCart (MyShop) in 44.239ms
2025-01-27 11:44:34.859 +03:00 [INF] Executed endpoint 'apiProject.Controllers.ShoppingCartController.ViewCart (MyShop)'
2025-01-27 11:44:34.861 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7298/api/ShoppingCart/view - 200 null application/json; charset=utf-8 72.6927ms
2025-01-27 11:44:36.699 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Payment - null null
2025-01-27 11:44:36.706 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Payment (MyShop)'
2025-01-27 11:44:36.711 +03:00 [INF] Route matched with {action = "Payment", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Payment(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 11:44:36.716 +03:00 [INF] Executing ViewResult, running view Payment.
2025-01-27 11:44:36.753 +03:00 [INF] Executed ViewResult - view Payment executed in 37.9522ms.
2025-01-27 11:44:36.756 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Payment (MyShop) in 41.2149ms
2025-01-27 11:44:36.759 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Payment (MyShop)'
2025-01-27 11:44:36.762 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Payment - 200 null text/html; charset=utf-8 62.3701ms
2025-01-27 11:44:36.773 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/card.png - null null
2025-01-27 11:44:36.773 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 11:44:36.773 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/amex.png - null null
2025-01-27 11:44:36.773 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 11:44:36.773 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 11:44:36.773 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/discover.png - null null
2025-01-27 11:44:36.781 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 8.1079ms
2025-01-27 11:44:36.812 +03:00 [INF] Sending file. Request path: '/Images/amex.png'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\amex.png'
2025-01-27 11:44:36.785 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 12.3099ms
2025-01-27 11:44:36.788 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 15.2197ms
2025-01-27 11:44:36.773 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 11:44:36.797 +03:00 [INF] Sending file. Request path: '/Images/card.png'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\card.png'
2025-01-27 11:44:36.814 +03:00 [INF] Sending file. Request path: '/Images/discover.png'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\discover.png'
2025-01-27 11:44:36.817 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/amex.png - 200 14183 image/png 43.7072ms
2025-01-27 11:44:36.836 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/discover.png - 200 15437 image/png 62.7564ms
2025-01-27 11:44:36.820 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 11:44:36.824 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 11:44:36.833 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/card.png - 200 26920 image/png 60.8899ms
2025-01-27 11:44:36.772 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/visa.png - null null
2025-01-27 11:44:36.840 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 66.3794ms
2025-01-27 11:44:36.869 +03:00 [INF] Sending file. Request path: '/Images/visa.png'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\visa.png'
2025-01-27 11:44:36.870 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/visa.png - 200 17160 image/png 97.4215ms
2025-01-27 11:44:36.872 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7298/Payment/process-payment - application/json 12
2025-01-27 11:44:36.874 +03:00 [INF] CORS policy execution successful.
2025-01-27 11:44:36.879 +03:00 [INF] Executing endpoint 'MyShop.Controllers.PaymentController.ProcessPayment (MyShop)'
2025-01-27 11:44:36.887 +03:00 [INF] Route matched with {action = "ProcessPayment", controller = "Payment"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ProcessPayment(ProcessPaymentCommand) on controller MyShop.Controllers.PaymentController (MyShop).
2025-01-27 11:44:36.911 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__request_UserId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[id], [u].[RefreshToken], [u].[RefreshTokenExpiryTime], [u].[Role], [u].[address], [u].[email], [u].[name], [u].[number], [u].[password]
FROM [Usesrs] AS [u]
WHERE [u].[id] = @__request_UserId_0
2025-01-27 11:44:36.934 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__request_UserId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[Id], [s].[ProductId], [s].[ProductName], [s].[Quantity], [s].[UserId], [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity]
FROM [ShoppingCarts] AS [s]
INNER JOIN [Products] AS [p] ON [s].[ProductId] = [p].[Id]
WHERE [s].[UserId] = @__request_UserId_0
2025-01-27 11:44:36.942 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`1[[System.Single, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-01-27 11:44:36.951 +03:00 [INF] Executed action MyShop.Controllers.PaymentController.ProcessPayment (MyShop) in 61.0152ms
2025-01-27 11:44:36.953 +03:00 [INF] Executed endpoint 'MyShop.Controllers.PaymentController.ProcessPayment (MyShop)'
2025-01-27 11:44:36.954 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7298/Payment/process-payment - 200 null application/json; charset=utf-8 82.6687ms
2025-01-27 11:47:59.779 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7298/api/ShoppingCart/view - application/json 12
2025-01-27 11:47:59.802 +03:00 [INF] CORS policy execution successful.
2025-01-27 11:47:59.803 +03:00 [INF] Executing endpoint 'apiProject.Controllers.ShoppingCartController.ViewCart (MyShop)'
2025-01-27 11:47:59.804 +03:00 [INF] Route matched with {action = "ViewCart", controller = "ShoppingCart"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ViewCart(ViewCartQuery) on controller apiProject.Controllers.ShoppingCartController (MyShop).
2025-01-27 11:47:59.822 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__request_UserId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[Id], [s].[ProductId], [s].[ProductName], [s].[Quantity], [s].[UserId], [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity]
FROM [ShoppingCarts] AS [s]
INNER JOIN [Products] AS [p] ON [s].[ProductId] = [p].[Id]
WHERE [s].[UserId] = @__request_UserId_0
2025-01-27 11:47:59.826 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ShoppingDTO, MyShop.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 11:47:59.844 +03:00 [INF] Executed action apiProject.Controllers.ShoppingCartController.ViewCart (MyShop) in 38.3393ms
2025-01-27 11:47:59.845 +03:00 [INF] Executed endpoint 'apiProject.Controllers.ShoppingCartController.ViewCart (MyShop)'
2025-01-27 11:47:59.847 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7298/api/ShoppingCart/view - 200 null application/json; charset=utf-8 67.6673ms
2025-01-27 11:48:05.444 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7298/api/ShoppingCart/view - application/json 12
2025-01-27 11:48:05.462 +03:00 [INF] CORS policy execution successful.
2025-01-27 11:48:05.466 +03:00 [INF] Executing endpoint 'apiProject.Controllers.ShoppingCartController.ViewCart (MyShop)'
2025-01-27 11:48:05.470 +03:00 [INF] Route matched with {action = "ViewCart", controller = "ShoppingCart"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ViewCart(ViewCartQuery) on controller apiProject.Controllers.ShoppingCartController (MyShop).
2025-01-27 11:48:05.477 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__request_UserId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[Id], [s].[ProductId], [s].[ProductName], [s].[Quantity], [s].[UserId], [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity]
FROM [ShoppingCarts] AS [s]
INNER JOIN [Products] AS [p] ON [s].[ProductId] = [p].[Id]
WHERE [s].[UserId] = @__request_UserId_0
2025-01-27 11:48:05.486 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ShoppingDTO, MyShop.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 11:48:05.508 +03:00 [INF] Executed action apiProject.Controllers.ShoppingCartController.ViewCart (MyShop) in 34.7416ms
2025-01-27 11:48:05.510 +03:00 [INF] Executed endpoint 'apiProject.Controllers.ShoppingCartController.ViewCart (MyShop)'
2025-01-27 11:48:05.512 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7298/api/ShoppingCart/view - 200 null application/json; charset=utf-8 67.4757ms
2025-01-27 11:48:11.079 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Index - null null
2025-01-27 11:48:11.094 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 11:48:11.097 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 11:48:11.100 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 11:48:11.119 +03:00 [INF] Executed ViewResult - view Index executed in 18.8171ms.
2025-01-27 11:48:11.120 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 20.1448ms
2025-01-27 11:48:11.121 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 11:48:11.125 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Index - 200 null text/html; charset=utf-8 45.9427ms
2025-01-27 11:48:11.137 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 11:48:11.137 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 11:48:11.137 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 11:48:11.137 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 11:48:11.153 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 16.2084ms
2025-01-27 11:48:11.156 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 19.194ms
2025-01-27 11:48:11.163 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 11:48:11.178 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 11:48:11.169 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 31.6604ms
2025-01-27 11:48:11.146 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 9.5676ms
2025-01-27 11:56:28.986 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7298/api/Products/createProduct - multipart/form-data; boundary=--------------------------009425414804501092930251 363310
2025-01-27 11:56:28.995 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.CreateProduct (MyShop)'
2025-01-27 11:56:28.996 +03:00 [INF] Route matched with {action = "CreateProduct", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ProductResponse]] CreateProduct(CreateProductCommand) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 11:56:29.025 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__request_CategoryId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Name]
FROM [category] AS [c]
WHERE [c].[Id] = @__request_CategoryId_0
2025-01-27 11:56:29.050 +03:00 [INF] Executed DbCommand (17ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (DbType = Boolean), @p5='?' (Size = 4000), @p6='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Products] ([BrandId], [CtegoryId], [Description], [ImagePath], [IsPaid], [Name], [Price], [StockQuantity])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-01-27 11:56:29.056 +03:00 [INF] Executing OkObjectResult, writing value of type 'ProductResponse'.
2025-01-27 11:56:29.057 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.CreateProduct (MyShop) in 59.2792ms
2025-01-27 11:56:29.059 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.CreateProduct (MyShop)'
2025-01-27 11:56:29.060 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7298/api/Products/createProduct - 200 null application/json; charset=utf-8 73.8767ms
2025-01-27 12:02:51.551 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7298/api/Products/createProduct - multipart/form-data; boundary=--------------------------889989241921893084099761 16326
2025-01-27 12:02:51.556 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.CreateProduct (MyShop)'
2025-01-27 12:02:51.558 +03:00 [INF] Route matched with {action = "CreateProduct", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ProductResponse]] CreateProduct(CreateProductCommand) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 12:02:51.599 +03:00 [INF] Executed DbCommand (14ms) [Parameters=[@__request_CategoryId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Name]
FROM [category] AS [c]
WHERE [c].[Id] = @__request_CategoryId_0
2025-01-27 12:02:51.616 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (DbType = Boolean), @p5='?' (Size = 4000), @p6='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Products] ([BrandId], [CtegoryId], [Description], [ImagePath], [IsPaid], [Name], [Price], [StockQuantity])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-01-27 12:02:51.622 +03:00 [INF] Executing OkObjectResult, writing value of type 'ProductResponse'.
2025-01-27 12:02:51.623 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.CreateProduct (MyShop) in 62.0649ms
2025-01-27 12:02:51.624 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.CreateProduct (MyShop)'
2025-01-27 12:02:51.625 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7298/api/Products/createProduct - 200 null application/json; charset=utf-8 76.571ms
2025-01-27 12:02:56.173 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/products?category=Drums%20&%20Percussion - null null
2025-01-27 12:02:56.181 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 12:02:56.182 +03:00 [INF] Route matched with {action = "Products", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Products(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 12:02:56.184 +03:00 [INF] Executing ViewResult, running view Products.
2025-01-27 12:02:56.197 +03:00 [INF] Executed ViewResult - view Products executed in 13.6576ms.
2025-01-27 12:02:56.199 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Products (MyShop) in 15.9601ms
2025-01-27 12:02:56.202 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 12:02:56.204 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/products?category=Drums%20&%20Percussion - 200 null text/html; charset=utf-8 31.7029ms
2025-01-27 12:02:56.214 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 12:02:56.216 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 12:02:56.214 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 12:02:56.217 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 3.544ms
2025-01-27 12:02:56.233 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 18.9546ms
2025-01-27 12:02:56.249 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 12:02:56.217 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 12:02:56.248 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 31.607ms
2025-01-27 12:02:56.240 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 12:02:56.257 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 40.7608ms
2025-01-27 12:02:56.266 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Drums  - null null
2025-01-27 12:02:56.273 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 12:02:56.275 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 12:02:56.286 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 12:02:56.296 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MyShop.API.Controllers.ProductDto, MyShop, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 12:02:56.298 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 21.3387ms
2025-01-27 12:02:56.304 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 12:02:56.307 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Drums  - 200 null application/json; charset=utf-8 40.8327ms
2025-01-27 12:02:56.310 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/644bd919-5ab5-41fa-be44-6ca5c0ac8c7f_IMG_0069__60953.jpg - null null
2025-01-27 12:02:56.311 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/76baa1b0-8a1e-464e-bf01-b49dbbe09e78_IMG_20230504_111833.jpg - null null
2025-01-27 12:02:56.311 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/1d9ade06-eea3-4f73-9a03-a58d6522c4dd_339309307_1202944837249554_344406632706968113_n__69997.jpg - null null
2025-01-27 12:02:56.311 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/acd9764c-a970-4529-a8b5-341fef0e6fef_Conga-Set-Rope-Tuned.jpg - null null
2025-01-27 12:02:56.310 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/ffb1aac4-fcc5-431c-926f-83e9c7eba78a_images.jpg - null null
2025-01-27 12:02:56.322 +03:00 [INF] The file /images/76baa1b0-8a1e-464e-bf01-b49dbbe09e78_IMG_20230504_111833.jpg was not modified
2025-01-27 12:02:56.325 +03:00 [INF] The file /images/1d9ade06-eea3-4f73-9a03-a58d6522c4dd_339309307_1202944837249554_344406632706968113_n__69997.jpg was not modified
2025-01-27 12:02:56.330 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/76baa1b0-8a1e-464e-bf01-b49dbbe09e78_IMG_20230504_111833.jpg - 304 null image/jpeg 18.7907ms
2025-01-27 12:02:56.331 +03:00 [INF] Sending file. Request path: '/images/ffb1aac4-fcc5-431c-926f-83e9c7eba78a_images.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\images\ffb1aac4-fcc5-431c-926f-83e9c7eba78a_images.jpg'
2025-01-27 12:02:56.332 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/1d9ade06-eea3-4f73-9a03-a58d6522c4dd_339309307_1202944837249554_344406632706968113_n__69997.jpg - 304 null image/jpeg 21.0185ms
2025-01-27 12:02:56.345 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/ffb1aac4-fcc5-431c-926f-83e9c7eba78a_images.jpg - 200 14378 image/jpeg 34.5619ms
2025-01-27 12:02:56.327 +03:00 [INF] The file /images/acd9764c-a970-4529-a8b5-341fef0e6fef_Conga-Set-Rope-Tuned.jpg was not modified
2025-01-27 12:02:56.363 +03:00 [INF] Sending file. Request path: '/images/644bd919-5ab5-41fa-be44-6ca5c0ac8c7f_IMG_0069__60953.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\images\644bd919-5ab5-41fa-be44-6ca5c0ac8c7f_IMG_0069__60953.jpg'
2025-01-27 12:02:56.373 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/acd9764c-a970-4529-a8b5-341fef0e6fef_Conga-Set-Rope-Tuned.jpg - 304 null image/jpeg 61.7765ms
2025-01-27 12:02:56.374 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/644bd919-5ab5-41fa-be44-6ca5c0ac8c7f_IMG_0069__60953.jpg - 200 361655 image/jpeg 64.0919ms
2025-01-27 12:04:25.213 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/SearchList - null null
2025-01-27 12:04:25.230 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.SearchList (MyShop)'
2025-01-27 12:04:25.231 +03:00 [INF] Route matched with {action = "SearchList", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult SearchList(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 12:04:25.233 +03:00 [INF] Executing ViewResult, running view SearchList.
2025-01-27 12:04:25.255 +03:00 [INF] Executed ViewResult - view SearchList executed in 23.0768ms.
2025-01-27 12:04:25.258 +03:00 [INF] Executed action MyShop.Controllers.HomeController.SearchList (MyShop) in 26.1749ms
2025-01-27 12:04:25.260 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.SearchList (MyShop)'
2025-01-27 12:04:25.261 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/SearchList - 200 null text/html; charset=utf-8 47.8871ms
2025-01-27 12:04:25.275 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 12:04:25.275 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 12:04:25.277 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 12:04:25.295 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 19.9219ms
2025-01-27 12:04:25.276 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 12:04:25.307 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 12:04:25.294 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 18.836ms
2025-01-27 12:04:25.309 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 33.8501ms
2025-01-27 12:04:25.330 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Drums & Percussion - null null
2025-01-27 12:04:25.330 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 12:04:25.337 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 12:04:25.343 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 65.2851ms
2025-01-27 12:04:25.346 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 12:04:25.366 +03:00 [INF] Executed DbCommand (15ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 12:04:25.373 +03:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-01-27 12:04:25.380 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 30.545ms
2025-01-27 12:04:25.392 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 12:04:25.394 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Drums & Percussion - 404 null text/plain; charset=utf-8 64.9812ms
2025-01-27 12:04:28.484 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/SearchBrand - null null
2025-01-27 12:04:28.496 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.SearchBrand (MyShop)'
2025-01-27 12:04:28.498 +03:00 [INF] Route matched with {action = "SearchBrand", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult SearchBrand(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 12:04:28.503 +03:00 [INF] Executing ViewResult, running view SearchBrand.
2025-01-27 12:04:28.511 +03:00 [INF] Executed ViewResult - view SearchBrand executed in 9.2852ms.
2025-01-27 12:04:28.513 +03:00 [INF] Executed action MyShop.Controllers.HomeController.SearchBrand (MyShop) in 10.6699ms
2025-01-27 12:04:28.514 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.SearchBrand (MyShop)'
2025-01-27 12:04:28.515 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/SearchBrand - 200 null text/html; charset=utf-8 31.6036ms
2025-01-27 12:04:28.527 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 12:04:28.530 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 12:04:28.531 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 4.7775ms
2025-01-27 12:04:28.530 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 12:04:28.530 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 12:04:28.539 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 9.4014ms
2025-01-27 12:04:28.549 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category-and-brand?categoryName=Drums%20&%20Percussion&brandName=Yamaha - null null
2025-01-27 12:04:28.542 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 12:04:28.558 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryAndBrand (MyShop)'
2025-01-27 12:04:28.545 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 14.6545ms
2025-01-27 12:04:28.561 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 31.0504ms
2025-01-27 12:04:28.562 +03:00 [INF] Route matched with {action = "GetProductsByCategoryAndBrand", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[ProductDTO]]] GetProductsByCategoryAndBrand(System.String, System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 12:04:28.566 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 12:04:28.587 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__request_CategoryName_0='?' (Size = 4000), @__request_BrandName_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name], [b].[Id], [b].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
LEFT JOIN [Brands] AS [b] ON [p].[BrandId] = [b].[Id]
WHERE [c].[Name] = @__request_CategoryName_0 AND [b].[Id] IS NOT NULL AND [b].[Name] = @__request_BrandName_1
2025-01-27 12:04:28.593 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ProducctDTO, MyShop.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 12:04:28.601 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryAndBrand (MyShop) in 24.9938ms
2025-01-27 12:04:28.603 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryAndBrand (MyShop)'
2025-01-27 12:04:28.610 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category-and-brand?categoryName=Drums%20&%20Percussion&brandName=Yamaha - 200 null application/json; charset=utf-8 61.0016ms
2025-01-27 12:07:10.495 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7298/api/Products/createProduct - multipart/form-data; boundary=--------------------------366600864047344685372221 933650
2025-01-27 12:07:10.498 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.CreateProduct (MyShop)'
2025-01-27 12:07:10.500 +03:00 [INF] Route matched with {action = "CreateProduct", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ProductResponse]] CreateProduct(CreateProductCommand) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 12:07:10.530 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__request_CategoryId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Name]
FROM [category] AS [c]
WHERE [c].[Id] = @__request_CategoryId_0
2025-01-27 12:07:10.544 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (DbType = Boolean), @p5='?' (Size = 4000), @p6='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Products] ([BrandId], [CtegoryId], [Description], [ImagePath], [IsPaid], [Name], [Price], [StockQuantity])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-01-27 12:07:10.547 +03:00 [INF] Executing OkObjectResult, writing value of type 'ProductResponse'.
2025-01-27 12:07:10.548 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.CreateProduct (MyShop) in 42.9368ms
2025-01-27 12:07:10.549 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.CreateProduct (MyShop)'
2025-01-27 12:07:10.551 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7298/api/Products/createProduct - 200 null application/json; charset=utf-8 55.6277ms
2025-01-27 12:07:15.000 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 12:07:15.007 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 7.2419ms
2025-01-27 12:07:18.667 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 12:07:18.674 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 6.8936ms
2025-01-27 12:07:18.692 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/76baa1b0-8a1e-464e-bf01-b49dbbe09e78_IMG_20230504_111833.jpg - null null
2025-01-27 12:07:18.692 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/644bd919-5ab5-41fa-be44-6ca5c0ac8c7f_IMG_0069__60953.jpg - null null
2025-01-27 12:07:18.701 +03:00 [INF] The file /images/76baa1b0-8a1e-464e-bf01-b49dbbe09e78_IMG_20230504_111833.jpg was not modified
2025-01-27 12:07:18.692 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/ffb1aac4-fcc5-431c-926f-83e9c7eba78a_images.jpg - null null
2025-01-27 12:07:18.707 +03:00 [INF] The file /images/644bd919-5ab5-41fa-be44-6ca5c0ac8c7f_IMG_0069__60953.jpg was not modified
2025-01-27 12:07:18.707 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/76baa1b0-8a1e-464e-bf01-b49dbbe09e78_IMG_20230504_111833.jpg - 304 null image/jpeg 14.8766ms
2025-01-27 12:07:18.692 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/acd9764c-a970-4529-a8b5-341fef0e6fef_Conga-Set-Rope-Tuned.jpg - null null
2025-01-27 12:07:18.719 +03:00 [INF] The file /images/ffb1aac4-fcc5-431c-926f-83e9c7eba78a_images.jpg was not modified
2025-01-27 12:07:18.721 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/644bd919-5ab5-41fa-be44-6ca5c0ac8c7f_IMG_0069__60953.jpg - 304 null image/jpeg 28.86ms
2025-01-27 12:07:18.727 +03:00 [INF] The file /images/acd9764c-a970-4529-a8b5-341fef0e6fef_Conga-Set-Rope-Tuned.jpg was not modified
2025-01-27 12:07:18.727 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/ffb1aac4-fcc5-431c-926f-83e9c7eba78a_images.jpg - 304 null image/jpeg 35.0138ms
2025-01-27 12:07:18.732 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/acd9764c-a970-4529-a8b5-341fef0e6fef_Conga-Set-Rope-Tuned.jpg - 304 null image/jpeg 39.9437ms
2025-01-27 12:07:22.917 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/products?category=Drums%20&%20Percussion - null null
2025-01-27 12:07:22.937 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 12:07:22.940 +03:00 [INF] Route matched with {action = "Products", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Products(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 12:07:22.943 +03:00 [INF] Executing ViewResult, running view Products.
2025-01-27 12:07:22.951 +03:00 [INF] Executed ViewResult - view Products executed in 8.3181ms.
2025-01-27 12:07:22.954 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Products (MyShop) in 11.0858ms
2025-01-27 12:07:22.956 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 12:07:22.957 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/products?category=Drums%20&%20Percussion - 200 null text/html; charset=utf-8 40.849ms
2025-01-27 12:07:22.963 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 12:07:22.968 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 12:07:22.963 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 12:07:22.969 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 12:07:22.972 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 8.8116ms
2025-01-27 12:07:22.985 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Drums  - null null
2025-01-27 12:07:22.976 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 8.1178ms
2025-01-27 12:07:23.001 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 12:07:23.009 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 12:07:22.993 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 12:07:22.979 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 15.8666ms
2025-01-27 12:07:23.018 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 12:07:23.006 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 37.3414ms
2025-01-27 12:07:23.022 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 12:07:23.026 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/favicon.ico - null null
2025-01-27 12:07:23.030 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MyShop.API.Controllers.ProductDto, MyShop, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 12:07:23.035 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 23.8866ms
2025-01-27 12:07:23.039 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 12:07:23.041 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Drums  - 200 null application/json; charset=utf-8 56.2615ms
2025-01-27 12:07:23.043 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/5a1c2d01-29a8-4457-9872-cad7b63fef16_YAMAHA_LIVECUSTOMHYBRID_UZUCHARCOALSUNBURST_10121622-1__44710.jpg - null null
2025-01-27 12:07:23.050 +03:00 [INF] Sending file. Request path: '/favicon.ico'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\favicon.ico'
2025-01-27 12:07:23.052 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/favicon.ico - 200 5430 image/x-icon 26.6587ms
2025-01-27 12:07:23.088 +03:00 [INF] Sending file. Request path: '/images/5a1c2d01-29a8-4457-9872-cad7b63fef16_YAMAHA_LIVECUSTOMHYBRID_UZUCHARCOALSUNBURST_10121622-1__44710.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\images\5a1c2d01-29a8-4457-9872-cad7b63fef16_YAMAHA_LIVECUSTOMHYBRID_UZUCHARCOALSUNBURST_10121622-1__44710.jpg'
2025-01-27 12:07:23.090 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/5a1c2d01-29a8-4457-9872-cad7b63fef16_YAMAHA_LIVECUSTOMHYBRID_UZUCHARCOALSUNBURST_10121622-1__44710.jpg - 200 930539 image/jpeg 47.0954ms
2025-01-27 12:07:33.985 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/product?name=Yamaha%20Live%20Custom%20Oak%20Shell%20Pack - null null
2025-01-27 12:07:33.991 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Product (MyShop)'
2025-01-27 12:07:33.993 +03:00 [INF] Route matched with {action = "Product", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Product(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 12:07:33.995 +03:00 [INF] Executing ViewResult, running view Product.
2025-01-27 12:07:34.003 +03:00 [INF] Executed ViewResult - view Product executed in 7.9812ms.
2025-01-27 12:07:34.005 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Product (MyShop) in 10.5266ms
2025-01-27 12:07:34.007 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Product (MyShop)'
2025-01-27 12:07:34.008 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/product?name=Yamaha%20Live%20Custom%20Oak%20Shell%20Pack - 200 null text/html; charset=utf-8 23.2495ms
2025-01-27 12:07:34.015 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 12:07:34.015 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 12:07:34.021 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 5.4535ms
2025-01-27 12:07:34.021 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 12:07:34.023 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 12:07:34.029 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 12:07:34.025 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 9.7023ms
2025-01-27 12:07:34.034 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 12.6981ms
2025-01-27 12:07:34.061 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 12:07:34.045 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/reviews/Yamaha Live Custom Oak Shell Pack - application/json null
2025-01-27 12:07:34.063 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 40.8587ms
2025-01-27 12:07:34.075 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetReviews (MyShop)'
2025-01-27 12:07:34.079 +03:00 [INF] Route matched with {action = "GetReviews", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetReviews(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 12:07:34.091 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__productName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [u].[name] AS [UserName], [p].[ReviewText]
FROM [ProductReviews] AS [p]
INNER JOIN [Usesrs] AS [u] ON [p].[UserId] = [u].[id]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE [p0].[Name] = @__productName_0
2025-01-27 12:07:34.095 +03:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-01-27 12:07:34.096 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetReviews (MyShop) in 14.3097ms
2025-01-27 12:07:34.097 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetReviews (MyShop)'
2025-01-27 12:07:34.100 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/reviews/Yamaha Live Custom Oak Shell Pack - 404 null text/plain; charset=utf-8 55.209ms
2025-01-27 12:07:36.235 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7298/api/Products/GetProductByName - application/json 44
2025-01-27 12:07:36.240 +03:00 [INF] CORS policy execution successful.
2025-01-27 12:07:36.242 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductByName (MyShop)'
2025-01-27 12:07:36.243 +03:00 [INF] Route matched with {action = "GetProductByName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductByName(GetProductByNameQuery) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 12:07:36.251 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__ToLower_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity]
FROM [Products] AS [p]
WHERE LOWER([p].[Name]) = @__ToLower_0
2025-01-27 12:07:36.256 +03:00 [INF] Executing OkObjectResult, writing value of type 'ProductDto'.
2025-01-27 12:07:36.262 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductByName (MyShop) in 17.1457ms
2025-01-27 12:07:36.265 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductByName (MyShop)'
2025-01-27 12:07:36.268 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7298/api/Products/GetProductByName - 200 null application/json; charset=utf-8 32.9477ms
2025-01-27 12:07:49.590 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 12:07:49.599 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 8.9855ms
2025-01-27 12:07:49.620 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/1d9ade06-eea3-4f73-9a03-a58d6522c4dd_339309307_1202944837249554_344406632706968113_n__69997.jpg - null null
2025-01-27 12:07:49.623 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/ffb1aac4-fcc5-431c-926f-83e9c7eba78a_images.jpg - null null
2025-01-27 12:07:49.623 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/5a1c2d01-29a8-4457-9872-cad7b63fef16_YAMAHA_LIVECUSTOMHYBRID_UZUCHARCOALSUNBURST_10121622-1__44710.jpg - null null
2025-01-27 12:07:49.625 +03:00 [INF] The file /images/1d9ade06-eea3-4f73-9a03-a58d6522c4dd_339309307_1202944837249554_344406632706968113_n__69997.jpg was not modified
2025-01-27 12:07:49.633 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/1d9ade06-eea3-4f73-9a03-a58d6522c4dd_339309307_1202944837249554_344406632706968113_n__69997.jpg - 304 null image/jpeg 12.5843ms
2025-01-27 12:07:49.631 +03:00 [INF] The file /images/5a1c2d01-29a8-4457-9872-cad7b63fef16_YAMAHA_LIVECUSTOMHYBRID_UZUCHARCOALSUNBURST_10121622-1__44710.jpg was not modified
2025-01-27 12:07:49.628 +03:00 [INF] The file /images/ffb1aac4-fcc5-431c-926f-83e9c7eba78a_images.jpg was not modified
2025-01-27 12:07:49.643 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/ffb1aac4-fcc5-431c-926f-83e9c7eba78a_images.jpg - 304 null image/jpeg 20.1792ms
2025-01-27 12:07:49.639 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/5a1c2d01-29a8-4457-9872-cad7b63fef16_YAMAHA_LIVECUSTOMHYBRID_UZUCHARCOALSUNBURST_10121622-1__44710.jpg - 304 null image/jpeg 16.3265ms
2025-01-27 12:07:57.252 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Index - null null
2025-01-27 12:07:57.264 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 12:07:57.267 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 12:07:57.268 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 12:07:57.273 +03:00 [INF] Executed ViewResult - view Index executed in 4.6658ms.
2025-01-27 12:07:57.274 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 5.847ms
2025-01-27 12:07:57.276 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 12:07:57.277 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Index - 200 null text/html; charset=utf-8 25.6083ms
2025-01-27 12:07:57.299 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 12:07:57.299 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 12:07:57.301 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 12:07:57.299 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 12:07:57.305 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 6.2516ms
2025-01-27 12:07:57.309 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 9.9258ms
2025-01-27 12:07:57.316 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 16.5582ms
2025-01-27 12:07:57.344 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 12:07:57.347 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 12:07:57.354 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 54.0056ms
2025-01-27 12:08:13.797 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/products?category=Pro%20Audio - null null
2025-01-27 12:08:13.804 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 12:08:13.805 +03:00 [INF] Route matched with {action = "Products", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Products(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 12:08:13.807 +03:00 [INF] Executing ViewResult, running view Products.
2025-01-27 12:08:13.816 +03:00 [INF] Executed ViewResult - view Products executed in 8.3496ms.
2025-01-27 12:08:13.818 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Products (MyShop) in 10.725ms
2025-01-27 12:08:13.820 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 12:08:13.821 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/products?category=Pro%20Audio - 200 null text/html; charset=utf-8 24.3265ms
2025-01-27 12:08:13.826 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 12:08:13.826 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 12:08:13.831 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 12:08:13.831 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 12:08:13.839 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 7.4026ms
2025-01-27 12:08:13.846 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Pro Audio - null null
2025-01-27 12:08:13.832 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 6.2496ms
2025-01-27 12:08:13.867 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 12:08:13.835 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 8.8357ms
2025-01-27 12:08:13.868 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 36.5626ms
2025-01-27 12:08:13.870 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 12:08:13.871 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 12:08:13.873 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 12:08:13.896 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 12:08:13.902 +03:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-01-27 12:08:13.903 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 17.7413ms
2025-01-27 12:08:13.905 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 12:08:13.906 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Pro Audio - 404 null text/plain; charset=utf-8 60.356ms
2025-01-27 12:08:15.914 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 12:08:15.920 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 5.8486ms
2025-01-27 12:14:28.577 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7298/api/Products/createProduct - multipart/form-data; boundary=--------------------------858586538704046251770396 82780
2025-01-27 12:14:28.595 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.CreateProduct (MyShop)'
2025-01-27 12:14:28.597 +03:00 [INF] Route matched with {action = "CreateProduct", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ProductResponse]] CreateProduct(CreateProductCommand) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 12:14:28.618 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__request_CategoryId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Name]
FROM [category] AS [c]
WHERE [c].[Id] = @__request_CategoryId_0
2025-01-27 12:14:28.631 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (DbType = Boolean), @p5='?' (Size = 4000), @p6='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Products] ([BrandId], [CtegoryId], [Description], [ImagePath], [IsPaid], [Name], [Price], [StockQuantity])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-01-27 12:14:28.671 +03:00 [ERR] An exception occurred in the database while saving changes for context type 'MyShop.Infrastructure.Data.ApplicationDbContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): The INSERT statement conflicted with the FOREIGN KEY constraint "FK_Products_Brands_BrandId". The conflict occurred in database "products3", table "dbo.Brands", column 'Id'.
   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)
   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)
   at Microsoft.Data.SqlClient.SqlDataReader.ReadAsyncExecute(Task task, Object state)
   at Microsoft.Data.SqlClient.SqlDataReader.InvokeAsyncCall[T](SqlDataReaderBaseAsyncCallContext`1 context)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSetAsync(Int32 startCommandIndex, RelationalDataReader reader, CancellationToken cancellationToken)
ClientConnectionId:4cb6551d-bce3-4460-9738-b74f27e84062
Error Number:547,State:0,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSetAsync(Int32 startCommandIndex, RelationalDataReader reader, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): The INSERT statement conflicted with the FOREIGN KEY constraint "FK_Products_Brands_BrandId". The conflict occurred in database "products3", table "dbo.Brands", column 'Id'.
   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)
   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)
   at Microsoft.Data.SqlClient.SqlDataReader.ReadAsyncExecute(Task task, Object state)
   at Microsoft.Data.SqlClient.SqlDataReader.InvokeAsyncCall[T](SqlDataReaderBaseAsyncCallContext`1 context)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSetAsync(Int32 startCommandIndex, RelationalDataReader reader, CancellationToken cancellationToken)
ClientConnectionId:4cb6551d-bce3-4460-9738-b74f27e84062
Error Number:547,State:0,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSetAsync(Int32 startCommandIndex, RelationalDataReader reader, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
2025-01-27 12:14:28.851 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.CreateProduct (MyShop) in 253.0974ms
2025-01-27 12:14:28.854 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.CreateProduct (MyShop)'
2025-01-27 12:14:28.857 +03:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): The INSERT statement conflicted with the FOREIGN KEY constraint "FK_Products_Brands_BrandId". The conflict occurred in database "products3", table "dbo.Brands", column 'Id'.
   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)
   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)
   at Microsoft.Data.SqlClient.SqlDataReader.ReadAsyncExecute(Task task, Object state)
   at Microsoft.Data.SqlClient.SqlDataReader.InvokeAsyncCall[T](SqlDataReaderBaseAsyncCallContext`1 context)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSetAsync(Int32 startCommandIndex, RelationalDataReader reader, CancellationToken cancellationToken)
ClientConnectionId:4cb6551d-bce3-4460-9738-b74f27e84062
Error Number:547,State:0,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSetAsync(Int32 startCommandIndex, RelationalDataReader reader, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at CreateProductCommandHandler.Handle(CreateProductCommand request, CancellationToken cancellationToken) in C:\Users\user\Downloads\MyShop\MyShop.Application\Product\Commands\CreateProductCommand\CreateProductCommand.cs:line 102
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestPostProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestPreProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MyShop.API.Controllers.ProductsController.CreateProduct(CreateProductCommand request) in C:\Users\user\Downloads\MyShop\MyShop\Controllers\ProductController.cs:line 70
   at lambda_method163(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-01-27 12:14:28.899 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7298/api/Products/createProduct - 500 null text/plain; charset=utf-8 321.8229ms
2025-01-27 12:14:35.083 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7298/api/Products/createProduct - multipart/form-data; boundary=--------------------------140581408074977635214258 82780
2025-01-27 12:14:35.087 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.CreateProduct (MyShop)'
2025-01-27 12:14:35.088 +03:00 [INF] Route matched with {action = "CreateProduct", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ProductResponse]] CreateProduct(CreateProductCommand) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 12:14:35.094 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__request_CategoryId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Name]
FROM [category] AS [c]
WHERE [c].[Id] = @__request_CategoryId_0
2025-01-27 12:14:35.103 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (DbType = Boolean), @p5='?' (Size = 4000), @p6='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Products] ([BrandId], [CtegoryId], [Description], [ImagePath], [IsPaid], [Name], [Price], [StockQuantity])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-01-27 12:14:35.106 +03:00 [INF] Executing OkObjectResult, writing value of type 'ProductResponse'.
2025-01-27 12:14:35.107 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.CreateProduct (MyShop) in 17.8097ms
2025-01-27 12:14:35.108 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.CreateProduct (MyShop)'
2025-01-27 12:14:35.111 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7298/api/Products/createProduct - 200 null application/json; charset=utf-8 28.0285ms
2025-01-27 12:20:28.506 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7298/api/Products/createProduct - multipart/form-data; boundary=--------------------------598593196923717114482089 315814
2025-01-27 12:20:28.520 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.CreateProduct (MyShop)'
2025-01-27 12:20:28.522 +03:00 [INF] Route matched with {action = "CreateProduct", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ProductResponse]] CreateProduct(CreateProductCommand) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 12:20:28.533 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__request_CategoryId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Name]
FROM [category] AS [c]
WHERE [c].[Id] = @__request_CategoryId_0
2025-01-27 12:20:28.554 +03:00 [INF] Executed DbCommand (14ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (DbType = Boolean), @p5='?' (Size = 4000), @p6='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Products] ([BrandId], [CtegoryId], [Description], [ImagePath], [IsPaid], [Name], [Price], [StockQuantity])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-01-27 12:20:28.557 +03:00 [INF] Executing OkObjectResult, writing value of type 'ProductResponse'.
2025-01-27 12:20:28.559 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.CreateProduct (MyShop) in 35.6007ms
2025-01-27 12:20:28.561 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.CreateProduct (MyShop)'
2025-01-27 12:20:28.562 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7298/api/Products/createProduct - 200 null application/json; charset=utf-8 78.0145ms
2025-01-27 12:20:33.444 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/products?category=Pro%20Audio - null null
2025-01-27 12:20:33.461 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 12:20:33.461 +03:00 [INF] Route matched with {action = "Products", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Products(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 12:20:33.463 +03:00 [INF] Executing ViewResult, running view Products.
2025-01-27 12:20:33.473 +03:00 [INF] Executed ViewResult - view Products executed in 10.0457ms.
2025-01-27 12:20:33.475 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Products (MyShop) in 11.8736ms
2025-01-27 12:20:33.475 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 12:20:33.476 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/products?category=Pro%20Audio - 200 null text/html; charset=utf-8 32.1422ms
2025-01-27 12:20:33.495 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 12:20:33.496 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 12:20:33.500 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 5.1311ms
2025-01-27 12:20:33.496 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 12:20:33.496 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 12:20:33.509 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 12.9535ms
2025-01-27 12:20:33.516 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 20.5267ms
2025-01-27 12:20:33.526 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 12:20:33.531 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 12:20:33.522 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Pro Audio - null null
2025-01-27 12:20:33.546 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 49.8585ms
2025-01-27 12:20:33.552 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 12:20:33.558 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 12:20:33.571 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 12:20:33.577 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MyShop.API.Controllers.ProductDto, MyShop, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 12:20:33.579 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 19.0686ms
2025-01-27 12:20:33.580 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 12:20:33.581 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Pro Audio - 200 null application/json; charset=utf-8 58.7591ms
2025-01-27 12:20:33.587 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/27677f99-886d-4fad-a670-ba39b3039baa_EON615-CVR-WX_REAR_OPEN_CU_original.jpg - null null
2025-01-27 12:20:33.587 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/92773d03-33e5-49c3-a6ba-de4213b3f206_ev-re20-classic-black-and-white-microphone_0.jpg - null null
2025-01-27 12:20:33.607 +03:00 [INF] Sending file. Request path: '/images/92773d03-33e5-49c3-a6ba-de4213b3f206_ev-re20-classic-black-and-white-microphone_0.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\images\92773d03-33e5-49c3-a6ba-de4213b3f206_ev-re20-classic-black-and-white-microphone_0.jpg'
2025-01-27 12:20:33.609 +03:00 [INF] Sending file. Request path: '/images/27677f99-886d-4fad-a670-ba39b3039baa_EON615-CVR-WX_REAR_OPEN_CU_original.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\images\27677f99-886d-4fad-a670-ba39b3039baa_EON615-CVR-WX_REAR_OPEN_CU_original.jpg'
2025-01-27 12:20:33.609 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/92773d03-33e5-49c3-a6ba-de4213b3f206_ev-re20-classic-black-and-white-microphone_0.jpg - 200 79428 image/jpeg 22.2994ms
2025-01-27 12:20:33.611 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/27677f99-886d-4fad-a670-ba39b3039baa_EON615-CVR-WX_REAR_OPEN_CU_original.jpg - 200 312244 image/jpeg 24.0489ms
2025-01-27 12:20:49.881 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 12:20:49.887 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 5.447ms
2025-01-27 12:22:07.786 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-27 12:22:07.794 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 12:22:07.801 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 12:22:07.804 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 12:22:07.811 +03:00 [INF] Executed ViewResult - view Index executed in 6.8217ms.
2025-01-27 12:22:07.816 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 12.3709ms
2025-01-27 12:22:07.818 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 12:22:07.819 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 33.6039ms
2025-01-27 12:22:07.845 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 12:22:07.846 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 12:22:07.849 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 4.0022ms
2025-01-27 12:22:07.851 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 4.3736ms
2025-01-27 12:22:07.851 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 12:22:07.854 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 12:22:07.858 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 12:22:07.861 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 9.5337ms
2025-01-27 12:22:07.925 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 12:22:07.934 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 10.0935ms
2025-01-27 12:22:09.661 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/swagger/index.html - null null
2025-01-27 12:22:09.724 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/swagger/index.html - 200 null text/html;charset=utf-8 63.1927ms
2025-01-27 12:22:09.747 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 12:22:09.747 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 12:22:09.753 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 6.4683ms
2025-01-27 12:22:09.765 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 17.4233ms
2025-01-27 12:22:09.925 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/swagger/v1/swagger.json - null null
2025-01-27 12:22:10.058 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 133.1969ms
2025-01-27 12:22:27.287 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7298/api/Category/AddCategory - application/json 21
2025-01-27 12:22:27.299 +03:00 [INF] CORS policy execution successful.
2025-01-27 12:22:27.304 +03:00 [INF] Executing endpoint 'MyShop.Controllers.CategoryController.CreateCategory (MyShop)'
2025-01-27 12:22:27.310 +03:00 [INF] Route matched with {action = "CreateCategory", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateCategory(CreateCategoryCommand) on controller MyShop.Controllers.CategoryController (MyShop).
2025-01-27 12:22:27.432 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [category] ([Name])
OUTPUT INSERTED.[Id]
VALUES (@p0);
2025-01-27 12:22:27.439 +03:00 [INF] Executing CreatedAtActionResult, writing value of type 'MyShop.Domain.Entities.Ctegory'.
2025-01-27 12:22:27.457 +03:00 [INF] Executed action MyShop.Controllers.CategoryController.CreateCategory (MyShop) in 145.4032ms
2025-01-27 12:22:27.460 +03:00 [INF] Executed endpoint 'MyShop.Controllers.CategoryController.CreateCategory (MyShop)'
2025-01-27 12:22:27.461 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7298/api/Category/AddCategory - 201 null application/json; charset=utf-8 174.1557ms
2025-01-27 12:25:44.599 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7298/api/Products/createProduct - multipart/form-data; boundary=--------------------------236771169844024462002507 108452
2025-01-27 12:25:44.608 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.CreateProduct (MyShop)'
2025-01-27 12:25:44.611 +03:00 [INF] Route matched with {action = "CreateProduct", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ProductResponse]] CreateProduct(CreateProductCommand) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 12:25:44.618 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__request_CategoryId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Name]
FROM [category] AS [c]
WHERE [c].[Id] = @__request_CategoryId_0
2025-01-27 12:25:44.633 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (DbType = Boolean), @p5='?' (Size = 4000), @p6='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Products] ([BrandId], [CtegoryId], [Description], [ImagePath], [IsPaid], [Name], [Price], [StockQuantity])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-01-27 12:25:44.636 +03:00 [INF] Executing OkObjectResult, writing value of type 'ProductResponse'.
2025-01-27 12:25:44.638 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.CreateProduct (MyShop) in 25.4506ms
2025-01-27 12:25:44.639 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.CreateProduct (MyShop)'
2025-01-27 12:25:44.640 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7298/api/Products/createProduct - 200 null application/json; charset=utf-8 41.5223ms
2025-01-27 12:25:52.624 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-27 12:25:52.637 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 12:25:52.638 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 12:25:52.641 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 12:25:52.655 +03:00 [INF] Executed ViewResult - view Index executed in 13.7578ms.
2025-01-27 12:25:52.657 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 16.3015ms
2025-01-27 12:25:52.659 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 12:25:52.662 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 37.715ms
2025-01-27 12:25:52.688 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 12:25:52.690 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 12:25:52.694 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 5.7498ms
2025-01-27 12:25:52.696 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 12:25:52.698 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 8.2703ms
2025-01-27 12:25:52.701 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 12:25:52.704 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 8.8732ms
2025-01-27 12:25:52.714 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 12:25:52.777 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 12:25:52.797 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 20.9374ms
2025-01-27 12:25:58.049 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/products?category=Band%20&%20Orchestra - null null
2025-01-27 12:25:58.057 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 12:25:58.059 +03:00 [INF] Route matched with {action = "Products", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Products(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 12:25:58.062 +03:00 [INF] Executing ViewResult, running view Products.
2025-01-27 12:25:58.066 +03:00 [INF] Executed ViewResult - view Products executed in 4.1107ms.
2025-01-27 12:25:58.068 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Products (MyShop) in 5.8064ms
2025-01-27 12:25:58.069 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 12:25:58.070 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/products?category=Band%20&%20Orchestra - 200 null text/html; charset=utf-8 21.3471ms
2025-01-27 12:25:58.080 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 12:25:58.085 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 12:25:58.085 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 4.7376ms
2025-01-27 12:25:58.085 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 12:25:58.085 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 12:25:58.094 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 12:25:58.089 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 4.5646ms
2025-01-27 12:25:58.103 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 19.357ms
2025-01-27 12:25:58.117 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 12:25:58.119 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 33.9078ms
2025-01-27 12:25:58.124 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Band  - null null
2025-01-27 12:25:58.135 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 12:25:58.136 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 12:25:58.148 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 12:25:58.151 +03:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-01-27 12:25:58.152 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 12.8251ms
2025-01-27 12:25:58.153 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 12:25:58.154 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Band  - 404 null text/plain; charset=utf-8 32.0512ms
2025-01-27 12:26:54.129 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-27 12:26:54.440 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-27 12:26:54.443 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-27 12:26:54.514 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-27 12:26:54.518 +03:00 [INF] Hosting environment: Development
2025-01-27 12:26:54.519 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-27 12:26:55.035 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-27 12:26:55.293 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 12:26:55.313 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 12:26:55.347 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 12:26:55.469 +03:00 [INF] Executed ViewResult - view Index executed in 119.923ms.
2025-01-27 12:26:55.473 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 12:26:55.472 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 12:26:55.483 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 165.3536ms
2025-01-27 12:26:55.473 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 12:26:55.494 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 12:26:55.473 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 12:26:55.504 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 31.113ms
2025-01-27 12:26:55.505 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 32.4941ms
2025-01-27 12:26:55.513 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 12:26:55.510 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 488.0113ms
2025-01-27 12:26:55.507 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 33.9201ms
2025-01-27 12:26:55.532 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 12:26:55.566 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 93.2439ms
2025-01-27 12:26:58.039 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/products?category=Orchestra - null null
2025-01-27 12:26:58.053 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 12:26:58.057 +03:00 [INF] Route matched with {action = "Products", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Products(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 12:26:58.107 +03:00 [INF] Executing ViewResult, running view Products.
2025-01-27 12:26:58.137 +03:00 [INF] Executed ViewResult - view Products executed in 30.5412ms.
2025-01-27 12:26:58.139 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Products (MyShop) in 79.7421ms
2025-01-27 12:26:58.141 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 12:26:58.142 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/products?category=Orchestra - 200 null text/html; charset=utf-8 103.5761ms
2025-01-27 12:26:58.155 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 12:26:58.156 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 12:26:58.155 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 12:26:58.155 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 12:26:58.169 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 13.2033ms
2025-01-27 12:26:58.172 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 16.3995ms
2025-01-27 12:26:58.178 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 12:26:58.178 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Orchestra - null null
2025-01-27 12:26:58.161 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 5.3617ms
2025-01-27 12:26:58.180 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 24.1373ms
2025-01-27 12:26:58.193 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 12:26:58.195 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 12:26:58.217 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 12:26:59.825 +03:00 [INF] Executed DbCommand (43ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 12:26:59.925 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MyShop.API.Controllers.ProductDto, MyShop, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 12:26:59.937 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 1710.2515ms
2025-01-27 12:26:59.940 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 12:26:59.943 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/63d1d7cd-7448-4c00-8bbc-459aaf4f81cb_nto3rsnifszfk5v55ong.jpg - null null
2025-01-27 12:26:59.947 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Orchestra - 200 null application/json; charset=utf-8 1769.0467ms
2025-01-27 12:26:59.964 +03:00 [INF] Sending file. Request path: '/images/63d1d7cd-7448-4c00-8bbc-459aaf4f81cb_nto3rsnifszfk5v55ong.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\63d1d7cd-7448-4c00-8bbc-459aaf4f81cb_nto3rsnifszfk5v55ong.jpg'
2025-01-27 12:26:59.969 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/63d1d7cd-7448-4c00-8bbc-459aaf4f81cb_nto3rsnifszfk5v55ong.jpg - 200 106872 image/jpeg 25.9922ms
2025-01-27 12:30:56.573 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-27 12:30:56.595 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 12:30:56.597 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 12:30:56.600 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 12:30:56.616 +03:00 [INF] Executed ViewResult - view Index executed in 16.821ms.
2025-01-27 12:30:56.618 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 19.8163ms
2025-01-27 12:30:56.622 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 12:30:56.625 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 52.3418ms
2025-01-27 12:30:56.651 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 12:30:56.654 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 12:30:56.657 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 5.9033ms
2025-01-27 12:30:56.659 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 12:30:56.659 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 5.0624ms
2025-01-27 12:30:56.668 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 12:30:56.673 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 14.541ms
2025-01-27 12:30:56.676 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 12:30:56.688 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 12:30:56.708 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 20.2653ms
2025-01-27 12:30:58.214 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/swagger/index.html - null null
2025-01-27 12:30:58.276 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/swagger/index.html - 200 null text/html;charset=utf-8 61.5211ms
2025-01-27 12:30:58.295 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 12:30:58.295 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 12:30:58.299 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 4.7127ms
2025-01-27 12:30:58.315 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 20.161ms
2025-01-27 12:30:58.374 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/swagger/v1/swagger.json - null null
2025-01-27 12:30:58.495 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 121.0946ms
2025-01-27 12:31:22.904 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7298/api/Brand/AddBrand - application/json 21
2025-01-27 12:31:22.917 +03:00 [INF] CORS policy execution successful.
2025-01-27 12:31:22.924 +03:00 [INF] Executing endpoint 'MyShop.Controllers.BrandController.CreateCategory (MyShop)'
2025-01-27 12:31:22.930 +03:00 [INF] Route matched with {action = "CreateCategory", controller = "Brand"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateCategory(CreateBrandCommand) on controller MyShop.Controllers.BrandController (MyShop).
2025-01-27 12:31:23.176 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Brands] ([Name])
OUTPUT INSERTED.[Id]
VALUES (@p0);
2025-01-27 12:31:23.214 +03:00 [INF] Executing CreatedAtActionResult, writing value of type 'MyShop.Domain.Entities.Brand'.
2025-01-27 12:31:23.253 +03:00 [INF] Executed action MyShop.Controllers.BrandController.CreateCategory (MyShop) in 317.5153ms
2025-01-27 12:31:23.256 +03:00 [INF] Executed endpoint 'MyShop.Controllers.BrandController.CreateCategory (MyShop)'
2025-01-27 12:31:23.258 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7298/api/Brand/AddBrand - 201 null application/json; charset=utf-8 354.1608ms
2025-01-27 12:31:32.768 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7298/api/Products/createProduct - multipart/form-data; boundary=--------------------------207107580830605130052332 108449
2025-01-27 12:31:32.774 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.CreateProduct (MyShop)'
2025-01-27 12:31:32.779 +03:00 [INF] Route matched with {action = "CreateProduct", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ProductResponse]] CreateProduct(CreateProductCommand) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 12:31:32.893 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__request_CategoryId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Name]
FROM [category] AS [c]
WHERE [c].[Id] = @__request_CategoryId_0
2025-01-27 12:31:32.947 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (DbType = Boolean), @p5='?' (Size = 4000), @p6='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Products] ([BrandId], [CtegoryId], [Description], [ImagePath], [IsPaid], [Name], [Price], [StockQuantity])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-01-27 12:31:32.955 +03:00 [INF] Executing OkObjectResult, writing value of type 'ProductResponse'.
2025-01-27 12:31:32.961 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.CreateProduct (MyShop) in 179.4488ms
2025-01-27 12:31:32.963 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.CreateProduct (MyShop)'
2025-01-27 12:31:32.967 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7298/api/Products/createProduct - 200 null application/json; charset=utf-8 199.111ms
2025-01-27 12:31:51.586 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-27 12:31:51.592 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 12:31:51.594 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 12:31:51.597 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 12:31:51.605 +03:00 [INF] Executed ViewResult - view Index executed in 7.718ms.
2025-01-27 12:31:51.606 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 10.6448ms
2025-01-27 12:31:51.609 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 12:31:51.611 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 25.0188ms
2025-01-27 12:31:51.651 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 12:31:51.652 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 12:31:51.655 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 4.8478ms
2025-01-27 12:31:51.657 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 5.3481ms
2025-01-27 12:31:51.658 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 12:31:51.661 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 12:31:51.666 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 12:31:51.670 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 11.8567ms
2025-01-27 12:31:51.729 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 12:31:51.742 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 13.8479ms
2025-01-27 12:31:54.443 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/products?category=Orchestra - null null
2025-01-27 12:31:54.454 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 12:31:54.456 +03:00 [INF] Route matched with {action = "Products", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Products(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 12:31:54.459 +03:00 [INF] Executing ViewResult, running view Products.
2025-01-27 12:31:54.469 +03:00 [INF] Executed ViewResult - view Products executed in 9.6118ms.
2025-01-27 12:31:54.471 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Products (MyShop) in 12.2263ms
2025-01-27 12:31:54.472 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 12:31:54.474 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/products?category=Orchestra - 200 null text/html; charset=utf-8 30.6172ms
2025-01-27 12:31:54.483 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 12:31:54.486 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 3.2688ms
2025-01-27 12:31:54.488 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 12:31:54.492 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 12:31:54.488 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 12:31:54.487 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 12:31:54.502 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 14.2129ms
2025-01-27 12:31:54.509 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 21.8786ms
2025-01-27 12:31:54.524 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 12:31:54.523 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Orchestra - null null
2025-01-27 12:31:54.525 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 37.1431ms
2025-01-27 12:31:54.538 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 12:31:54.544 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 12:31:54.560 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 12:31:54.567 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MyShop.API.Controllers.ProductDto, MyShop, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 12:31:54.569 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 20.3439ms
2025-01-27 12:31:54.570 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 12:31:54.572 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Orchestra - 200 null application/json; charset=utf-8 49.0035ms
2025-01-27 12:31:54.574 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/bdce8fa2-58d1-4dfc-93c6-19c5d3cca86e_nto3rsnifszfk5v55ong.jpg - null null
2025-01-27 12:31:54.574 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/63d1d7cd-7448-4c00-8bbc-459aaf4f81cb_nto3rsnifszfk5v55ong.jpg - null null
2025-01-27 12:31:54.588 +03:00 [INF] The file /images/63d1d7cd-7448-4c00-8bbc-459aaf4f81cb_nto3rsnifszfk5v55ong.jpg was not modified
2025-01-27 12:31:54.589 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/63d1d7cd-7448-4c00-8bbc-459aaf4f81cb_nto3rsnifszfk5v55ong.jpg - 304 null image/jpeg 15.3193ms
2025-01-27 12:31:54.596 +03:00 [INF] Sending file. Request path: '/images/bdce8fa2-58d1-4dfc-93c6-19c5d3cca86e_nto3rsnifszfk5v55ong.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\images\bdce8fa2-58d1-4dfc-93c6-19c5d3cca86e_nto3rsnifszfk5v55ong.jpg'
2025-01-27 12:31:54.601 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/bdce8fa2-58d1-4dfc-93c6-19c5d3cca86e_nto3rsnifszfk5v55ong.jpg - 200 106872 image/jpeg 27.3259ms
2025-01-27 12:34:04.165 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7298/api/Products/createProduct - multipart/form-data; boundary=--------------------------527725685658366434247888 27712
2025-01-27 12:34:04.168 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.CreateProduct (MyShop)'
2025-01-27 12:34:04.169 +03:00 [INF] Route matched with {action = "CreateProduct", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ProductResponse]] CreateProduct(CreateProductCommand) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 12:34:04.177 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__request_CategoryId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Name]
FROM [category] AS [c]
WHERE [c].[Id] = @__request_CategoryId_0
2025-01-27 12:34:04.196 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (DbType = Boolean), @p5='?' (Size = 4000), @p6='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Products] ([BrandId], [CtegoryId], [Description], [ImagePath], [IsPaid], [Name], [Price], [StockQuantity])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-01-27 12:34:04.205 +03:00 [INF] Executing OkObjectResult, writing value of type 'ProductResponse'.
2025-01-27 12:34:04.209 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.CreateProduct (MyShop) in 38.7146ms
2025-01-27 12:34:04.211 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.CreateProduct (MyShop)'
2025-01-27 12:34:04.215 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7298/api/Products/createProduct - 200 null application/json; charset=utf-8 49.9481ms
2025-01-27 12:34:10.086 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/products?category=Orchestra - null null
2025-01-27 12:34:10.098 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 12:34:10.100 +03:00 [INF] Route matched with {action = "Products", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Products(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 12:34:10.105 +03:00 [INF] Executing ViewResult, running view Products.
2025-01-27 12:34:10.118 +03:00 [INF] Executed ViewResult - view Products executed in 12.9773ms.
2025-01-27 12:34:10.120 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Products (MyShop) in 15.7343ms
2025-01-27 12:34:10.122 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 12:34:10.123 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/products?category=Orchestra - 200 null text/html; charset=utf-8 38.2881ms
2025-01-27 12:34:10.136 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 12:34:10.137 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 12:34:10.136 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 12:34:10.136 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 12:34:10.164 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 27.9203ms
2025-01-27 12:34:10.172 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 35.8631ms
2025-01-27 12:34:10.179 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 12:34:10.147 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 11.2823ms
2025-01-27 12:34:10.175 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 37.9604ms
2025-01-27 12:34:10.182 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Orchestra - null null
2025-01-27 12:34:10.184 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 12:34:10.203 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 12:34:10.207 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 12:34:10.217 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 12:34:10.220 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MyShop.API.Controllers.ProductDto, MyShop, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 12:34:10.222 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 11.022ms
2025-01-27 12:34:10.223 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 12:34:10.225 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Orchestra - 200 null application/json; charset=utf-8 43.1977ms
2025-01-27 12:34:10.232 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/63d1d7cd-7448-4c00-8bbc-459aaf4f81cb_nto3rsnifszfk5v55ong.jpg - null null
2025-01-27 12:34:10.233 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/bdce8fa2-58d1-4dfc-93c6-19c5d3cca86e_nto3rsnifszfk5v55ong.jpg - null null
2025-01-27 12:34:10.232 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/d6e62181-0e10-49a0-a337-40bc660c4e2c_fum0hafxwx4ykcpk80um.jpg - null null
2025-01-27 12:34:10.238 +03:00 [INF] The file /images/63d1d7cd-7448-4c00-8bbc-459aaf4f81cb_nto3rsnifszfk5v55ong.jpg was not modified
2025-01-27 12:34:10.240 +03:00 [INF] The file /images/bdce8fa2-58d1-4dfc-93c6-19c5d3cca86e_nto3rsnifszfk5v55ong.jpg was not modified
2025-01-27 12:34:10.245 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/63d1d7cd-7448-4c00-8bbc-459aaf4f81cb_nto3rsnifszfk5v55ong.jpg - 304 null image/jpeg 12.2922ms
2025-01-27 12:34:10.245 +03:00 [INF] Sending file. Request path: '/images/d6e62181-0e10-49a0-a337-40bc660c4e2c_fum0hafxwx4ykcpk80um.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\images\d6e62181-0e10-49a0-a337-40bc660c4e2c_fum0hafxwx4ykcpk80um.jpg'
2025-01-27 12:34:10.247 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/bdce8fa2-58d1-4dfc-93c6-19c5d3cca86e_nto3rsnifszfk5v55ong.jpg - 304 null image/jpeg 14.1976ms
2025-01-27 12:34:10.252 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/d6e62181-0e10-49a0-a337-40bc660c4e2c_fum0hafxwx4ykcpk80um.jpg - 200 25851 image/jpeg 19.8545ms
2025-01-27 12:35:12.761 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/SearchList - null null
2025-01-27 12:35:12.777 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.SearchList (MyShop)'
2025-01-27 12:35:12.779 +03:00 [INF] Route matched with {action = "SearchList", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult SearchList(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 12:35:12.783 +03:00 [INF] Executing ViewResult, running view SearchList.
2025-01-27 12:35:12.802 +03:00 [INF] Executed ViewResult - view SearchList executed in 19.8232ms.
2025-01-27 12:35:12.806 +03:00 [INF] Executed action MyShop.Controllers.HomeController.SearchList (MyShop) in 25.5701ms
2025-01-27 12:35:12.809 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.SearchList (MyShop)'
2025-01-27 12:35:12.811 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/SearchList - 200 null text/html; charset=utf-8 50.2463ms
2025-01-27 12:35:12.824 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 12:35:12.828 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 12:35:12.829 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 12:35:12.842 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 14.5304ms
2025-01-27 12:35:12.828 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 12:35:12.855 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 12:35:12.830 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 6.5793ms
2025-01-27 12:35:12.867 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 38.5588ms
2025-01-27 12:35:12.875 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 12:35:12.875 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 46.5456ms
2025-01-27 12:35:12.878 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Band & Orchestra - null null
2025-01-27 12:35:12.887 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 12:35:12.890 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 12:35:12.901 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 12:35:12.907 +03:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-01-27 12:35:12.910 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 14.9852ms
2025-01-27 12:35:12.912 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 12:35:12.915 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Band & Orchestra - 404 null text/plain; charset=utf-8 37.3997ms
2025-01-27 12:36:37.882 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-27 12:36:38.165 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-27 12:36:38.169 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-27 12:36:38.245 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-27 12:36:38.249 +03:00 [INF] Hosting environment: Development
2025-01-27 12:36:38.250 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-27 12:36:38.870 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-27 12:36:39.117 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 12:36:39.136 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 12:36:39.171 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 12:36:39.270 +03:00 [INF] Executed ViewResult - view Index executed in 100.4238ms.
2025-01-27 12:36:39.282 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 139.0345ms
2025-01-27 12:36:39.284 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 12:36:39.286 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 12:36:39.286 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 12:36:39.288 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 12:36:39.286 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 12:36:39.303 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 445.1597ms
2025-01-27 12:36:39.317 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 31.2747ms
2025-01-27 12:36:39.317 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 31.21ms
2025-01-27 12:36:39.326 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 40.1609ms
2025-01-27 12:36:39.334 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 12:36:39.336 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 12:36:39.366 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 77.1549ms
2025-01-27 12:36:44.063 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/SearchList - null null
2025-01-27 12:36:44.081 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.SearchList (MyShop)'
2025-01-27 12:36:44.085 +03:00 [INF] Route matched with {action = "SearchList", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult SearchList(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 12:36:44.147 +03:00 [INF] Executing ViewResult, running view SearchList.
2025-01-27 12:36:44.166 +03:00 [INF] Executed ViewResult - view SearchList executed in 29.8119ms.
2025-01-27 12:36:44.168 +03:00 [INF] Executed action MyShop.Controllers.HomeController.SearchList (MyShop) in 80.3931ms
2025-01-27 12:36:44.170 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.SearchList (MyShop)'
2025-01-27 12:36:44.172 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/SearchList - 200 null text/html; charset=utf-8 109.4122ms
2025-01-27 12:36:44.179 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 12:36:44.182 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 12:36:44.182 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 12:36:44.187 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 4.7043ms
2025-01-27 12:36:44.183 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 12:36:44.185 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 6.1968ms
2025-01-27 12:36:44.195 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 12:36:44.204 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Band & Orchestra - null null
2025-01-27 12:36:44.193 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 10.5565ms
2025-01-27 12:36:44.212 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 12:36:44.205 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 12:36:44.229 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 46.0846ms
2025-01-27 12:36:44.234 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 12:36:45.596 +03:00 [INF] Executed DbCommand (41ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 12:36:45.631 +03:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-01-27 12:36:45.634 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 1397.2119ms
2025-01-27 12:36:45.636 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 12:36:45.647 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Band & Orchestra - 404 null text/plain; charset=utf-8 1446.6741ms
2025-01-27 12:37:21.017 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-27 12:37:21.300 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-27 12:37:21.303 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-27 12:37:21.419 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-27 12:37:21.422 +03:00 [INF] Hosting environment: Development
2025-01-27 12:37:21.424 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-27 12:37:21.747 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-27 12:37:22.024 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 12:37:22.047 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 12:37:22.078 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 12:37:22.160 +03:00 [INF] Executed ViewResult - view Index executed in 83.8209ms.
2025-01-27 12:37:22.169 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 118.332ms
2025-01-27 12:37:22.174 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 12:37:22.182 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 12:37:22.182 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 12:37:22.188 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 448.5676ms
2025-01-27 12:37:22.187 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 12:37:22.182 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 12:37:22.202 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 20.3045ms
2025-01-27 12:37:22.202 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 20.3048ms
2025-01-27 12:37:22.220 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 12:37:22.221 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 39.0551ms
2025-01-27 12:37:22.221 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 12:37:22.280 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 93.1359ms
2025-01-27 12:37:27.824 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/SearchList - null null
2025-01-27 12:37:27.839 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.SearchList (MyShop)'
2025-01-27 12:37:27.844 +03:00 [INF] Route matched with {action = "SearchList", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult SearchList(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 12:37:27.914 +03:00 [INF] Executing ViewResult, running view SearchList.
2025-01-27 12:37:27.938 +03:00 [INF] Executed ViewResult - view SearchList executed in 34.9949ms.
2025-01-27 12:37:27.940 +03:00 [INF] Executed action MyShop.Controllers.HomeController.SearchList (MyShop) in 94.1807ms
2025-01-27 12:37:27.943 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.SearchList (MyShop)'
2025-01-27 12:37:27.945 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/SearchList - 200 null text/html; charset=utf-8 121.4159ms
2025-01-27 12:37:27.949 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 12:37:27.948 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 12:37:27.948 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 12:37:27.948 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 12:37:27.965 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 16.7286ms
2025-01-27 12:37:27.975 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 26.599ms
2025-01-27 12:37:27.977 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 12:37:27.971 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 22.9118ms
2025-01-27 12:37:27.981 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Orchestra - null null
2025-01-27 12:37:27.995 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 12:37:27.995 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 46.7287ms
2025-01-27 12:37:27.999 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 12:37:28.017 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 12:37:29.355 +03:00 [INF] Executed DbCommand (45ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 12:37:29.442 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MyShop.API.Controllers.ProductDto, MyShop, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 12:37:29.456 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 1437.03ms
2025-01-27 12:37:29.459 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 12:37:29.464 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/bdce8fa2-58d1-4dfc-93c6-19c5d3cca86e_nto3rsnifszfk5v55ong.jpg - null null
2025-01-27 12:37:29.464 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/d6e62181-0e10-49a0-a337-40bc660c4e2c_fum0hafxwx4ykcpk80um.jpg - null null
2025-01-27 12:37:29.464 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/63d1d7cd-7448-4c00-8bbc-459aaf4f81cb_nto3rsnifszfk5v55ong.jpg - null null
2025-01-27 12:37:29.472 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Orchestra - 200 null application/json; charset=utf-8 1491.1151ms
2025-01-27 12:37:29.477 +03:00 [INF] The file /images/bdce8fa2-58d1-4dfc-93c6-19c5d3cca86e_nto3rsnifszfk5v55ong.jpg was not modified
2025-01-27 12:37:29.477 +03:00 [INF] The file /images/d6e62181-0e10-49a0-a337-40bc660c4e2c_fum0hafxwx4ykcpk80um.jpg was not modified
2025-01-27 12:37:29.477 +03:00 [INF] The file /images/63d1d7cd-7448-4c00-8bbc-459aaf4f81cb_nto3rsnifszfk5v55ong.jpg was not modified
2025-01-27 12:37:29.481 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/bdce8fa2-58d1-4dfc-93c6-19c5d3cca86e_nto3rsnifszfk5v55ong.jpg - 304 null image/jpeg 17.5406ms
2025-01-27 12:37:29.481 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/d6e62181-0e10-49a0-a337-40bc660c4e2c_fum0hafxwx4ykcpk80um.jpg - 304 null image/jpeg 17.7253ms
2025-01-27 12:37:29.482 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/63d1d7cd-7448-4c00-8bbc-459aaf4f81cb_nto3rsnifszfk5v55ong.jpg - 304 null image/jpeg 18.7464ms
2025-01-27 12:38:06.517 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-27 12:38:06.799 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-27 12:38:06.802 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-27 12:38:06.908 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-27 12:38:06.910 +03:00 [INF] Hosting environment: Development
2025-01-27 12:38:06.912 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-27 12:38:07.255 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-27 12:38:07.529 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 12:38:07.550 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 12:38:07.583 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 12:38:07.676 +03:00 [INF] Executed ViewResult - view Index executed in 94.106ms.
2025-01-27 12:38:07.691 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 12:38:07.691 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 12:38:07.691 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 12:38:07.691 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 12:38:07.692 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 138.1995ms
2025-01-27 12:38:07.713 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 12:38:07.717 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 24.9921ms
2025-01-27 12:38:07.717 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 24.6695ms
2025-01-27 12:38:07.725 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 33.8726ms
2025-01-27 12:38:07.731 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 484.5943ms
2025-01-27 12:38:07.732 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 12:38:07.736 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 12:38:07.761 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 69.7354ms
2025-01-27 12:38:12.004 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/SearchList - null null
2025-01-27 12:38:12.022 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.SearchList (MyShop)'
2025-01-27 12:38:12.025 +03:00 [INF] Route matched with {action = "SearchList", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult SearchList(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 12:38:12.090 +03:00 [INF] Executing ViewResult, running view SearchList.
2025-01-27 12:38:12.110 +03:00 [INF] Executed ViewResult - view SearchList executed in 20.8735ms.
2025-01-27 12:38:12.111 +03:00 [INF] Executed action MyShop.Controllers.HomeController.SearchList (MyShop) in 83.9892ms
2025-01-27 12:38:12.114 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.SearchList (MyShop)'
2025-01-27 12:38:12.115 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/SearchList - 200 null text/html; charset=utf-8 111.6628ms
2025-01-27 12:38:12.130 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 12:38:12.130 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 12:38:12.135 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 12:38:12.135 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 4.5963ms
2025-01-27 12:38:12.135 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 12:38:12.151 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Orchestra - null null
2025-01-27 12:38:12.149 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 12:38:12.155 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 12:38:12.137 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 6.9836ms
2025-01-27 12:38:12.140 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 4.7259ms
2025-01-27 12:38:12.170 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 12:38:12.181 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 12:38:12.200 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 64.447ms
2025-01-27 12:38:13.856 +03:00 [INF] Executed DbCommand (44ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 12:38:13.948 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MyShop.API.Controllers.ProductDto, MyShop, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 12:38:13.961 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 1773.5595ms
2025-01-27 12:38:13.964 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 12:38:13.968 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/d6e62181-0e10-49a0-a337-40bc660c4e2c_fum0hafxwx4ykcpk80um.jpg - null null
2025-01-27 12:38:13.968 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/bdce8fa2-58d1-4dfc-93c6-19c5d3cca86e_nto3rsnifszfk5v55ong.jpg - null null
2025-01-27 12:38:13.976 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Orchestra - 200 null application/json; charset=utf-8 1824.9531ms
2025-01-27 12:38:13.978 +03:00 [INF] The file /images/d6e62181-0e10-49a0-a337-40bc660c4e2c_fum0hafxwx4ykcpk80um.jpg was not modified
2025-01-27 12:38:13.978 +03:00 [INF] The file /images/bdce8fa2-58d1-4dfc-93c6-19c5d3cca86e_nto3rsnifszfk5v55ong.jpg was not modified
2025-01-27 12:38:13.985 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/d6e62181-0e10-49a0-a337-40bc660c4e2c_fum0hafxwx4ykcpk80um.jpg - 304 null image/jpeg 16.4595ms
2025-01-27 12:38:13.985 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/bdce8fa2-58d1-4dfc-93c6-19c5d3cca86e_nto3rsnifszfk5v55ong.jpg - 304 null image/jpeg 17.1781ms
2025-01-27 12:38:16.535 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/SearchBrand - null null
2025-01-27 12:38:16.546 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.SearchBrand (MyShop)'
2025-01-27 12:38:16.551 +03:00 [INF] Route matched with {action = "SearchBrand", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult SearchBrand(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 12:38:16.553 +03:00 [INF] Executing ViewResult, running view SearchBrand.
2025-01-27 12:38:16.565 +03:00 [INF] Executed ViewResult - view SearchBrand executed in 12.2793ms.
2025-01-27 12:38:16.568 +03:00 [INF] Executed action MyShop.Controllers.HomeController.SearchBrand (MyShop) in 15.6015ms
2025-01-27 12:38:16.569 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.SearchBrand (MyShop)'
2025-01-27 12:38:16.570 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/SearchBrand - 200 null text/html; charset=utf-8 35.316ms
2025-01-27 12:38:16.586 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 12:38:16.591 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 12:38:16.592 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 12:38:16.592 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 12:38:16.598 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 6.525ms
2025-01-27 12:38:16.613 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 21.3928ms
2025-01-27 12:38:16.620 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category-and-brand?categoryName=Orchestra&brandName=Other - null null
2025-01-27 12:38:16.592 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 6.1158ms
2025-01-27 12:38:16.624 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 32.1254ms
2025-01-27 12:38:16.624 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 12:38:16.635 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryAndBrand (MyShop)'
2025-01-27 12:38:16.636 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 12:38:16.655 +03:00 [INF] Route matched with {action = "GetProductsByCategoryAndBrand", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[ProductDTO]]] GetProductsByCategoryAndBrand(System.String, System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 12:38:16.728 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__request_CategoryName_0='?' (Size = 4000), @__request_BrandName_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name], [b].[Id], [b].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
LEFT JOIN [Brands] AS [b] ON [p].[BrandId] = [b].[Id]
WHERE [c].[Name] = @__request_CategoryName_0 AND [b].[Id] IS NOT NULL AND [b].[Name] = @__request_BrandName_1
2025-01-27 12:38:16.743 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ProducctDTO, MyShop.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 12:38:16.758 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryAndBrand (MyShop) in 99.5799ms
2025-01-27 12:38:16.760 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryAndBrand (MyShop)'
2025-01-27 12:38:16.761 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category-and-brand?categoryName=Orchestra&brandName=Other - 200 null application/json; charset=utf-8 140.4319ms
2025-01-27 12:42:10.257 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7298/api/Products/createProduct - multipart/form-data; boundary=--------------------------873634186734033766540780 9918
2025-01-27 12:42:10.261 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.CreateProduct (MyShop)'
2025-01-27 12:42:10.268 +03:00 [INF] Route matched with {action = "CreateProduct", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ProductResponse]] CreateProduct(CreateProductCommand) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 12:42:10.359 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__request_CategoryId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Name]
FROM [category] AS [c]
WHERE [c].[Id] = @__request_CategoryId_0
2025-01-27 12:42:10.473 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (DbType = Boolean), @p5='?' (Size = 4000), @p6='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Products] ([BrandId], [CtegoryId], [Description], [ImagePath], [IsPaid], [Name], [Price], [StockQuantity])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-01-27 12:42:10.500 +03:00 [INF] Executing OkObjectResult, writing value of type 'ProductResponse'.
2025-01-27 12:42:10.520 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.CreateProduct (MyShop) in 248.8279ms
2025-01-27 12:42:10.523 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.CreateProduct (MyShop)'
2025-01-27 12:42:10.527 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7298/api/Products/createProduct - 200 null application/json; charset=utf-8 269.284ms
2025-01-27 12:42:15.190 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Index - null null
2025-01-27 12:42:15.208 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 12:42:15.209 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 12:42:15.211 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 12:42:15.225 +03:00 [INF] Executed ViewResult - view Index executed in 14.0995ms.
2025-01-27 12:42:15.229 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 17.7183ms
2025-01-27 12:42:15.231 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 12:42:15.235 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Index - 200 null text/html; charset=utf-8 45.8148ms
2025-01-27 12:42:15.248 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 12:42:15.249 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 12:42:15.248 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 12:42:15.250 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 12:42:15.265 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 16.8056ms
2025-01-27 12:42:15.270 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 20.9382ms
2025-01-27 12:42:15.272 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 23.4062ms
2025-01-27 12:42:15.283 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 12:42:15.288 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 12:42:15.293 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 43.7046ms
2025-01-27 12:42:19.122 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/products?category=Orchestra - null null
2025-01-27 12:42:19.131 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 12:42:19.134 +03:00 [INF] Route matched with {action = "Products", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Products(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 12:42:19.138 +03:00 [INF] Executing ViewResult, running view Products.
2025-01-27 12:42:19.152 +03:00 [INF] Executed ViewResult - view Products executed in 14.8499ms.
2025-01-27 12:42:19.156 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Products (MyShop) in 20.7852ms
2025-01-27 12:42:19.159 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 12:42:19.161 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/products?category=Orchestra - 200 null text/html; charset=utf-8 38.6109ms
2025-01-27 12:42:19.169 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 12:42:19.173 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 12:42:19.173 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 12:42:19.174 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 5.2171ms
2025-01-27 12:42:19.173 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 12:42:19.191 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 12:42:19.182 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 8.3121ms
2025-01-27 12:42:19.193 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 21.0561ms
2025-01-27 12:42:19.195 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 22.6839ms
2025-01-27 12:42:19.207 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Orchestra - null null
2025-01-27 12:42:19.208 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 12:42:19.213 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 12:42:19.218 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 12:42:19.235 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 12:42:19.239 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MyShop.API.Controllers.ProductDto, MyShop, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 12:42:19.241 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 18.3446ms
2025-01-27 12:42:19.243 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 12:42:19.244 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Orchestra - 200 null application/json; charset=utf-8 37.1094ms
2025-01-27 12:42:19.249 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/bdce8fa2-58d1-4dfc-93c6-19c5d3cca86e_nto3rsnifszfk5v55ong.jpg - null null
2025-01-27 12:42:19.250 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/d6e62181-0e10-49a0-a337-40bc660c4e2c_fum0hafxwx4ykcpk80um.jpg - null null
2025-01-27 12:42:19.251 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/5cfa1b5d-5a95-4feb-a179-89ebdde79b89_images (1).jpg - null null
2025-01-27 12:42:19.250 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/63d1d7cd-7448-4c00-8bbc-459aaf4f81cb_nto3rsnifszfk5v55ong.jpg - null null
2025-01-27 12:42:19.255 +03:00 [INF] The file /images/bdce8fa2-58d1-4dfc-93c6-19c5d3cca86e_nto3rsnifszfk5v55ong.jpg was not modified
2025-01-27 12:42:19.257 +03:00 [INF] The file /images/d6e62181-0e10-49a0-a337-40bc660c4e2c_fum0hafxwx4ykcpk80um.jpg was not modified
2025-01-27 12:42:19.261 +03:00 [INF] The file /images/63d1d7cd-7448-4c00-8bbc-459aaf4f81cb_nto3rsnifszfk5v55ong.jpg was not modified
2025-01-27 12:42:19.262 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/bdce8fa2-58d1-4dfc-93c6-19c5d3cca86e_nto3rsnifszfk5v55ong.jpg - 304 null image/jpeg 13.2375ms
2025-01-27 12:42:19.263 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/d6e62181-0e10-49a0-a337-40bc660c4e2c_fum0hafxwx4ykcpk80um.jpg - 304 null image/jpeg 13.2018ms
2025-01-27 12:42:19.265 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/63d1d7cd-7448-4c00-8bbc-459aaf4f81cb_nto3rsnifszfk5v55ong.jpg - 304 null image/jpeg 16.4227ms
2025-01-27 12:42:19.288 +03:00 [INF] Sending file. Request path: '/images/5cfa1b5d-5a95-4feb-a179-89ebdde79b89_images (1).jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\images\5cfa1b5d-5a95-4feb-a179-89ebdde79b89_images (1).jpg'
2025-01-27 12:42:19.291 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/5cfa1b5d-5a95-4feb-a179-89ebdde79b89_images (1).jpg - 200 8189 image/jpeg 41.3924ms
2025-01-27 12:45:15.924 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7298/api/Products/createProduct - multipart/form-data; boundary=--------------------------406381956552361426617061 33148
2025-01-27 12:45:15.928 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.CreateProduct (MyShop)'
2025-01-27 12:45:15.929 +03:00 [INF] Route matched with {action = "CreateProduct", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ProductResponse]] CreateProduct(CreateProductCommand) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 12:45:15.936 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__request_CategoryId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Name]
FROM [category] AS [c]
WHERE [c].[Id] = @__request_CategoryId_0
2025-01-27 12:45:15.962 +03:00 [INF] Executed DbCommand (14ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (DbType = Boolean), @p5='?' (Size = 4000), @p6='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Products] ([BrandId], [CtegoryId], [Description], [ImagePath], [IsPaid], [Name], [Price], [StockQuantity])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-01-27 12:45:15.965 +03:00 [INF] Executing OkObjectResult, writing value of type 'ProductResponse'.
2025-01-27 12:45:15.966 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.CreateProduct (MyShop) in 36.193ms
2025-01-27 12:45:15.968 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.CreateProduct (MyShop)'
2025-01-27 12:45:15.970 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7298/api/Products/createProduct - 200 null application/json; charset=utf-8 45.8616ms
2025-01-27 12:45:21.849 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/products?category=Orchestra - null null
2025-01-27 12:45:21.862 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 12:45:21.864 +03:00 [INF] Route matched with {action = "Products", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Products(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 12:45:21.868 +03:00 [INF] Executing ViewResult, running view Products.
2025-01-27 12:45:21.880 +03:00 [INF] Executed ViewResult - view Products executed in 12.3921ms.
2025-01-27 12:45:21.881 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Products (MyShop) in 14.5332ms
2025-01-27 12:45:21.883 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 12:45:21.884 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/products?category=Orchestra - 200 null text/html; charset=utf-8 35.4577ms
2025-01-27 12:45:21.894 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 12:45:21.897 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 12:45:21.898 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 12:45:21.899 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 5.0596ms
2025-01-27 12:45:21.898 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 12:45:21.907 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 10.006ms
2025-01-27 12:45:21.918 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Orchestra - null null
2025-01-27 12:45:21.911 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 13.1785ms
2025-01-27 12:45:21.933 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 12:45:21.945 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 12:45:21.915 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 12:45:21.945 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 47.7396ms
2025-01-27 12:45:21.945 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 12:45:21.966 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 12:45:21.973 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MyShop.API.Controllers.ProductDto, MyShop, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 12:45:21.976 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 19.7584ms
2025-01-27 12:45:21.980 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 12:45:21.982 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Orchestra - 200 null application/json; charset=utf-8 63.7683ms
2025-01-27 12:45:21.988 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/99661d21-11b2-4718-95fa-92a6212a1ec3_preview.jpg - null null
2025-01-27 12:45:21.988 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/63d1d7cd-7448-4c00-8bbc-459aaf4f81cb_nto3rsnifszfk5v55ong.jpg - null null
2025-01-27 12:45:21.989 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/5cfa1b5d-5a95-4feb-a179-89ebdde79b89_images (1).jpg - null null
2025-01-27 12:45:22.000 +03:00 [INF] The file /images/63d1d7cd-7448-4c00-8bbc-459aaf4f81cb_nto3rsnifszfk5v55ong.jpg was not modified
2025-01-27 12:45:21.989 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/d6e62181-0e10-49a0-a337-40bc660c4e2c_fum0hafxwx4ykcpk80um.jpg - null null
2025-01-27 12:45:21.988 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/bdce8fa2-58d1-4dfc-93c6-19c5d3cca86e_nto3rsnifszfk5v55ong.jpg - null null
2025-01-27 12:45:22.000 +03:00 [INF] Sending file. Request path: '/images/99661d21-11b2-4718-95fa-92a6212a1ec3_preview.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\images\99661d21-11b2-4718-95fa-92a6212a1ec3_preview.jpg'
2025-01-27 12:45:22.004 +03:00 [INF] The file /images/5cfa1b5d-5a95-4feb-a179-89ebdde79b89_images (1).jpg was not modified
2025-01-27 12:45:22.006 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/63d1d7cd-7448-4c00-8bbc-459aaf4f81cb_nto3rsnifszfk5v55ong.jpg - 304 null image/jpeg 17.1924ms
2025-01-27 12:45:22.012 +03:00 [INF] The file /images/d6e62181-0e10-49a0-a337-40bc660c4e2c_fum0hafxwx4ykcpk80um.jpg was not modified
2025-01-27 12:45:22.016 +03:00 [INF] The file /images/bdce8fa2-58d1-4dfc-93c6-19c5d3cca86e_nto3rsnifszfk5v55ong.jpg was not modified
2025-01-27 12:45:22.017 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/99661d21-11b2-4718-95fa-92a6212a1ec3_preview.jpg - 200 31422 image/jpeg 29.4117ms
2025-01-27 12:45:22.019 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/5cfa1b5d-5a95-4feb-a179-89ebdde79b89_images (1).jpg - 304 null image/jpeg 29.9834ms
2025-01-27 12:45:22.026 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/d6e62181-0e10-49a0-a337-40bc660c4e2c_fum0hafxwx4ykcpk80um.jpg - 304 null image/jpeg 37.2829ms
2025-01-27 12:45:22.027 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/bdce8fa2-58d1-4dfc-93c6-19c5d3cca86e_nto3rsnifszfk5v55ong.jpg - 304 null image/jpeg 38.8601ms
2025-01-27 12:49:04.833 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7298/api/Products/createProduct - multipart/form-data; boundary=--------------------------673197002891013382558625 89795
2025-01-27 12:49:04.839 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.CreateProduct (MyShop)'
2025-01-27 12:49:04.841 +03:00 [INF] Route matched with {action = "CreateProduct", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ProductResponse]] CreateProduct(CreateProductCommand) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 12:49:04.856 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__request_CategoryId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Name]
FROM [category] AS [c]
WHERE [c].[Id] = @__request_CategoryId_0
2025-01-27 12:49:04.872 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (DbType = Boolean), @p5='?' (Size = 4000), @p6='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Products] ([BrandId], [CtegoryId], [Description], [ImagePath], [IsPaid], [Name], [Price], [StockQuantity])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-01-27 12:49:04.875 +03:00 [INF] Executing OkObjectResult, writing value of type 'ProductResponse'.
2025-01-27 12:49:04.876 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.CreateProduct (MyShop) in 34.6226ms
2025-01-27 12:49:04.878 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.CreateProduct (MyShop)'
2025-01-27 12:49:04.882 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7298/api/Products/createProduct - 200 null application/json; charset=utf-8 48.7377ms
2025-01-27 12:49:09.970 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/products?category=Orchestra - null null
2025-01-27 12:49:09.980 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 12:49:09.983 +03:00 [INF] Route matched with {action = "Products", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Products(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 12:49:09.985 +03:00 [INF] Executing ViewResult, running view Products.
2025-01-27 12:49:10.001 +03:00 [INF] Executed ViewResult - view Products executed in 16.2664ms.
2025-01-27 12:49:10.003 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Products (MyShop) in 19.2828ms
2025-01-27 12:49:10.005 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 12:49:10.007 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/products?category=Orchestra - 200 null text/html; charset=utf-8 36.9264ms
2025-01-27 12:49:10.015 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 12:49:10.018 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 12:49:10.019 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 12:49:10.019 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 4.8041ms
2025-01-27 12:49:10.019 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 12:49:10.037 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 12:49:10.080 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 61.2572ms
2025-01-27 12:49:10.030 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 11.339ms
2025-01-27 12:49:10.084 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 65.7858ms
2025-01-27 12:49:10.092 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Orchestra - null null
2025-01-27 12:49:10.087 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 12:49:10.102 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 12:49:10.105 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 12:49:10.137 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 12:49:10.140 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MyShop.API.Controllers.ProductDto, MyShop, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 12:49:10.142 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 33.2881ms
2025-01-27 12:49:10.143 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 12:49:10.145 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Orchestra - 200 null application/json; charset=utf-8 53.1813ms
2025-01-27 12:49:10.156 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/3b9bd541-44b5-4616-bad3-96f17cd84cb6_Yamaha-YTR-2330-Trumpet-282xxx-1.jpeg - null null
2025-01-27 12:49:10.158 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/d6e62181-0e10-49a0-a337-40bc660c4e2c_fum0hafxwx4ykcpk80um.jpg - null null
2025-01-27 12:49:10.162 +03:00 [INF] The file /images/d6e62181-0e10-49a0-a337-40bc660c4e2c_fum0hafxwx4ykcpk80um.jpg was not modified
2025-01-27 12:49:10.159 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/99661d21-11b2-4718-95fa-92a6212a1ec3_preview.jpg - null null
2025-01-27 12:49:10.159 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/5cfa1b5d-5a95-4feb-a179-89ebdde79b89_images (1).jpg - null null
2025-01-27 12:49:10.163 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/d6e62181-0e10-49a0-a337-40bc660c4e2c_fum0hafxwx4ykcpk80um.jpg - 304 null image/jpeg 4.9727ms
2025-01-27 12:49:10.187 +03:00 [INF] The file /images/5cfa1b5d-5a95-4feb-a179-89ebdde79b89_images (1).jpg was not modified
2025-01-27 12:49:10.176 +03:00 [INF] The file /images/99661d21-11b2-4718-95fa-92a6212a1ec3_preview.jpg was not modified
2025-01-27 12:49:10.158 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/bdce8fa2-58d1-4dfc-93c6-19c5d3cca86e_nto3rsnifszfk5v55ong.jpg - null null
2025-01-27 12:49:10.158 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/63d1d7cd-7448-4c00-8bbc-459aaf4f81cb_nto3rsnifszfk5v55ong.jpg - null null
2025-01-27 12:49:10.201 +03:00 [INF] Sending file. Request path: '/images/3b9bd541-44b5-4616-bad3-96f17cd84cb6_Yamaha-YTR-2330-Trumpet-282xxx-1.jpeg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\images\3b9bd541-44b5-4616-bad3-96f17cd84cb6_Yamaha-YTR-2330-Trumpet-282xxx-1.jpeg'
2025-01-27 12:49:10.204 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/5cfa1b5d-5a95-4feb-a179-89ebdde79b89_images (1).jpg - 304 null image/jpeg 45.2556ms
2025-01-27 12:49:10.205 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/99661d21-11b2-4718-95fa-92a6212a1ec3_preview.jpg - 304 null image/jpeg 45.5631ms
2025-01-27 12:49:10.209 +03:00 [INF] The file /images/bdce8fa2-58d1-4dfc-93c6-19c5d3cca86e_nto3rsnifszfk5v55ong.jpg was not modified
2025-01-27 12:49:10.214 +03:00 [INF] The file /images/63d1d7cd-7448-4c00-8bbc-459aaf4f81cb_nto3rsnifszfk5v55ong.jpg was not modified
2025-01-27 12:49:10.216 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/3b9bd541-44b5-4616-bad3-96f17cd84cb6_Yamaha-YTR-2330-Trumpet-282xxx-1.jpeg - 200 87990 image/jpeg 60.2197ms
2025-01-27 12:49:10.223 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/bdce8fa2-58d1-4dfc-93c6-19c5d3cca86e_nto3rsnifszfk5v55ong.jpg - 304 null image/jpeg 65.0904ms
2025-01-27 12:49:10.224 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/63d1d7cd-7448-4c00-8bbc-459aaf4f81cb_nto3rsnifszfk5v55ong.jpg - 304 null image/jpeg 66.0894ms
2025-01-27 12:55:20.788 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7298/api/Products/createProduct - multipart/form-data; boundary=--------------------------453366795296864429606390 86150
2025-01-27 12:55:20.796 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.CreateProduct (MyShop)'
2025-01-27 12:55:20.797 +03:00 [INF] Route matched with {action = "CreateProduct", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ProductResponse]] CreateProduct(CreateProductCommand) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 12:55:20.817 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__request_CategoryId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Name]
FROM [category] AS [c]
WHERE [c].[Id] = @__request_CategoryId_0
2025-01-27 12:55:20.836 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (DbType = Boolean), @p5='?' (Size = 4000), @p6='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Products] ([BrandId], [CtegoryId], [Description], [ImagePath], [IsPaid], [Name], [Price], [StockQuantity])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-01-27 12:55:20.839 +03:00 [INF] Executing OkObjectResult, writing value of type 'ProductResponse'.
2025-01-27 12:55:20.840 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.CreateProduct (MyShop) in 40.7762ms
2025-01-27 12:55:20.842 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.CreateProduct (MyShop)'
2025-01-27 12:55:20.843 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7298/api/Products/createProduct - 200 null application/json; charset=utf-8 54.6647ms
2025-01-27 12:55:25.728 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/products?category=Orchestra - null null
2025-01-27 12:55:25.739 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 12:55:25.740 +03:00 [INF] Route matched with {action = "Products", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Products(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 12:55:25.743 +03:00 [INF] Executing ViewResult, running view Products.
2025-01-27 12:55:25.749 +03:00 [INF] Executed ViewResult - view Products executed in 5.9835ms.
2025-01-27 12:55:25.750 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Products (MyShop) in 8.0303ms
2025-01-27 12:55:25.752 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 12:55:25.753 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/products?category=Orchestra - 200 null text/html; charset=utf-8 24.5299ms
2025-01-27 12:55:25.770 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 12:55:25.773 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 12:55:25.774 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 4.6695ms
2025-01-27 12:55:25.773 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 12:55:25.787 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 14.5971ms
2025-01-27 12:55:25.795 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 12:55:25.773 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 12:55:25.811 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 37.7275ms
2025-01-27 12:55:25.812 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 38.5744ms
2025-01-27 12:55:25.821 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Orchestra - null null
2025-01-27 12:55:25.816 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 12:55:25.825 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 12:55:25.828 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 12:55:25.838 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 12:55:25.845 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MyShop.API.Controllers.ProductDto, MyShop, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 12:55:25.848 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 17.7261ms
2025-01-27 12:55:25.850 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 12:55:25.853 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Orchestra - 200 null application/json; charset=utf-8 31.6633ms
2025-01-27 12:55:25.857 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/63d1d7cd-7448-4c00-8bbc-459aaf4f81cb_nto3rsnifszfk5v55ong.jpg - null null
2025-01-27 12:55:25.857 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/bdce8fa2-58d1-4dfc-93c6-19c5d3cca86e_nto3rsnifszfk5v55ong.jpg - null null
2025-01-27 12:55:25.857 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/e7caed9b-e764-4c84-8c14-9055fe07a1f3_alexander+1.jpeg - null null
2025-01-27 12:55:25.857 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/d6e62181-0e10-49a0-a337-40bc660c4e2c_fum0hafxwx4ykcpk80um.jpg - null null
2025-01-27 12:55:25.857 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/5cfa1b5d-5a95-4feb-a179-89ebdde79b89_images (1).jpg - null null
2025-01-27 12:55:25.858 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/99661d21-11b2-4718-95fa-92a6212a1ec3_preview.jpg - null null
2025-01-27 12:55:25.863 +03:00 [INF] The file /images/bdce8fa2-58d1-4dfc-93c6-19c5d3cca86e_nto3rsnifszfk5v55ong.jpg was not modified
2025-01-27 12:55:25.858 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/3b9bd541-44b5-4616-bad3-96f17cd84cb6_Yamaha-YTR-2330-Trumpet-282xxx-1.jpeg - null null
2025-01-27 12:55:25.873 +03:00 [INF] The file /images/d6e62181-0e10-49a0-a337-40bc660c4e2c_fum0hafxwx4ykcpk80um.jpg was not modified
2025-01-27 12:55:25.860 +03:00 [INF] The file /images/63d1d7cd-7448-4c00-8bbc-459aaf4f81cb_nto3rsnifszfk5v55ong.jpg was not modified
2025-01-27 12:55:25.875 +03:00 [INF] Sending file. Request path: '/images/e7caed9b-e764-4c84-8c14-9055fe07a1f3_alexander+1.jpeg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\images\e7caed9b-e764-4c84-8c14-9055fe07a1f3_alexander+1.jpeg'
2025-01-27 12:55:25.878 +03:00 [INF] The file /images/5cfa1b5d-5a95-4feb-a179-89ebdde79b89_images (1).jpg was not modified
2025-01-27 12:55:25.883 +03:00 [INF] The file /images/99661d21-11b2-4718-95fa-92a6212a1ec3_preview.jpg was not modified
2025-01-27 12:55:25.884 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/bdce8fa2-58d1-4dfc-93c6-19c5d3cca86e_nto3rsnifszfk5v55ong.jpg - 304 null image/jpeg 27.0707ms
2025-01-27 12:55:25.889 +03:00 [INF] The file /images/3b9bd541-44b5-4616-bad3-96f17cd84cb6_Yamaha-YTR-2330-Trumpet-282xxx-1.jpeg was not modified
2025-01-27 12:55:25.891 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/d6e62181-0e10-49a0-a337-40bc660c4e2c_fum0hafxwx4ykcpk80um.jpg - 304 null image/jpeg 33.3684ms
2025-01-27 12:55:25.893 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/63d1d7cd-7448-4c00-8bbc-459aaf4f81cb_nto3rsnifszfk5v55ong.jpg - 304 null image/jpeg 36.5279ms
2025-01-27 12:55:25.895 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/e7caed9b-e764-4c84-8c14-9055fe07a1f3_alexander+1.jpeg - 200 83982 image/jpeg 38.8664ms
2025-01-27 12:55:25.898 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/5cfa1b5d-5a95-4feb-a179-89ebdde79b89_images (1).jpg - 304 null image/jpeg 40.654ms
2025-01-27 12:55:25.900 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/99661d21-11b2-4718-95fa-92a6212a1ec3_preview.jpg - 304 null image/jpeg 42.4276ms
2025-01-27 12:55:25.906 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/3b9bd541-44b5-4616-bad3-96f17cd84cb6_Yamaha-YTR-2330-Trumpet-282xxx-1.jpeg - 304 null image/jpeg 48.5285ms
2025-01-27 12:58:35.124 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7298/api/Products/createProduct - multipart/form-data; boundary=--------------------------216000101857552235455622 106161
2025-01-27 12:58:35.134 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.CreateProduct (MyShop)'
2025-01-27 12:58:35.134 +03:00 [INF] Route matched with {action = "CreateProduct", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ProductResponse]] CreateProduct(CreateProductCommand) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 12:58:35.143 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__request_CategoryId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Name]
FROM [category] AS [c]
WHERE [c].[Id] = @__request_CategoryId_0
2025-01-27 12:58:35.150 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (DbType = Boolean), @p5='?' (Size = 4000), @p6='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Products] ([BrandId], [CtegoryId], [Description], [ImagePath], [IsPaid], [Name], [Price], [StockQuantity])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-01-27 12:58:35.153 +03:00 [INF] Executing OkObjectResult, writing value of type 'ProductResponse'.
2025-01-27 12:58:35.154 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.CreateProduct (MyShop) in 18.5718ms
2025-01-27 12:58:35.155 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.CreateProduct (MyShop)'
2025-01-27 12:58:35.158 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7298/api/Products/createProduct - 200 null application/json; charset=utf-8 34.0019ms
2025-01-27 12:58:40.546 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/products?category=Orchestra - null null
2025-01-27 12:58:40.565 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 12:58:40.567 +03:00 [INF] Route matched with {action = "Products", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Products(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 12:58:40.569 +03:00 [INF] Executing ViewResult, running view Products.
2025-01-27 12:58:40.575 +03:00 [INF] Executed ViewResult - view Products executed in 6.0939ms.
2025-01-27 12:58:40.583 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Products (MyShop) in 14.3238ms
2025-01-27 12:58:40.584 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 12:58:40.585 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/products?category=Orchestra - 200 null text/html; charset=utf-8 39.9196ms
2025-01-27 12:58:40.603 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 12:58:40.603 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 12:58:40.614 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 11.7385ms
2025-01-27 12:58:40.603 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 12:58:40.604 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 12:58:40.618 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 15.6181ms
2025-01-27 12:58:40.621 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 12:58:40.633 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Orchestra - null null
2025-01-27 12:58:40.624 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 21.9195ms
2025-01-27 12:58:40.647 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 43.5612ms
2025-01-27 12:58:40.649 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 12:58:40.651 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 12:58:40.657 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 12:58:40.670 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 12:58:40.678 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MyShop.API.Controllers.ProductDto, MyShop, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 12:58:40.680 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 15.4407ms
2025-01-27 12:58:40.681 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 12:58:40.683 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Orchestra - 200 null application/json; charset=utf-8 50.6937ms
2025-01-27 12:58:40.690 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/63d1d7cd-7448-4c00-8bbc-459aaf4f81cb_nto3rsnifszfk5v55ong.jpg - null null
2025-01-27 12:58:40.691 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/99661d21-11b2-4718-95fa-92a6212a1ec3_preview.jpg - null null
2025-01-27 12:58:40.690 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/e2bfdf4d-1596-4b57-86f0-540bcb697238_category-image-cornets.jpg - null null
2025-01-27 12:58:40.691 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/bdce8fa2-58d1-4dfc-93c6-19c5d3cca86e_nto3rsnifszfk5v55ong.jpg - null null
2025-01-27 12:58:40.715 +03:00 [INF] The file /images/99661d21-11b2-4718-95fa-92a6212a1ec3_preview.jpg was not modified
2025-01-27 12:58:40.729 +03:00 [INF] The file /images/bdce8fa2-58d1-4dfc-93c6-19c5d3cca86e_nto3rsnifszfk5v55ong.jpg was not modified
2025-01-27 12:58:40.735 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/99661d21-11b2-4718-95fa-92a6212a1ec3_preview.jpg - 304 null image/jpeg 43.9968ms
2025-01-27 12:58:40.691 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/5cfa1b5d-5a95-4feb-a179-89ebdde79b89_images (1).jpg - null null
2025-01-27 12:58:40.691 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/d6e62181-0e10-49a0-a337-40bc660c4e2c_fum0hafxwx4ykcpk80um.jpg - null null
2025-01-27 12:58:40.692 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/3b9bd541-44b5-4616-bad3-96f17cd84cb6_Yamaha-YTR-2330-Trumpet-282xxx-1.jpeg - null null
2025-01-27 12:58:40.692 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/e7caed9b-e764-4c84-8c14-9055fe07a1f3_alexander+1.jpeg - null null
2025-01-27 12:58:40.702 +03:00 [INF] The file /images/63d1d7cd-7448-4c00-8bbc-459aaf4f81cb_nto3rsnifszfk5v55ong.jpg was not modified
2025-01-27 12:58:40.738 +03:00 [INF] Sending file. Request path: '/images/e2bfdf4d-1596-4b57-86f0-540bcb697238_category-image-cornets.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\images\e2bfdf4d-1596-4b57-86f0-540bcb697238_category-image-cornets.jpg'
2025-01-27 12:58:40.738 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/bdce8fa2-58d1-4dfc-93c6-19c5d3cca86e_nto3rsnifszfk5v55ong.jpg - 304 null image/jpeg 47.8499ms
2025-01-27 12:58:40.746 +03:00 [INF] The file /images/5cfa1b5d-5a95-4feb-a179-89ebdde79b89_images (1).jpg was not modified
2025-01-27 12:58:40.748 +03:00 [INF] The file /images/d6e62181-0e10-49a0-a337-40bc660c4e2c_fum0hafxwx4ykcpk80um.jpg was not modified
2025-01-27 12:58:40.751 +03:00 [INF] The file /images/3b9bd541-44b5-4616-bad3-96f17cd84cb6_Yamaha-YTR-2330-Trumpet-282xxx-1.jpeg was not modified
2025-01-27 12:58:40.754 +03:00 [INF] The file /images/e7caed9b-e764-4c84-8c14-9055fe07a1f3_alexander+1.jpeg was not modified
2025-01-27 12:58:40.755 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/63d1d7cd-7448-4c00-8bbc-459aaf4f81cb_nto3rsnifszfk5v55ong.jpg - 304 null image/jpeg 65.7739ms
2025-01-27 12:58:40.758 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/e2bfdf4d-1596-4b57-86f0-540bcb697238_category-image-cornets.jpg - 200 104208 image/jpeg 68.7464ms
2025-01-27 12:58:40.765 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/5cfa1b5d-5a95-4feb-a179-89ebdde79b89_images (1).jpg - 304 null image/jpeg 74.0059ms
2025-01-27 12:58:40.765 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/d6e62181-0e10-49a0-a337-40bc660c4e2c_fum0hafxwx4ykcpk80um.jpg - 304 null image/jpeg 74.8026ms
2025-01-27 12:58:40.766 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/3b9bd541-44b5-4616-bad3-96f17cd84cb6_Yamaha-YTR-2330-Trumpet-282xxx-1.jpeg - 304 null image/jpeg 74.1927ms
2025-01-27 12:58:40.768 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/e7caed9b-e764-4c84-8c14-9055fe07a1f3_alexander+1.jpeg - 304 null image/jpeg 75.5758ms
2025-01-27 13:00:08.297 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-27 13:00:08.309 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 13:00:08.311 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 13:00:08.313 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 13:00:08.325 +03:00 [INF] Executed ViewResult - view Index executed in 11.8995ms.
2025-01-27 13:00:08.327 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 14.0085ms
2025-01-27 13:00:08.329 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 13:00:08.331 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 33.2057ms
2025-01-27 13:00:08.363 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 13:00:08.365 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 13:00:08.368 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 13:00:08.367 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 4.7215ms
2025-01-27 13:00:08.376 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 11.2135ms
2025-01-27 13:00:08.379 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 11.3774ms
2025-01-27 13:00:08.386 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 13:00:08.390 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 13:00:08.443 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 13:00:08.453 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 10.0285ms
2025-01-27 13:00:10.042 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/swagger/index.html - null null
2025-01-27 13:00:10.089 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/swagger/index.html - 200 null text/html;charset=utf-8 47.2281ms
2025-01-27 13:00:10.106 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 13:00:10.109 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 13:00:10.114 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 7.4892ms
2025-01-27 13:00:10.127 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 17.3091ms
2025-01-27 13:00:10.188 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/swagger/v1/swagger.json - null null
2025-01-27 13:00:10.325 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 137.0458ms
2025-01-27 13:00:34.614 +03:00 [INF] Request starting HTTP/2 DELETE https://localhost:7298/api/Products/DeleteProduct - application/json 14
2025-01-27 13:00:34.624 +03:00 [INF] CORS policy execution successful.
2025-01-27 13:00:34.627 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.DeleteProduct (MyShop)'
2025-01-27 13:00:34.632 +03:00 [INF] Route matched with {action = "DeleteProduct", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteProduct(DeleteProductCommand) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 13:00:38.321 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2025-01-27 13:00:38.341 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Products]
OUTPUT 1
WHERE [Id] = @p0;
2025-01-27 13:00:38.349 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2025-01-27 13:00:38.352 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.DeleteProduct (MyShop) in 3717.1129ms
2025-01-27 13:00:38.353 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.DeleteProduct (MyShop)'
2025-01-27 13:00:38.354 +03:00 [INF] Request finished HTTP/2 DELETE https://localhost:7298/api/Products/DeleteProduct - 200 null text/plain; charset=utf-8 3740.3516ms
2025-01-27 13:00:48.575 +03:00 [INF] Request starting HTTP/2 DELETE https://localhost:7298/api/Products/DeleteProduct - application/json 14
2025-01-27 13:00:48.580 +03:00 [INF] CORS policy execution successful.
2025-01-27 13:00:48.582 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.DeleteProduct (MyShop)'
2025-01-27 13:00:48.583 +03:00 [INF] Route matched with {action = "DeleteProduct", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteProduct(DeleteProductCommand) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 13:00:50.678 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2025-01-27 13:00:50.694 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Products]
OUTPUT 1
WHERE [Id] = @p0;
2025-01-27 13:00:50.697 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2025-01-27 13:00:50.699 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.DeleteProduct (MyShop) in 2115.0002ms
2025-01-27 13:00:50.700 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.DeleteProduct (MyShop)'
2025-01-27 13:00:50.701 +03:00 [INF] Request finished HTTP/2 DELETE https://localhost:7298/api/Products/DeleteProduct - 200 null text/plain; charset=utf-8 2125.9467ms
2025-01-27 13:01:06.996 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-27 13:01:07.001 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 13:01:07.003 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 13:01:07.007 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 13:01:07.020 +03:00 [INF] Executed ViewResult - view Index executed in 12.7175ms.
2025-01-27 13:01:07.022 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 15.3607ms
2025-01-27 13:01:07.025 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 13:01:07.026 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 30.6326ms
2025-01-27 13:01:07.056 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 13:01:07.058 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 13:01:07.061 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 5.5288ms
2025-01-27 13:01:07.064 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 6.1873ms
2025-01-27 13:01:07.063 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 13:01:07.073 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 13:01:07.076 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 13:01:07.080 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 17.1537ms
2025-01-27 13:01:07.097 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 13:01:07.108 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 11.5341ms
2025-01-27 13:01:10.138 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/products?category=Orchestra - null null
2025-01-27 13:01:10.145 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 13:01:10.147 +03:00 [INF] Route matched with {action = "Products", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Products(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 13:01:10.149 +03:00 [INF] Executing ViewResult, running view Products.
2025-01-27 13:01:10.157 +03:00 [INF] Executed ViewResult - view Products executed in 7.8895ms.
2025-01-27 13:01:10.160 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Products (MyShop) in 11.1076ms
2025-01-27 13:01:10.162 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 13:01:10.164 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/products?category=Orchestra - 200 null text/html; charset=utf-8 26.2808ms
2025-01-27 13:01:10.179 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 13:01:10.179 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 13:01:10.179 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 13:01:10.183 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 4.0046ms
2025-01-27 13:01:10.199 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 20.3529ms
2025-01-27 13:01:10.179 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 13:01:10.212 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 33.2099ms
2025-01-27 13:01:10.214 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 13:01:10.216 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 37.0473ms
2025-01-27 13:01:10.227 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 13:01:10.229 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Orchestra - null null
2025-01-27 13:01:10.232 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 13:01:10.233 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 13:01:10.246 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 13:01:10.250 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MyShop.API.Controllers.ProductDto, MyShop, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 13:01:10.251 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 15.4337ms
2025-01-27 13:01:10.258 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 13:01:10.259 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Orchestra - 200 null application/json; charset=utf-8 29.9457ms
2025-01-27 13:01:10.264 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/d6e62181-0e10-49a0-a337-40bc660c4e2c_fum0hafxwx4ykcpk80um.jpg - null null
2025-01-27 13:01:10.264 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/e7caed9b-e764-4c84-8c14-9055fe07a1f3_alexander+1.jpeg - null null
2025-01-27 13:01:10.264 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/99661d21-11b2-4718-95fa-92a6212a1ec3_preview.jpg - null null
2025-01-27 13:01:10.264 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/3b9bd541-44b5-4616-bad3-96f17cd84cb6_Yamaha-YTR-2330-Trumpet-282xxx-1.jpeg - null null
2025-01-27 13:01:10.270 +03:00 [INF] The file /images/e7caed9b-e764-4c84-8c14-9055fe07a1f3_alexander+1.jpeg was not modified
2025-01-27 13:01:10.264 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/e2bfdf4d-1596-4b57-86f0-540bcb697238_category-image-cornets.jpg - null null
2025-01-27 13:01:10.275 +03:00 [INF] The file /images/99661d21-11b2-4718-95fa-92a6212a1ec3_preview.jpg was not modified
2025-01-27 13:01:10.266 +03:00 [INF] The file /images/d6e62181-0e10-49a0-a337-40bc660c4e2c_fum0hafxwx4ykcpk80um.jpg was not modified
2025-01-27 13:01:10.278 +03:00 [INF] The file /images/3b9bd541-44b5-4616-bad3-96f17cd84cb6_Yamaha-YTR-2330-Trumpet-282xxx-1.jpeg was not modified
2025-01-27 13:01:10.279 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/e7caed9b-e764-4c84-8c14-9055fe07a1f3_alexander+1.jpeg - 304 null image/jpeg 14.6705ms
2025-01-27 13:01:10.282 +03:00 [INF] The file /images/e2bfdf4d-1596-4b57-86f0-540bcb697238_category-image-cornets.jpg was not modified
2025-01-27 13:01:10.283 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/99661d21-11b2-4718-95fa-92a6212a1ec3_preview.jpg - 304 null image/jpeg 19.5749ms
2025-01-27 13:01:10.284 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/d6e62181-0e10-49a0-a337-40bc660c4e2c_fum0hafxwx4ykcpk80um.jpg - 304 null image/jpeg 20.8434ms
2025-01-27 13:01:10.290 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/3b9bd541-44b5-4616-bad3-96f17cd84cb6_Yamaha-YTR-2330-Trumpet-282xxx-1.jpeg - 304 null image/jpeg 25.3456ms
2025-01-27 13:01:10.296 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/e2bfdf4d-1596-4b57-86f0-540bcb697238_category-image-cornets.jpg - 304 null image/jpeg 32.5244ms
2025-01-27 13:02:51.981 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 13:02:51.995 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 13.4062ms
2025-01-27 13:02:54.492 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/products?category=Pro%20Audio - null null
2025-01-27 13:02:54.503 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 13:02:54.505 +03:00 [INF] Route matched with {action = "Products", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Products(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 13:02:54.510 +03:00 [INF] Executing ViewResult, running view Products.
2025-01-27 13:02:54.525 +03:00 [INF] Executed ViewResult - view Products executed in 15.1358ms.
2025-01-27 13:02:54.529 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Products (MyShop) in 20.4335ms
2025-01-27 13:02:54.531 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 13:02:54.532 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/products?category=Pro%20Audio - 200 null text/html; charset=utf-8 40.3736ms
2025-01-27 13:02:54.538 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 13:02:54.547 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 13:02:54.549 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 13:02:54.539 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 13:02:54.554 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 16.4738ms
2025-01-27 13:02:54.570 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 30.9758ms
2025-01-27 13:02:54.582 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Pro Audio - null null
2025-01-27 13:02:54.599 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 13:02:54.559 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 11.9069ms
2025-01-27 13:02:54.602 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 53.229ms
2025-01-27 13:02:54.615 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 13:02:54.619 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 13:02:54.636 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 13:02:54.647 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 13:02:54.650 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MyShop.API.Controllers.ProductDto, MyShop, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 13:02:54.652 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 13.616ms
2025-01-27 13:02:54.654 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 13:02:54.657 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Pro Audio - 200 null application/json; charset=utf-8 75.8488ms
2025-01-27 13:02:54.661 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/92773d03-33e5-49c3-a6ba-de4213b3f206_ev-re20-classic-black-and-white-microphone_0.jpg - null null
2025-01-27 13:02:54.661 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/27677f99-886d-4fad-a670-ba39b3039baa_EON615-CVR-WX_REAR_OPEN_CU_original.jpg - null null
2025-01-27 13:02:54.664 +03:00 [INF] The file /images/92773d03-33e5-49c3-a6ba-de4213b3f206_ev-re20-classic-black-and-white-microphone_0.jpg was not modified
2025-01-27 13:02:54.666 +03:00 [INF] The file /images/27677f99-886d-4fad-a670-ba39b3039baa_EON615-CVR-WX_REAR_OPEN_CU_original.jpg was not modified
2025-01-27 13:02:54.667 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/92773d03-33e5-49c3-a6ba-de4213b3f206_ev-re20-classic-black-and-white-microphone_0.jpg - 304 null image/jpeg 5.4727ms
2025-01-27 13:02:54.668 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/27677f99-886d-4fad-a670-ba39b3039baa_EON615-CVR-WX_REAR_OPEN_CU_original.jpg - 304 null image/jpeg 6.3494ms
2025-01-27 13:02:56.611 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Index - null null
2025-01-27 13:02:56.631 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 13:02:56.636 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 13:02:56.640 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 13:02:56.646 +03:00 [INF] Executed ViewResult - view Index executed in 5.8571ms.
2025-01-27 13:02:56.648 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 7.8546ms
2025-01-27 13:02:56.649 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 13:02:56.650 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Index - 200 null text/html; charset=utf-8 40.3719ms
2025-01-27 13:02:56.676 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 13:02:56.676 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 13:02:56.676 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 13:02:56.676 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 13:02:56.683 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 6.6419ms
2025-01-27 13:02:56.701 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 24.4705ms
2025-01-27 13:02:56.688 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 11.824ms
2025-01-27 13:02:56.715 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 13:02:56.715 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 38.8282ms
2025-01-27 13:02:56.720 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 13:02:59.065 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/products?category=Drums%20%26%20Percussion - null null
2025-01-27 13:02:59.075 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 13:02:59.077 +03:00 [INF] Route matched with {action = "Products", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Products(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 13:02:59.080 +03:00 [INF] Executing ViewResult, running view Products.
2025-01-27 13:02:59.087 +03:00 [INF] Executed ViewResult - view Products executed in 6.4734ms.
2025-01-27 13:02:59.089 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Products (MyShop) in 8.9501ms
2025-01-27 13:02:59.092 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 13:02:59.093 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/products?category=Drums%20%26%20Percussion - 200 null text/html; charset=utf-8 28.8544ms
2025-01-27 13:02:59.105 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 13:02:59.105 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 13:02:59.105 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 13:02:59.105 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 13:02:59.118 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 13.2776ms
2025-01-27 13:02:59.116 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 10.6111ms
2025-01-27 13:02:59.122 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 16.9379ms
2025-01-27 13:02:59.122 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 16.9782ms
2025-01-27 13:02:59.126 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 13:02:59.132 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 13:02:59.145 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Drums & Percussion - null null
2025-01-27 13:02:59.148 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 13:02:59.149 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 13:02:59.160 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 13:02:59.165 +03:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-01-27 13:02:59.167 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 15.5645ms
2025-01-27 13:02:59.168 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 13:02:59.169 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Drums & Percussion - 404 null text/plain; charset=utf-8 24.4173ms
2025-01-27 13:03:01.771 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 13:03:01.776 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 5.3435ms
2025-01-27 13:03:04.480 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/products?category=Drums%20%26%20Percussion - null null
2025-01-27 13:03:04.495 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 13:03:04.497 +03:00 [INF] Route matched with {action = "Products", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Products(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 13:03:04.499 +03:00 [INF] Executing ViewResult, running view Products.
2025-01-27 13:03:04.505 +03:00 [INF] Executed ViewResult - view Products executed in 5.145ms.
2025-01-27 13:03:04.507 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Products (MyShop) in 8.0871ms
2025-01-27 13:03:04.511 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 13:03:04.514 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/products?category=Drums%20%26%20Percussion - 200 null text/html; charset=utf-8 35.0022ms
2025-01-27 13:03:04.520 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 13:03:04.521 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 13:03:04.522 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 13:03:04.522 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 13:03:04.529 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 8.7852ms
2025-01-27 13:03:04.542 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 20.3692ms
2025-01-27 13:03:04.548 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 13:03:04.549 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Drums & Percussion - null null
2025-01-27 13:03:04.531 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 11.2054ms
2025-01-27 13:03:04.552 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 29.9527ms
2025-01-27 13:03:04.561 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 13:03:04.564 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 13:03:04.569 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 13:03:04.581 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 13:03:04.584 +03:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-01-27 13:03:04.584 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 8.9625ms
2025-01-27 13:03:04.586 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 13:03:04.587 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Drums & Percussion - 404 null text/plain; charset=utf-8 38.8822ms
2025-01-27 13:04:02.189 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-27 13:04:02.454 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-27 13:04:02.457 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-27 13:04:02.537 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-27 13:04:02.540 +03:00 [INF] Hosting environment: Development
2025-01-27 13:04:02.541 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-27 13:04:03.047 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-27 13:04:03.290 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 13:04:03.307 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 13:04:03.340 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 13:04:03.435 +03:00 [INF] Executed ViewResult - view Index executed in 98.5589ms.
2025-01-27 13:04:03.443 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 132.3127ms
2025-01-27 13:04:03.445 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 13:04:03.458 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 13:04:03.458 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 13:04:03.459 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 13:04:03.461 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 13:04:03.476 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 18.2832ms
2025-01-27 13:04:03.458 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 421.7303ms
2025-01-27 13:04:03.488 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 29.8409ms
2025-01-27 13:04:03.488 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 29.8235ms
2025-01-27 13:04:03.502 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 13:04:03.505 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 13:04:03.527 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 65.896ms
2025-01-27 13:04:07.095 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/products?category=Drums - null null
2025-01-27 13:04:07.109 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 13:04:07.116 +03:00 [INF] Route matched with {action = "Products", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Products(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 13:04:07.166 +03:00 [INF] Executing ViewResult, running view Products.
2025-01-27 13:04:07.188 +03:00 [INF] Executed ViewResult - view Products executed in 22.2338ms.
2025-01-27 13:04:07.189 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Products (MyShop) in 67.4968ms
2025-01-27 13:04:07.190 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 13:04:07.192 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/products?category=Drums - 200 null text/html; charset=utf-8 97.0926ms
2025-01-27 13:04:07.198 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 13:04:07.198 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 13:04:07.198 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 13:04:07.198 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 13:04:07.207 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 9.1017ms
2025-01-27 13:04:07.226 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Drums - null null
2025-01-27 13:04:07.232 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 13:04:07.239 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 13:04:07.204 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 6.0974ms
2025-01-27 13:04:07.214 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 16.518ms
2025-01-27 13:04:07.252 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 13:04:07.261 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 63.0188ms
2025-01-27 13:04:07.267 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 13:04:08.985 +03:00 [INF] Executed DbCommand (46ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 13:04:09.083 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MyShop.API.Controllers.ProductDto, MyShop, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 13:04:09.097 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 1825.6729ms
2025-01-27 13:04:09.101 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 13:04:09.106 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/76baa1b0-8a1e-464e-bf01-b49dbbe09e78_IMG_20230504_111833.jpg - null null
2025-01-27 13:04:09.106 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/5a1c2d01-29a8-4457-9872-cad7b63fef16_YAMAHA_LIVECUSTOMHYBRID_UZUCHARCOALSUNBURST_10121622-1__44710.jpg - null null
2025-01-27 13:04:09.106 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/ffb1aac4-fcc5-431c-926f-83e9c7eba78a_images.jpg - null null
2025-01-27 13:04:09.106 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/1d9ade06-eea3-4f73-9a03-a58d6522c4dd_339309307_1202944837249554_344406632706968113_n__69997.jpg - null null
2025-01-27 13:04:09.106 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/644bd919-5ab5-41fa-be44-6ca5c0ac8c7f_IMG_0069__60953.jpg - null null
2025-01-27 13:04:09.106 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/acd9764c-a970-4529-a8b5-341fef0e6fef_Conga-Set-Rope-Tuned.jpg - null null
2025-01-27 13:04:09.111 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Drums - 200 null application/json; charset=utf-8 1884.9301ms
2025-01-27 13:04:09.116 +03:00 [INF] The file /images/76baa1b0-8a1e-464e-bf01-b49dbbe09e78_IMG_20230504_111833.jpg was not modified
2025-01-27 13:04:09.116 +03:00 [INF] The file /images/5a1c2d01-29a8-4457-9872-cad7b63fef16_YAMAHA_LIVECUSTOMHYBRID_UZUCHARCOALSUNBURST_10121622-1__44710.jpg was not modified
2025-01-27 13:04:09.119 +03:00 [INF] The file /images/ffb1aac4-fcc5-431c-926f-83e9c7eba78a_images.jpg was not modified
2025-01-27 13:04:09.122 +03:00 [INF] The file /images/1d9ade06-eea3-4f73-9a03-a58d6522c4dd_339309307_1202944837249554_344406632706968113_n__69997.jpg was not modified
2025-01-27 13:04:09.127 +03:00 [INF] The file /images/644bd919-5ab5-41fa-be44-6ca5c0ac8c7f_IMG_0069__60953.jpg was not modified
2025-01-27 13:04:09.135 +03:00 [INF] The file /images/acd9764c-a970-4529-a8b5-341fef0e6fef_Conga-Set-Rope-Tuned.jpg was not modified
2025-01-27 13:04:09.145 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/76baa1b0-8a1e-464e-bf01-b49dbbe09e78_IMG_20230504_111833.jpg - 304 null image/jpeg 39.2246ms
2025-01-27 13:04:09.147 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/5a1c2d01-29a8-4457-9872-cad7b63fef16_YAMAHA_LIVECUSTOMHYBRID_UZUCHARCOALSUNBURST_10121622-1__44710.jpg - 304 null image/jpeg 41.1313ms
2025-01-27 13:04:09.148 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/ffb1aac4-fcc5-431c-926f-83e9c7eba78a_images.jpg - 304 null image/jpeg 42.6129ms
2025-01-27 13:04:09.150 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/1d9ade06-eea3-4f73-9a03-a58d6522c4dd_339309307_1202944837249554_344406632706968113_n__69997.jpg - 304 null image/jpeg 44.6792ms
2025-01-27 13:04:09.152 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/644bd919-5ab5-41fa-be44-6ca5c0ac8c7f_IMG_0069__60953.jpg - 304 null image/jpeg 46.6564ms
2025-01-27 13:04:09.154 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/acd9764c-a970-4529-a8b5-341fef0e6fef_Conga-Set-Rope-Tuned.jpg - 304 null image/jpeg 48.507ms
2025-01-27 13:04:23.301 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Index - null null
2025-01-27 13:04:23.315 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 13:04:23.318 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 13:04:23.319 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 13:04:23.324 +03:00 [INF] Executed ViewResult - view Index executed in 4.9863ms.
2025-01-27 13:04:23.325 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 6.3768ms
2025-01-27 13:04:23.326 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 13:04:23.327 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Index - 200 null text/html; charset=utf-8 26.7437ms
2025-01-27 13:04:23.343 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 13:04:23.343 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 13:04:23.352 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 13:04:23.351 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 13:04:23.350 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 7.1693ms
2025-01-27 13:04:23.367 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 16.2536ms
2025-01-27 13:04:23.370 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 13:04:23.353 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 9.9504ms
2025-01-27 13:04:23.379 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 13:04:23.388 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 36.2078ms
2025-01-27 13:04:26.944 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/products?category=Keyboards%20%26%20Pianos - null null
2025-01-27 13:04:26.955 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 13:04:26.958 +03:00 [INF] Route matched with {action = "Products", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Products(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 13:04:26.960 +03:00 [INF] Executing ViewResult, running view Products.
2025-01-27 13:04:26.969 +03:00 [INF] Executed ViewResult - view Products executed in 9.2089ms.
2025-01-27 13:04:26.970 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Products (MyShop) in 11.239ms
2025-01-27 13:04:26.971 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 13:04:26.972 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/products?category=Keyboards%20%26%20Pianos - 200 null text/html; charset=utf-8 27.5176ms
2025-01-27 13:04:26.990 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 13:04:26.990 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 13:04:26.990 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 13:04:26.991 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 13:04:26.998 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 7.4675ms
2025-01-27 13:04:27.001 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 10.1875ms
2025-01-27 13:04:27.010 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 13:04:27.018 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Keyboards & Pianos - null null
2025-01-27 13:04:26.994 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 4.0568ms
2025-01-27 13:04:27.023 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 32.9115ms
2025-01-27 13:04:27.026 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 13:04:27.027 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 13:04:27.036 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 13:04:27.076 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 13:04:27.085 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MyShop.API.Controllers.ProductDto, MyShop, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 13:04:27.087 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 47.9507ms
2025-01-27 13:04:27.089 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 13:04:27.090 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Keyboards & Pianos - 200 null application/json; charset=utf-8 73.0966ms
2025-01-27 13:04:27.092 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/6ed18e30-061b-41a1-9501-c0d44bd66df5_rp701_photo_02 (1).jpg - null null
2025-01-27 13:04:27.092 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/c584c8c6-467e-49bb-a019-f2a9e425cd48_Roland-GO_KEYS61.jpg - null null
2025-01-27 13:04:27.093 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/e15076e0-5127-4d1b-9306-2096f88005f2_PX-S1100 (1).jpg - null null
2025-01-27 13:04:27.092 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/a2ce68fd-95e9-4754-a64d-8adb7db3fe03_e373.jpg - null null
2025-01-27 13:04:27.097 +03:00 [INF] The file /images/6ed18e30-061b-41a1-9501-c0d44bd66df5_rp701_photo_02 (1).jpg was not modified
2025-01-27 13:04:27.101 +03:00 [INF] The file /images/c584c8c6-467e-49bb-a019-f2a9e425cd48_Roland-GO_KEYS61.jpg was not modified
2025-01-27 13:04:27.104 +03:00 [INF] The file /images/e15076e0-5127-4d1b-9306-2096f88005f2_PX-S1100 (1).jpg was not modified
2025-01-27 13:04:27.106 +03:00 [INF] The file /images/a2ce68fd-95e9-4754-a64d-8adb7db3fe03_e373.jpg was not modified
2025-01-27 13:04:27.108 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/6ed18e30-061b-41a1-9501-c0d44bd66df5_rp701_photo_02 (1).jpg - 304 null image/jpeg 15.4134ms
2025-01-27 13:04:27.109 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/c584c8c6-467e-49bb-a019-f2a9e425cd48_Roland-GO_KEYS61.jpg - 304 null image/jpeg 17.0172ms
2025-01-27 13:04:27.111 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/e15076e0-5127-4d1b-9306-2096f88005f2_PX-S1100 (1).jpg - 304 null image/jpeg 18.9568ms
2025-01-27 13:04:27.113 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/a2ce68fd-95e9-4754-a64d-8adb7db3fe03_e373.jpg - 304 null image/jpeg 20.538ms
2025-01-27 13:04:33.413 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Index - null null
2025-01-27 13:04:33.428 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 13:04:33.432 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 13:04:33.434 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 13:04:33.440 +03:00 [INF] Executed ViewResult - view Index executed in 5.6737ms.
2025-01-27 13:04:33.441 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 7.2277ms
2025-01-27 13:04:33.445 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 13:04:33.447 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Index - 200 null text/html; charset=utf-8 33.9125ms
2025-01-27 13:04:33.456 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 13:04:33.456 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 13:04:33.456 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 13:04:33.456 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 13:04:33.460 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 3.9851ms
2025-01-27 13:04:33.465 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 9.0877ms
2025-01-27 13:04:33.476 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 19.992ms
2025-01-27 13:04:33.500 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 13:04:33.501 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 44.9034ms
2025-01-27 13:04:33.503 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 13:04:53.921 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-27 13:04:53.926 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 13:04:53.927 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 13:04:53.929 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 13:04:53.942 +03:00 [INF] Executed ViewResult - view Index executed in 12.7715ms.
2025-01-27 13:04:53.947 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 17.6053ms
2025-01-27 13:04:53.948 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 13:04:53.950 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 29.6271ms
2025-01-27 13:04:53.981 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 13:04:53.983 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 13:04:53.986 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 13:04:53.986 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 4.9208ms
2025-01-27 13:04:53.993 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 6.7476ms
2025-01-27 13:04:53.989 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 6.8611ms
2025-01-27 13:04:53.999 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 13:04:54.004 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 13:04:54.062 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 13:04:54.071 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 9.6952ms
2025-01-27 13:04:55.744 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/swagger/index.html - null null
2025-01-27 13:04:55.800 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/swagger/index.html - 200 null text/html;charset=utf-8 56.8198ms
2025-01-27 13:04:55.819 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 13:04:55.821 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 13:04:55.828 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 8.3753ms
2025-01-27 13:04:55.838 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 17.6337ms
2025-01-27 13:04:55.898 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/swagger/v1/swagger.json - null null
2025-01-27 13:04:56.019 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 121.3349ms
2025-01-27 13:08:21.845 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7298/api/Category/AddCategory - application/json 27
2025-01-27 13:08:21.857 +03:00 [INF] CORS policy execution successful.
2025-01-27 13:08:21.860 +03:00 [INF] Executing endpoint 'MyShop.Controllers.CategoryController.CreateCategory (MyShop)'
2025-01-27 13:08:21.864 +03:00 [INF] Route matched with {action = "CreateCategory", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateCategory(CreateCategoryCommand) on controller MyShop.Controllers.CategoryController (MyShop).
2025-01-27 13:08:22.116 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [category] ([Name])
OUTPUT INSERTED.[Id]
VALUES (@p0);
2025-01-27 13:08:22.153 +03:00 [INF] Executing CreatedAtActionResult, writing value of type 'MyShop.Domain.Entities.Ctegory'.
2025-01-27 13:08:22.179 +03:00 [INF] Executed action MyShop.Controllers.CategoryController.CreateCategory (MyShop) in 310.6689ms
2025-01-27 13:08:22.182 +03:00 [INF] Executed endpoint 'MyShop.Controllers.CategoryController.CreateCategory (MyShop)'
2025-01-27 13:08:22.185 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7298/api/Category/AddCategory - 201 null application/json; charset=utf-8 340.6069ms
2025-01-27 13:08:58.540 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-27 13:08:58.824 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-27 13:08:58.828 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-27 13:08:58.905 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-27 13:08:58.907 +03:00 [INF] Hosting environment: Development
2025-01-27 13:08:58.911 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-27 13:08:59.503 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-27 13:08:59.805 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 13:08:59.833 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 13:08:59.867 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 13:08:59.953 +03:00 [INF] Executed ViewResult - view Index executed in 87.5846ms.
2025-01-27 13:08:59.971 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 135.1225ms
2025-01-27 13:08:59.973 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 13:08:59.973 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 13:08:59.975 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 13:08:59.973 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 13:08:59.973 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 13:08:59.994 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 20.1997ms
2025-01-27 13:09:00.003 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 511.5625ms
2025-01-27 13:09:00.012 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 39.5881ms
2025-01-27 13:09:00.012 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 39.4636ms
2025-01-27 13:09:00.039 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 13:09:00.042 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 13:09:00.066 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 93.8662ms
2025-01-27 13:12:16.840 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-27 13:12:17.094 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-27 13:12:17.097 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-27 13:12:17.171 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-27 13:12:17.174 +03:00 [INF] Hosting environment: Development
2025-01-27 13:12:17.176 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-27 13:12:17.647 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-27 13:12:17.897 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 13:12:17.917 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 13:12:17.951 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 13:12:18.039 +03:00 [INF] Executed ViewResult - view Index executed in 87.177ms.
2025-01-27 13:12:18.041 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/egypt-3325133_1280.jpg - null null
2025-01-27 13:12:18.052 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 13:12:18.050 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 13:12:18.050 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 13:12:18.041 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 13:12:18.055 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 131.2359ms
2025-01-27 13:12:18.089 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 29.0569ms
2025-01-27 13:12:18.090 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 30.3455ms
2025-01-27 13:12:18.098 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 13:12:18.102 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 13:12:18.093 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 13:12:18.092 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 50.7537ms
2025-01-27 13:12:18.121 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 483.0155ms
2025-01-27 13:12:18.130 +03:00 [INF] Sending file. Request path: '/Images/egypt-3325133_1280.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\Images\egypt-3325133_1280.jpg'
2025-01-27 13:12:18.134 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/egypt-3325133_1280.jpg - 200 449711 image/jpeg 92.8535ms
2025-01-27 13:12:18.140 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 89.5766ms
2025-01-27 13:21:31.252 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7298/api/Products/createProduct - multipart/form-data; boundary=--------------------------240304935374703791780673 361808
2025-01-27 13:21:31.259 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.CreateProduct (MyShop)'
2025-01-27 13:21:31.270 +03:00 [INF] Route matched with {action = "CreateProduct", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ProductResponse]] CreateProduct(CreateProductCommand) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 13:21:33.115 +03:00 [INF] Executed DbCommand (43ms) [Parameters=[@__request_CategoryId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Name]
FROM [category] AS [c]
WHERE [c].[Id] = @__request_CategoryId_0
2025-01-27 13:21:33.368 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (DbType = Boolean), @p5='?' (Size = 4000), @p6='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Products] ([BrandId], [CtegoryId], [Description], [ImagePath], [IsPaid], [Name], [Price], [StockQuantity])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-01-27 13:21:33.403 +03:00 [INF] Executing OkObjectResult, writing value of type 'ProductResponse'.
2025-01-27 13:21:33.435 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.CreateProduct (MyShop) in 2161.5469ms
2025-01-27 13:21:33.437 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.CreateProduct (MyShop)'
2025-01-27 13:21:33.449 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7298/api/Products/createProduct - 200 null application/json; charset=utf-8 2197.588ms
2025-01-27 13:21:37.689 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/products?category=Traditional - null null
2025-01-27 13:21:37.705 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 13:21:37.707 +03:00 [INF] Route matched with {action = "Products", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Products(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 13:21:37.754 +03:00 [INF] Executing ViewResult, running view Products.
2025-01-27 13:21:37.775 +03:00 [INF] Executed ViewResult - view Products executed in 21.86ms.
2025-01-27 13:21:37.777 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Products (MyShop) in 69.232ms
2025-01-27 13:21:37.780 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 13:21:37.782 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/products?category=Traditional - 200 null text/html; charset=utf-8 93.508ms
2025-01-27 13:21:37.791 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 13:21:37.791 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 13:21:37.791 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 13:21:37.804 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 13.7482ms
2025-01-27 13:21:37.802 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 12.0155ms
2025-01-27 13:21:37.818 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 27.5439ms
2025-01-27 13:21:37.791 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 13:21:37.825 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Traditional - null null
2025-01-27 13:21:37.830 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 13:21:37.827 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 13:21:37.847 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 13:21:37.859 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 13:21:37.861 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 69.8922ms
2025-01-27 13:21:37.997 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 13:21:38.007 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MyShop.API.Controllers.ProductDto, MyShop, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 13:21:38.010 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 147.8498ms
2025-01-27 13:21:38.014 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 13:21:38.017 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Traditional - 200 null application/json; charset=utf-8 192.7252ms
2025-01-27 13:21:38.021 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/e9338666-97b0-472a-a30e-3c3fe895e638_Finding-an-Oud-for-sale.jpg - null null
2025-01-27 13:21:38.049 +03:00 [INF] Sending file. Request path: '/images/e9338666-97b0-472a-a30e-3c3fe895e638_Finding-an-Oud-for-sale.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\images\e9338666-97b0-472a-a30e-3c3fe895e638_Finding-an-Oud-for-sale.jpg'
2025-01-27 13:21:38.051 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/e9338666-97b0-472a-a30e-3c3fe895e638_Finding-an-Oud-for-sale.jpg - 200 358995 image/jpeg 30.3227ms
2025-01-27 13:26:23.480 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7298/api/Products/createProduct - multipart/form-data; boundary=--------------------------846142144771044340563821 471462
2025-01-27 13:26:23.484 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.CreateProduct (MyShop)'
2025-01-27 13:26:23.485 +03:00 [INF] Route matched with {action = "CreateProduct", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ProductResponse]] CreateProduct(CreateProductCommand) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 13:26:23.565 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__request_CategoryId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Name]
FROM [category] AS [c]
WHERE [c].[Id] = @__request_CategoryId_0
2025-01-27 13:26:23.591 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (DbType = Boolean), @p5='?' (Size = 4000), @p6='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Products] ([BrandId], [CtegoryId], [Description], [ImagePath], [IsPaid], [Name], [Price], [StockQuantity])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-01-27 13:26:23.596 +03:00 [INF] Executing OkObjectResult, writing value of type 'ProductResponse'.
2025-01-27 13:26:23.597 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.CreateProduct (MyShop) in 109.7387ms
2025-01-27 13:26:23.599 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.CreateProduct (MyShop)'
2025-01-27 13:26:23.601 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7298/api/Products/createProduct - 200 null application/json; charset=utf-8 120.4483ms
2025-01-27 13:26:29.649 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/products?category=Traditional - null null
2025-01-27 13:26:29.659 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 13:26:29.662 +03:00 [INF] Route matched with {action = "Products", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Products(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 13:26:29.666 +03:00 [INF] Executing ViewResult, running view Products.
2025-01-27 13:26:29.671 +03:00 [INF] Executed ViewResult - view Products executed in 4.5361ms.
2025-01-27 13:26:29.672 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Products (MyShop) in 6.6749ms
2025-01-27 13:26:29.673 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 13:26:29.673 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/products?category=Traditional - 200 null text/html; charset=utf-8 24.78ms
2025-01-27 13:26:29.689 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 13:26:29.689 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 13:26:29.693 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 13:26:29.694 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 5.7566ms
2025-01-27 13:26:29.703 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 14.5686ms
2025-01-27 13:26:29.714 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 13:26:29.720 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 27.3196ms
2025-01-27 13:26:29.719 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 13:26:29.691 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 13:26:29.740 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 48.7564ms
2025-01-27 13:26:29.748 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Traditional - null null
2025-01-27 13:26:29.753 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 13:26:29.755 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 13:26:29.768 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 13:26:29.773 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MyShop.API.Controllers.ProductDto, MyShop, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 13:26:29.775 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 16.7942ms
2025-01-27 13:26:29.779 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 13:26:29.781 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Traditional - 200 null application/json; charset=utf-8 33.3492ms
2025-01-27 13:26:29.784 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/f724be1f-bd68-43ed-bf92-b66cadb4cbf0_1_1A5UXriLI_fIjMxI_L4dPw.png - null null
2025-01-27 13:26:29.784 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/e9338666-97b0-472a-a30e-3c3fe895e638_Finding-an-Oud-for-sale.jpg - null null
2025-01-27 13:26:29.800 +03:00 [INF] The file /images/e9338666-97b0-472a-a30e-3c3fe895e638_Finding-an-Oud-for-sale.jpg was not modified
2025-01-27 13:26:29.802 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/e9338666-97b0-472a-a30e-3c3fe895e638_Finding-an-Oud-for-sale.jpg - 304 null image/jpeg 18.4085ms
2025-01-27 13:26:29.810 +03:00 [INF] Sending file. Request path: '/images/f724be1f-bd68-43ed-bf92-b66cadb4cbf0_1_1A5UXriLI_fIjMxI_L4dPw.png'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\images\f724be1f-bd68-43ed-bf92-b66cadb4cbf0_1_1A5UXriLI_fIjMxI_L4dPw.png'
2025-01-27 13:26:29.813 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/f724be1f-bd68-43ed-bf92-b66cadb4cbf0_1_1A5UXriLI_fIjMxI_L4dPw.png - 200 470305 image/png 29.4751ms
2025-01-27 13:29:38.974 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7298/api/Products/createProduct - multipart/form-data; boundary=--------------------------331140430576640250934365 95849
2025-01-27 13:29:38.982 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.CreateProduct (MyShop)'
2025-01-27 13:29:38.984 +03:00 [INF] Route matched with {action = "CreateProduct", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ProductResponse]] CreateProduct(CreateProductCommand) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 13:29:38.993 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__request_CategoryId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Name]
FROM [category] AS [c]
WHERE [c].[Id] = @__request_CategoryId_0
2025-01-27 13:29:39.002 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (DbType = Boolean), @p5='?' (Size = 4000), @p6='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Products] ([BrandId], [CtegoryId], [Description], [ImagePath], [IsPaid], [Name], [Price], [StockQuantity])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-01-27 13:29:39.007 +03:00 [INF] Executing OkObjectResult, writing value of type 'ProductResponse'.
2025-01-27 13:29:39.010 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.CreateProduct (MyShop) in 22.9451ms
2025-01-27 13:29:39.011 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.CreateProduct (MyShop)'
2025-01-27 13:29:39.014 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7298/api/Products/createProduct - 200 null application/json; charset=utf-8 39.3269ms
2025-01-27 13:29:43.052 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/products?category=Traditional - null null
2025-01-27 13:29:43.070 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 13:29:43.073 +03:00 [INF] Route matched with {action = "Products", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Products(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 13:29:43.078 +03:00 [INF] Executing ViewResult, running view Products.
2025-01-27 13:29:43.085 +03:00 [INF] Executed ViewResult - view Products executed in 7.4439ms.
2025-01-27 13:29:43.088 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Products (MyShop) in 10.831ms
2025-01-27 13:29:43.090 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 13:29:43.092 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/products?category=Traditional - 200 null text/html; charset=utf-8 41.4629ms
2025-01-27 13:29:43.106 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 13:29:43.110 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 4.8431ms
2025-01-27 13:29:43.111 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 13:29:43.112 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 13:29:43.127 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 13:29:43.130 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 18.5504ms
2025-01-27 13:29:43.140 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 27.6603ms
2025-01-27 13:29:43.112 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 13:29:43.144 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Traditional - null null
2025-01-27 13:29:43.150 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 13:29:43.161 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 13:29:43.168 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 13:29:43.170 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 58.0099ms
2025-01-27 13:29:43.178 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 13:29:43.181 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MyShop.API.Controllers.ProductDto, MyShop, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 13:29:43.183 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 10.5983ms
2025-01-27 13:29:43.187 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 13:29:43.190 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Traditional - 200 null application/json; charset=utf-8 46.3032ms
2025-01-27 13:29:43.194 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/08fa6ed7-82ad-460b-95e7-c86673c43a63_IMG_5608a_easyHDR_eb4f805c-69fe-4f50-957f-ddb6f34df00e.jpg - null null
2025-01-27 13:29:43.194 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/e9338666-97b0-472a-a30e-3c3fe895e638_Finding-an-Oud-for-sale.jpg - null null
2025-01-27 13:29:43.203 +03:00 [INF] Sending file. Request path: '/images/08fa6ed7-82ad-460b-95e7-c86673c43a63_IMG_5608a_easyHDR_eb4f805c-69fe-4f50-957f-ddb6f34df00e.jpg'. Physical path: 'C:\Users\user\Downloads\MyShop\MyShop\wwwroot\images\08fa6ed7-82ad-460b-95e7-c86673c43a63_IMG_5608a_easyHDR_eb4f805c-69fe-4f50-957f-ddb6f34df00e.jpg'
2025-01-27 13:29:43.195 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/f724be1f-bd68-43ed-bf92-b66cadb4cbf0_1_1A5UXriLI_fIjMxI_L4dPw.png - null null
2025-01-27 13:29:43.204 +03:00 [INF] The file /images/e9338666-97b0-472a-a30e-3c3fe895e638_Finding-an-Oud-for-sale.jpg was not modified
2025-01-27 13:29:43.206 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/08fa6ed7-82ad-460b-95e7-c86673c43a63_IMG_5608a_easyHDR_eb4f805c-69fe-4f50-957f-ddb6f34df00e.jpg - 200 94604 image/jpeg 11.9888ms
2025-01-27 13:29:43.209 +03:00 [INF] The file /images/f724be1f-bd68-43ed-bf92-b66cadb4cbf0_1_1A5UXriLI_fIjMxI_L4dPw.png was not modified
2025-01-27 13:29:43.210 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/e9338666-97b0-472a-a30e-3c3fe895e638_Finding-an-Oud-for-sale.jpg - 304 null image/jpeg 15.4464ms
2025-01-27 13:29:43.214 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/f724be1f-bd68-43ed-bf92-b66cadb4cbf0_1_1A5UXriLI_fIjMxI_L4dPw.png - 304 null image/png 19.8276ms
2025-01-27 13:40:06.407 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-27 13:40:06.691 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-27 13:40:06.694 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-27 13:40:06.773 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-27 13:40:06.776 +03:00 [INF] Hosting environment: Development
2025-01-27 13:40:06.778 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-27 13:40:07.270 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-27 13:40:07.545 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 13:40:07.562 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 13:40:07.595 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 13:40:07.681 +03:00 [INF] Executed ViewResult - view Index executed in 89.0004ms.
2025-01-27 13:40:07.690 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 124.9827ms
2025-01-27 13:40:07.693 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 13:40:07.727 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 13:40:07.727 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 13:40:07.728 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 13:40:07.727 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/egypt-3325133_1280.jpg - null null
2025-01-27 13:40:07.736 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 479.1253ms
2025-01-27 13:40:07.727 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 13:40:07.760 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 32.8777ms
2025-01-27 13:40:07.775 +03:00 [INF] The file /Images/egypt-3325133_1280.jpg was not modified
2025-01-27 13:40:07.766 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 39.5534ms
2025-01-27 13:40:07.751 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 24.3871ms
2025-01-27 13:40:07.778 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 13:40:07.780 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/egypt-3325133_1280.jpg - 304 null image/jpeg 52.492ms
2025-01-27 13:40:07.784 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 13:40:07.815 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 87.4994ms
2025-01-27 13:40:11.892 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/products?category=Guitars - null null
2025-01-27 13:40:11.905 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 13:40:11.910 +03:00 [INF] Route matched with {action = "Products", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Products(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 13:40:12.010 +03:00 [INF] Executing ViewResult, running view Products.
2025-01-27 13:40:12.068 +03:00 [INF] Executed ViewResult - view Products executed in 59.1953ms.
2025-01-27 13:40:12.071 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Products (MyShop) in 157.9765ms
2025-01-27 13:40:12.072 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 13:40:12.074 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/products?category=Guitars - 200 null text/html; charset=utf-8 182.4194ms
2025-01-27 13:40:12.082 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 13:40:12.082 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 13:40:12.083 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 13:40:12.083 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 13:40:12.089 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 6.6858ms
2025-01-27 13:40:12.086 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 3.716ms
2025-01-27 13:40:12.105 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 13:40:12.111 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Guitars - null null
2025-01-27 13:40:12.100 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 17.6903ms
2025-01-27 13:40:12.116 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 13:40:12.122 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 13:40:12.129 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 46.3276ms
2025-01-27 13:40:12.144 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 13:40:13.761 +03:00 [INF] Executed DbCommand (51ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 13:40:13.854 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MyShop.API.Controllers.ProductDto, MyShop, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 13:40:13.867 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 1721.0401ms
2025-01-27 13:40:13.871 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 13:40:13.879 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Guitars - 200 null application/json; charset=utf-8 1768.3422ms
2025-01-27 13:52:40.070 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-27 13:52:40.322 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-27 13:52:40.325 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-27 13:52:40.393 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-27 13:52:40.396 +03:00 [INF] Hosting environment: Development
2025-01-27 13:52:40.398 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-27 13:52:40.871 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-27 13:52:41.118 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 13:52:41.143 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 13:52:41.175 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 13:52:41.262 +03:00 [INF] Executed ViewResult - view Index executed in 89.9877ms.
2025-01-27 13:52:41.269 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 122.3776ms
2025-01-27 13:52:41.272 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 13:52:41.281 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 13:52:41.282 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/egypt-3325133_1280.jpg - null null
2025-01-27 13:52:41.281 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 13:52:41.282 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 13:52:41.300 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 437.5382ms
2025-01-27 13:52:41.317 +03:00 [INF] The file /Images/egypt-3325133_1280.jpg was not modified
2025-01-27 13:52:41.315 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 34.3141ms
2025-01-27 13:52:41.315 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 34.2917ms
2025-01-27 13:52:41.296 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 13:52:41.324 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 42.8177ms
2025-01-27 13:52:41.325 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/egypt-3325133_1280.jpg - 304 null image/jpeg 43.4203ms
2025-01-27 13:52:41.329 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 13:52:41.331 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 13:52:41.421 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 124.9412ms
2025-01-27 13:52:43.723 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/products?category=Guitars - null null
2025-01-27 13:52:43.739 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 13:52:43.743 +03:00 [INF] Route matched with {action = "Products", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Products(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 13:52:43.788 +03:00 [INF] Executing ViewResult, running view Products.
2025-01-27 13:52:43.811 +03:00 [INF] Executed ViewResult - view Products executed in 23.4964ms.
2025-01-27 13:52:43.813 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Products (MyShop) in 66.9375ms
2025-01-27 13:52:43.814 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 13:52:43.816 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/products?category=Guitars - 200 null text/html; charset=utf-8 92.967ms
2025-01-27 13:52:43.825 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 13:52:43.825 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 13:52:43.826 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 13:52:43.825 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 13:52:43.833 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 8.1171ms
2025-01-27 13:52:43.847 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 21.6156ms
2025-01-27 13:52:43.830 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 4.6361ms
2025-01-27 13:52:43.857 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Guitars - null null
2025-01-27 13:52:43.858 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 13:52:43.862 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 13:52:43.868 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 13:52:43.868 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 43.0672ms
2025-01-27 13:52:43.885 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 13:52:45.445 +03:00 [INF] Executed DbCommand (65ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 13:52:45.613 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MyShop.API.Controllers.ProductDto, MyShop, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 13:52:45.634 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 1742.1374ms
2025-01-27 13:52:45.639 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 13:52:45.661 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Guitars - 200 null application/json; charset=utf-8 1804.0886ms
2025-01-27 13:54:31.357 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-27 13:54:31.627 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-27 13:54:31.629 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-27 13:54:31.769 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-27 13:54:31.772 +03:00 [INF] Hosting environment: Development
2025-01-27 13:54:31.773 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-27 13:54:31.956 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-27 13:54:32.194 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 13:54:32.214 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 13:54:32.248 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 13:54:32.354 +03:00 [INF] Executed ViewResult - view Index executed in 107.7867ms.
2025-01-27 13:54:32.357 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 13:54:32.357 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 13:54:32.357 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 13:54:32.365 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 147.9471ms
2025-01-27 13:54:32.357 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 13:54:32.377 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 13:54:32.395 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 37.6761ms
2025-01-27 13:54:32.395 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 34.892ms
2025-01-27 13:54:32.395 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 39.2044ms
2025-01-27 13:54:32.398 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 451.5295ms
2025-01-27 13:54:32.401 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 13:54:32.412 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 13:54:32.448 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 90.6132ms
2025-01-27 13:54:36.575 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/products?category=Guitars - null null
2025-01-27 13:54:36.593 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 13:54:36.598 +03:00 [INF] Route matched with {action = "Products", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Products(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 13:54:36.660 +03:00 [INF] Executing ViewResult, running view Products.
2025-01-27 13:54:36.696 +03:00 [INF] Executed ViewResult - view Products executed in 38.3794ms.
2025-01-27 13:54:36.698 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Products (MyShop) in 96.8178ms
2025-01-27 13:54:36.700 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 13:54:36.702 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/products?category=Guitars - 200 null text/html; charset=utf-8 127.038ms
2025-01-27 13:54:36.711 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 13:54:36.711 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 13:54:36.712 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 13:54:36.712 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 13:54:36.718 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 6.0928ms
2025-01-27 13:54:36.719 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 7.2686ms
2025-01-27 13:54:36.729 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 17.4954ms
2025-01-27 13:54:36.736 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Guitars - null null
2025-01-27 13:54:36.734 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 13:54:36.745 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 13:54:36.753 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 13:54:36.760 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 48.5918ms
2025-01-27 13:54:36.770 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 13:54:38.474 +03:00 [INF] Executed DbCommand (49ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 13:54:38.582 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MyShop.API.Controllers.ProductDto, MyShop, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 13:54:38.603 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 1829.6965ms
2025-01-27 13:54:38.607 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 13:54:38.620 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Guitars - 200 null application/json; charset=utf-8 1883.8203ms
2025-01-27 13:56:39.976 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-27 13:56:40.232 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-27 13:56:40.235 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-27 13:56:40.308 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-27 13:56:40.312 +03:00 [INF] Hosting environment: Development
2025-01-27 13:56:40.312 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-27 13:56:40.930 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-27 13:56:41.180 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 13:56:41.201 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 13:56:41.238 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 13:56:41.334 +03:00 [INF] Executed ViewResult - view Index executed in 97.253ms.
2025-01-27 13:56:41.348 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 144.5953ms
2025-01-27 13:56:41.350 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 13:56:41.352 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 13:56:41.350 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 13:56:41.350 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 13:56:41.352 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 13:56:41.378 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 19.9934ms
2025-01-27 13:56:41.396 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 47.0349ms
2025-01-27 13:56:41.396 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 47.0256ms
2025-01-27 13:56:41.398 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 477.0406ms
2025-01-27 13:56:41.409 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 13:56:41.413 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 13:56:41.461 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 109.1808ms
2025-01-27 13:56:43.962 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/products?category=Guitars - null null
2025-01-27 13:56:43.980 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 13:56:43.984 +03:00 [INF] Route matched with {action = "Products", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Products(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 13:56:44.037 +03:00 [INF] Executing ViewResult, running view Products.
2025-01-27 13:56:44.061 +03:00 [INF] Executed ViewResult - view Products executed in 24.7837ms.
2025-01-27 13:56:44.063 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Products (MyShop) in 78.1084ms
2025-01-27 13:56:44.065 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 13:56:44.067 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/products?category=Guitars - 200 null text/html; charset=utf-8 104.7274ms
2025-01-27 13:56:44.081 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 13:56:44.081 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 13:56:44.082 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 13:56:44.083 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 13:56:44.092 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 11.2821ms
2025-01-27 13:56:44.097 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 14.2486ms
2025-01-27 13:56:44.108 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Guitars - null null
2025-01-27 13:56:44.110 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 13:56:44.126 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 13:56:44.089 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 7.7058ms
2025-01-27 13:56:44.135 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 53.0012ms
2025-01-27 13:56:44.137 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 13:56:44.149 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 13:56:45.951 +03:00 [INF] Executed DbCommand (67ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 13:56:46.099 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MyShop.API.Controllers.ProductDto, MyShop, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 13:56:46.115 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 1956.3096ms
2025-01-27 13:56:46.119 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 13:56:46.132 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Guitars - 200 null application/json; charset=utf-8 2025.0818ms
2025-01-27 13:56:53.155 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 13:56:53.162 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 7.2521ms
2025-01-27 13:56:55.375 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/products?category=Keyboards%20%26%20Pianos - null null
2025-01-27 13:56:55.384 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 13:56:55.387 +03:00 [INF] Route matched with {action = "Products", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Products(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 13:56:55.394 +03:00 [INF] Executing ViewResult, running view Products.
2025-01-27 13:56:55.403 +03:00 [INF] Executed ViewResult - view Products executed in 9.3529ms.
2025-01-27 13:56:55.409 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Products (MyShop) in 18.4019ms
2025-01-27 13:56:55.411 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 13:56:55.415 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/products?category=Keyboards%20%26%20Pianos - 200 null text/html; charset=utf-8 40.5745ms
2025-01-27 13:56:55.427 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 13:56:55.431 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 13:56:55.431 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 13:56:55.432 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 13:56:55.440 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 8.7961ms
2025-01-27 13:56:55.435 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 9.1402ms
2025-01-27 13:56:55.449 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 13:56:55.458 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 13:56:55.444 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 12.6117ms
2025-01-27 13:56:55.458 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Keyboards & Pianos - null null
2025-01-27 13:56:55.465 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 32.7618ms
2025-01-27 13:56:55.483 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 13:56:55.486 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 13:56:55.525 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 13:56:55.535 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MyShop.API.Controllers.ProductDto, MyShop, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 13:56:55.541 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 51.9112ms
2025-01-27 13:56:55.543 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 13:56:55.546 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Keyboards & Pianos - 200 null application/json; charset=utf-8 94.3921ms
2025-01-27 13:56:55.550 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/a2ce68fd-95e9-4754-a64d-8adb7db3fe03_e373.jpg - null null
2025-01-27 13:56:55.551 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/6ed18e30-061b-41a1-9501-c0d44bd66df5_rp701_photo_02 (1).jpg - null null
2025-01-27 13:56:55.551 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/e15076e0-5127-4d1b-9306-2096f88005f2_PX-S1100 (1).jpg - null null
2025-01-27 13:56:55.550 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/c584c8c6-467e-49bb-a019-f2a9e425cd48_Roland-GO_KEYS61.jpg - null null
2025-01-27 13:56:55.567 +03:00 [INF] The file /images/e15076e0-5127-4d1b-9306-2096f88005f2_PX-S1100 (1).jpg was not modified
2025-01-27 13:56:55.567 +03:00 [INF] The file /images/a2ce68fd-95e9-4754-a64d-8adb7db3fe03_e373.jpg was not modified
2025-01-27 13:56:55.567 +03:00 [INF] The file /images/6ed18e30-061b-41a1-9501-c0d44bd66df5_rp701_photo_02 (1).jpg was not modified
2025-01-27 13:56:55.571 +03:00 [INF] The file /images/c584c8c6-467e-49bb-a019-f2a9e425cd48_Roland-GO_KEYS61.jpg was not modified
2025-01-27 13:56:55.574 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/e15076e0-5127-4d1b-9306-2096f88005f2_PX-S1100 (1).jpg - 304 null image/jpeg 23.1375ms
2025-01-27 13:56:55.575 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/a2ce68fd-95e9-4754-a64d-8adb7db3fe03_e373.jpg - 304 null image/jpeg 24.799ms
2025-01-27 13:56:55.577 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/6ed18e30-061b-41a1-9501-c0d44bd66df5_rp701_photo_02 (1).jpg - 304 null image/jpeg 26.5263ms
2025-01-27 13:56:55.579 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/c584c8c6-467e-49bb-a019-f2a9e425cd48_Roland-GO_KEYS61.jpg - 304 null image/jpeg 28.3223ms
2025-01-27 13:56:58.516 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 13:56:58.524 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 8.8084ms
2025-01-27 14:03:16.207 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-27 14:03:16.527 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-27 14:03:16.529 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-27 14:03:16.606 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-27 14:03:16.608 +03:00 [INF] Hosting environment: Development
2025-01-27 14:03:16.610 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-27 14:03:17.140 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-27 14:03:17.385 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 14:03:17.408 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 14:03:17.438 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 14:03:17.548 +03:00 [INF] Executed ViewResult - view Index executed in 111.8835ms.
2025-01-27 14:03:17.556 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 144.4057ms
2025-01-27 14:03:17.560 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 14:03:17.566 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 14:03:17.566 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/egypt-3325133_1280.jpg - null null
2025-01-27 14:03:17.566 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 14:03:17.566 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 14:03:17.593 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 466.141ms
2025-01-27 14:03:17.598 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 33.1863ms
2025-01-27 14:03:17.598 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 33.1738ms
2025-01-27 14:03:17.581 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 14:03:17.605 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 40.0436ms
2025-01-27 14:03:17.608 +03:00 [INF] The file /Images/egypt-3325133_1280.jpg was not modified
2025-01-27 14:03:17.612 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 14:03:17.621 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/egypt-3325133_1280.jpg - 304 null image/jpeg 54.7773ms
2025-01-27 14:03:17.615 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 14:03:17.693 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 113.593ms
2025-01-27 14:03:21.293 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/products?category=Guitars - null null
2025-01-27 14:03:21.310 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 14:03:21.315 +03:00 [INF] Route matched with {action = "Products", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Products(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 14:03:21.368 +03:00 [INF] Executing ViewResult, running view Products.
2025-01-27 14:03:21.395 +03:00 [INF] Executed ViewResult - view Products executed in 28.4585ms.
2025-01-27 14:03:21.398 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Products (MyShop) in 80.781ms
2025-01-27 14:03:21.400 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 14:03:21.401 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/products?category=Guitars - 200 null text/html; charset=utf-8 107.6903ms
2025-01-27 14:03:21.412 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 14:03:21.412 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 14:03:21.413 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 14:03:21.416 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 3.8832ms
2025-01-27 14:03:21.419 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 7.0213ms
2025-01-27 14:03:21.429 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 14:03:21.432 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 14:03:21.412 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 14:03:21.444 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 31.1442ms
2025-01-27 14:03:21.456 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Guitars - null null
2025-01-27 14:03:21.467 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 54.1578ms
2025-01-27 14:03:21.470 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 14:03:21.484 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 14:03:22.949 +03:00 [INF] Executed DbCommand (62ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 14:03:23.057 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MyShop.API.Controllers.ProductDto, MyShop, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 14:03:23.075 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 1588.8046ms
2025-01-27 14:03:23.078 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 14:03:23.093 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Guitars - 200 null application/json; charset=utf-8 1636.3653ms
2025-01-27 14:03:25.891 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/product?name=Moreno%20 - null null
2025-01-27 14:03:25.906 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Product (MyShop)'
2025-01-27 14:03:25.911 +03:00 [INF] Route matched with {action = "Product", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Product(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 14:03:25.918 +03:00 [INF] Executing ViewResult, running view Product.
2025-01-27 14:03:25.945 +03:00 [INF] Executed ViewResult - view Product executed in 27.3801ms.
2025-01-27 14:03:25.947 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Product (MyShop) in 33.4548ms
2025-01-27 14:03:25.948 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Product (MyShop)'
2025-01-27 14:03:25.949 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/product?name=Moreno%20 - 200 null text/html; charset=utf-8 59.4366ms
2025-01-27 14:03:25.956 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 14:03:25.956 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 14:03:25.960 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 14:03:25.960 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 14:03:25.964 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 9.2572ms
2025-01-27 14:03:25.967 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 7.1949ms
2025-01-27 14:03:25.978 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/reviews/Moreno  - application/json null
2025-01-27 14:03:25.976 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 14:03:25.961 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 6.0839ms
2025-01-27 14:03:25.985 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 24.4961ms
2025-01-27 14:03:25.990 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetReviews (MyShop)'
2025-01-27 14:03:25.992 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 14:03:26.002 +03:00 [INF] Route matched with {action = "GetReviews", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetReviews(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 14:03:26.061 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__productName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [u].[name] AS [UserName], [p].[ReviewText]
FROM [ProductReviews] AS [p]
INNER JOIN [Usesrs] AS [u] ON [p].[UserId] = [u].[id]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE [p0].[Name] = @__productName_0
2025-01-27 14:03:26.065 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MyShop.API.Controllers.ReviewResponseDto, MyShop, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 14:03:26.067 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetReviews (MyShop) in 56.1757ms
2025-01-27 14:03:26.069 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetReviews (MyShop)'
2025-01-27 14:03:26.071 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/reviews/Moreno  - 200 null application/json; charset=utf-8 94.2018ms
2025-01-27 14:03:26.075 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7298/api/Products/GetProductByName - application/json 18
2025-01-27 14:03:26.082 +03:00 [INF] CORS policy execution successful.
2025-01-27 14:03:26.085 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductByName (MyShop)'
2025-01-27 14:03:26.092 +03:00 [INF] Route matched with {action = "GetProductByName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductByName(GetProductByNameQuery) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 14:03:26.196 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ToLower_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity]
FROM [Products] AS [p]
WHERE LOWER([p].[Name]) = @__ToLower_0
2025-01-27 14:03:26.210 +03:00 [INF] Executing OkObjectResult, writing value of type 'ProductDto'.
2025-01-27 14:03:26.238 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductByName (MyShop) in 143.0417ms
2025-01-27 14:03:26.240 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductByName (MyShop)'
2025-01-27 14:03:26.243 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7298/api/Products/GetProductByName - 200 null application/json; charset=utf-8 167.8454ms
2025-01-27 14:03:32.799 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Search - null null
2025-01-27 14:03:32.808 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Search (MyShop)'
2025-01-27 14:03:32.811 +03:00 [INF] Route matched with {action = "Search", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Search(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 14:03:32.815 +03:00 [INF] Executing ViewResult, running view Search.
2025-01-27 14:03:32.829 +03:00 [INF] Executed ViewResult - view Search executed in 14.8905ms.
2025-01-27 14:03:32.831 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Search (MyShop) in 18.4776ms
2025-01-27 14:03:32.832 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Search (MyShop)'
2025-01-27 14:03:32.833 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Search - 200 null text/html; charset=utf-8 35.1793ms
2025-01-27 14:03:32.841 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 14:03:32.845 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 14:03:32.845 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 14:03:32.846 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 4.7085ms
2025-01-27 14:03:32.852 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 7.279ms
2025-01-27 14:03:32.856 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 14:03:32.845 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 14:03:32.862 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 14:03:32.862 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 17.4603ms
2025-01-27 14:03:32.868 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 23.5119ms
2025-01-27 14:03:32.876 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/search?searchTerm=gibson - null null
2025-01-27 14:03:32.887 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.SearchProducts (MyShop)'
2025-01-27 14:03:32.896 +03:00 [INF] Route matched with {action = "SearchProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[MyShop.Domain.Entities.Product]]] SearchProducts(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 14:03:32.930 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__request_SearchTerm_0_contains='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity]
FROM [Products] AS [p]
WHERE [p].[Name] LIKE @__request_SearchTerm_0_contains ESCAPE N'\' OR [p].[Description] LIKE @__request_SearchTerm_0_contains ESCAPE N'\'
2025-01-27 14:03:32.934 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ProductDTO, MyShop.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 14:03:32.946 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.SearchProducts (MyShop) in 45.9991ms
2025-01-27 14:03:32.949 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.SearchProducts (MyShop)'
2025-01-27 14:03:32.950 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/search?searchTerm=gibson - 200 null application/json; charset=utf-8 73.8957ms
2025-01-27 14:03:35.423 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/SearchList - null null
2025-01-27 14:03:35.429 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.SearchList (MyShop)'
2025-01-27 14:03:35.433 +03:00 [INF] Route matched with {action = "SearchList", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult SearchList(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 14:03:35.438 +03:00 [INF] Executing ViewResult, running view SearchList.
2025-01-27 14:03:35.465 +03:00 [INF] Executed ViewResult - view SearchList executed in 27.325ms.
2025-01-27 14:03:35.467 +03:00 [INF] Executed action MyShop.Controllers.HomeController.SearchList (MyShop) in 30.7943ms
2025-01-27 14:03:35.469 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.SearchList (MyShop)'
2025-01-27 14:03:35.474 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/SearchList - 200 null text/html; charset=utf-8 50.9355ms
2025-01-27 14:03:35.481 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 14:03:35.481 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 14:03:35.483 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 14:03:35.482 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 14:03:35.489 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 7.9901ms
2025-01-27 14:03:35.487 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 5.8459ms
2025-01-27 14:03:35.505 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 14:03:35.499 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 16.4469ms
2025-01-27 14:03:35.506 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 23.936ms
2025-01-27 14:03:35.510 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Guitars - null null
2025-01-27 14:03:35.512 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 14:03:35.533 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 14:03:35.539 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 14:03:35.557 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 14:03:35.563 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MyShop.API.Controllers.ProductDto, MyShop, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 14:03:35.565 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 21.3378ms
2025-01-27 14:03:35.566 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 14:03:35.568 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Guitars - 200 null application/json; charset=utf-8 58.1353ms
2025-01-27 14:03:38.792 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/SearchBrand - null null
2025-01-27 14:03:38.801 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.SearchBrand (MyShop)'
2025-01-27 14:03:38.805 +03:00 [INF] Route matched with {action = "SearchBrand", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult SearchBrand(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 14:03:38.808 +03:00 [INF] Executing ViewResult, running view SearchBrand.
2025-01-27 14:03:38.818 +03:00 [INF] Executed ViewResult - view SearchBrand executed in 10.0605ms.
2025-01-27 14:03:38.820 +03:00 [INF] Executed action MyShop.Controllers.HomeController.SearchBrand (MyShop) in 12.6957ms
2025-01-27 14:03:38.824 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.SearchBrand (MyShop)'
2025-01-27 14:03:38.827 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/SearchBrand - 200 null text/html; charset=utf-8 35.3629ms
2025-01-27 14:03:38.833 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 14:03:38.834 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 14:03:38.833 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 14:03:38.835 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 14:03:38.837 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 4.7941ms
2025-01-27 14:03:38.844 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 9.5284ms
2025-01-27 14:03:38.850 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category-and-brand?categoryName=Guitars&brandName=Yamaha - null null
2025-01-27 14:03:38.844 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 11.8479ms
2025-01-27 14:03:38.853 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 14:03:38.862 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 27.3753ms
2025-01-27 14:03:38.864 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryAndBrand (MyShop)'
2025-01-27 14:03:38.869 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 14:03:38.885 +03:00 [INF] Route matched with {action = "GetProductsByCategoryAndBrand", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[ProductDTO]]] GetProductsByCategoryAndBrand(System.String, System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 14:03:38.928 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__request_CategoryName_0='?' (Size = 4000), @__request_BrandName_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name], [b].[Id], [b].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
LEFT JOIN [Brands] AS [b] ON [p].[BrandId] = [b].[Id]
WHERE [c].[Name] = @__request_CategoryName_0 AND [b].[Id] IS NOT NULL AND [b].[Name] = @__request_BrandName_1
2025-01-27 14:03:38.942 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ProducctDTO, MyShop.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 14:03:38.948 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryAndBrand (MyShop) in 60.7304ms
2025-01-27 14:03:38.951 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryAndBrand (MyShop)'
2025-01-27 14:03:38.954 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category-and-brand?categoryName=Guitars&brandName=Yamaha - 200 null application/json; charset=utf-8 103.589ms
2025-01-27 14:03:44.273 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/SearchList - null null
2025-01-27 14:03:44.282 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.SearchList (MyShop)'
2025-01-27 14:03:44.284 +03:00 [INF] Route matched with {action = "SearchList", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult SearchList(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 14:03:44.290 +03:00 [INF] Executing ViewResult, running view SearchList.
2025-01-27 14:03:44.298 +03:00 [INF] Executed ViewResult - view SearchList executed in 8.3978ms.
2025-01-27 14:03:44.299 +03:00 [INF] Executed action MyShop.Controllers.HomeController.SearchList (MyShop) in 9.7558ms
2025-01-27 14:03:44.300 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.SearchList (MyShop)'
2025-01-27 14:03:44.301 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/SearchList - 200 null text/html; charset=utf-8 27.8429ms
2025-01-27 14:03:44.317 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 14:03:44.317 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 14:03:44.325 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 14:03:44.324 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 7.4908ms
2025-01-27 14:03:44.326 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 14:03:44.327 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 9.9367ms
2025-01-27 14:03:44.330 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 5.1227ms
2025-01-27 14:03:44.337 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Orchestra - null null
2025-01-27 14:03:44.332 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 14:03:44.352 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 14:03:44.339 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 14:03:44.355 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 28.8634ms
2025-01-27 14:03:44.356 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 14:03:44.392 +03:00 [INF] Executed DbCommand (26ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 14:03:44.399 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MyShop.API.Controllers.ProductDto, MyShop, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 14:03:44.406 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 41.708ms
2025-01-27 14:03:44.410 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 14:03:44.413 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Orchestra - 200 null application/json; charset=utf-8 76.4688ms
2025-01-27 14:03:44.426 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/d6e62181-0e10-49a0-a337-40bc660c4e2c_fum0hafxwx4ykcpk80um.jpg - null null
2025-01-27 14:03:44.426 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/99661d21-11b2-4718-95fa-92a6212a1ec3_preview.jpg - null null
2025-01-27 14:03:44.426 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/63d1d7cd-7448-4c00-8bbc-459aaf4f81cb_nto3rsnifszfk5v55ong.jpg - null null
2025-01-27 14:03:44.430 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/3b9bd541-44b5-4616-bad3-96f17cd84cb6_Yamaha-YTR-2330-Trumpet-282xxx-1.jpeg - null null
2025-01-27 14:03:44.430 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/e7caed9b-e764-4c84-8c14-9055fe07a1f3_alexander+1.jpeg - null null
2025-01-27 14:03:44.430 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/e2bfdf4d-1596-4b57-86f0-540bcb697238_category-image-cornets.jpg - null null
2025-01-27 14:03:44.441 +03:00 [INF] The file /images/d6e62181-0e10-49a0-a337-40bc660c4e2c_fum0hafxwx4ykcpk80um.jpg was not modified
2025-01-27 14:03:44.442 +03:00 [INF] The file /images/99661d21-11b2-4718-95fa-92a6212a1ec3_preview.jpg was not modified
2025-01-27 14:03:44.445 +03:00 [INF] The file /images/63d1d7cd-7448-4c00-8bbc-459aaf4f81cb_nto3rsnifszfk5v55ong.jpg was not modified
2025-01-27 14:03:44.447 +03:00 [INF] The file /images/3b9bd541-44b5-4616-bad3-96f17cd84cb6_Yamaha-YTR-2330-Trumpet-282xxx-1.jpeg was not modified
2025-01-27 14:03:44.449 +03:00 [INF] The file /images/e7caed9b-e764-4c84-8c14-9055fe07a1f3_alexander+1.jpeg was not modified
2025-01-27 14:03:44.452 +03:00 [INF] The file /images/e2bfdf4d-1596-4b57-86f0-540bcb697238_category-image-cornets.jpg was not modified
2025-01-27 14:03:44.453 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/d6e62181-0e10-49a0-a337-40bc660c4e2c_fum0hafxwx4ykcpk80um.jpg - 304 null image/jpeg 27.4793ms
2025-01-27 14:03:44.454 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/99661d21-11b2-4718-95fa-92a6212a1ec3_preview.jpg - 304 null image/jpeg 27.7643ms
2025-01-27 14:03:44.455 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/63d1d7cd-7448-4c00-8bbc-459aaf4f81cb_nto3rsnifszfk5v55ong.jpg - 304 null image/jpeg 29.3956ms
2025-01-27 14:03:44.456 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/3b9bd541-44b5-4616-bad3-96f17cd84cb6_Yamaha-YTR-2330-Trumpet-282xxx-1.jpeg - 304 null image/jpeg 26.3864ms
2025-01-27 14:03:44.456 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/e7caed9b-e764-4c84-8c14-9055fe07a1f3_alexander+1.jpeg - 304 null image/jpeg 26.7282ms
2025-01-27 14:03:44.457 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/e2bfdf4d-1596-4b57-86f0-540bcb697238_category-image-cornets.jpg - 304 null image/jpeg 27.3129ms
2025-01-27 14:03:47.104 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/SearchBrand - null null
2025-01-27 14:03:47.114 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.SearchBrand (MyShop)'
2025-01-27 14:03:47.115 +03:00 [INF] Route matched with {action = "SearchBrand", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult SearchBrand(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 14:03:47.117 +03:00 [INF] Executing ViewResult, running view SearchBrand.
2025-01-27 14:03:47.128 +03:00 [INF] Executed ViewResult - view SearchBrand executed in 10.606ms.
2025-01-27 14:03:47.130 +03:00 [INF] Executed action MyShop.Controllers.HomeController.SearchBrand (MyShop) in 13.6783ms
2025-01-27 14:03:47.133 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.SearchBrand (MyShop)'
2025-01-27 14:03:47.134 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/SearchBrand - 200 null text/html; charset=utf-8 30.2944ms
2025-01-27 14:03:47.142 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 14:03:47.144 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 14:03:47.145 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 14:03:47.145 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 14:03:47.149 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 5.2539ms
2025-01-27 14:03:47.158 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 13.1417ms
2025-01-27 14:03:47.165 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category-and-brand?categoryName=Orchestra&brandName=Other - null null
2025-01-27 14:03:47.147 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 5.1886ms
2025-01-27 14:03:47.166 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 14:03:47.166 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 21.0922ms
2025-01-27 14:03:47.170 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryAndBrand (MyShop)'
2025-01-27 14:03:47.174 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 14:03:47.180 +03:00 [INF] Route matched with {action = "GetProductsByCategoryAndBrand", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[ProductDTO]]] GetProductsByCategoryAndBrand(System.String, System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 14:03:47.195 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__request_CategoryName_0='?' (Size = 4000), @__request_BrandName_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name], [b].[Id], [b].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
LEFT JOIN [Brands] AS [b] ON [p].[BrandId] = [b].[Id]
WHERE [c].[Name] = @__request_CategoryName_0 AND [b].[Id] IS NOT NULL AND [b].[Name] = @__request_BrandName_1
2025-01-27 14:03:47.237 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ProducctDTO, MyShop.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 14:03:47.243 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryAndBrand (MyShop) in 56.9075ms
2025-01-27 14:03:47.245 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryAndBrand (MyShop)'
2025-01-27 14:03:47.246 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category-and-brand?categoryName=Orchestra&brandName=Other - 200 null application/json; charset=utf-8 81.5853ms
2025-01-27 14:04:02.307 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Search - null null
2025-01-27 14:04:02.314 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Search (MyShop)'
2025-01-27 14:04:02.316 +03:00 [INF] Route matched with {action = "Search", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Search(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 14:04:02.319 +03:00 [INF] Executing ViewResult, running view Search.
2025-01-27 14:04:02.325 +03:00 [INF] Executed ViewResult - view Search executed in 5.8376ms.
2025-01-27 14:04:02.326 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Search (MyShop) in 7.1584ms
2025-01-27 14:04:02.327 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Search (MyShop)'
2025-01-27 14:04:02.328 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Search - 200 null text/html; charset=utf-8 21.0908ms
2025-01-27 14:04:02.336 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 14:04:02.339 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 14:04:02.339 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 14:04:02.343 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 4.7013ms
2025-01-27 14:04:02.339 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 14:04:02.347 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 7.9637ms
2025-01-27 14:04:02.350 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 14:04:02.353 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/search?searchTerm=alexander - null null
2025-01-27 14:04:02.341 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 5.9075ms
2025-01-27 14:04:02.362 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 23.2296ms
2025-01-27 14:04:02.366 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.SearchProducts (MyShop)'
2025-01-27 14:04:02.372 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 14:04:02.376 +03:00 [INF] Route matched with {action = "SearchProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[MyShop.Domain.Entities.Product]]] SearchProducts(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 14:04:02.396 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__request_SearchTerm_0_contains='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity]
FROM [Products] AS [p]
WHERE [p].[Name] LIKE @__request_SearchTerm_0_contains ESCAPE N'\' OR [p].[Description] LIKE @__request_SearchTerm_0_contains ESCAPE N'\'
2025-01-27 14:04:02.401 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ProductDTO, MyShop.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 14:04:02.407 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.SearchProducts (MyShop) in 23.8058ms
2025-01-27 14:04:02.409 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.SearchProducts (MyShop)'
2025-01-27 14:04:02.410 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/search?searchTerm=alexander - 200 null application/json; charset=utf-8 58.0195ms
2025-01-27 14:09:23.321 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-27 14:09:23.614 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-27 14:09:23.616 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-27 14:09:23.692 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-27 14:09:23.695 +03:00 [INF] Hosting environment: Development
2025-01-27 14:09:23.696 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-27 14:09:24.382 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-27 14:09:24.629 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 14:09:24.647 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 14:09:24.685 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 14:09:24.779 +03:00 [INF] Executed ViewResult - view Index executed in 102.2491ms.
2025-01-27 14:09:24.787 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 136.5047ms
2025-01-27 14:09:24.790 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 14:09:24.802 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 14:09:24.802 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 14:09:24.803 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 14:09:24.804 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/egypt-3325133_1280.jpg - null null
2025-01-27 14:09:24.804 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 14:09:24.828 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 26.0564ms
2025-01-27 14:09:24.828 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 26.9078ms
2025-01-27 14:09:24.835 +03:00 [INF] The file /Images/egypt-3325133_1280.jpg was not modified
2025-01-27 14:09:24.838 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 14:09:24.846 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 14:09:24.848 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/egypt-3325133_1280.jpg - 304 null image/jpeg 43.5729ms
2025-01-27 14:09:24.814 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 442.1599ms
2025-01-27 14:09:24.833 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 29.8836ms
2025-01-27 14:09:24.894 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 89.6959ms
2025-01-27 14:09:27.319 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/products?category=Guitars - null null
2025-01-27 14:09:27.331 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 14:09:27.333 +03:00 [INF] Route matched with {action = "Products", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Products(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 14:09:27.378 +03:00 [INF] Executing ViewResult, running view Products.
2025-01-27 14:09:27.401 +03:00 [INF] Executed ViewResult - view Products executed in 24.0795ms.
2025-01-27 14:09:27.402 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Products (MyShop) in 67.7433ms
2025-01-27 14:09:27.403 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 14:09:27.404 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/products?category=Guitars - 200 null text/html; charset=utf-8 85.1866ms
2025-01-27 14:09:27.422 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 14:09:27.422 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 14:09:27.424 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 14:09:27.424 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 14:09:27.429 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 7.6616ms
2025-01-27 14:09:27.442 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Guitars - null null
2025-01-27 14:09:27.444 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 14:09:27.451 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 14:09:27.436 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 11.8698ms
2025-01-27 14:09:27.433 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 11.3647ms
2025-01-27 14:09:27.467 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 14:09:27.472 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 48.1393ms
2025-01-27 14:09:27.476 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 14:09:29.034 +03:00 [INF] Executed DbCommand (60ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 14:09:29.166 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MyShop.API.Controllers.ProductDto, MyShop, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 14:09:29.180 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 1694.0068ms
2025-01-27 14:09:29.183 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 14:09:29.195 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Guitars - 200 null application/json; charset=utf-8 1753.0034ms
2025-01-27 14:09:31.731 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/product?name=Moreno%20 - null null
2025-01-27 14:09:31.751 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Product (MyShop)'
2025-01-27 14:09:31.756 +03:00 [INF] Route matched with {action = "Product", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Product(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 14:09:31.766 +03:00 [INF] Executing ViewResult, running view Product.
2025-01-27 14:09:31.781 +03:00 [INF] Executed ViewResult - view Product executed in 15.1625ms.
2025-01-27 14:09:31.783 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Product (MyShop) in 23.0605ms
2025-01-27 14:09:31.784 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Product (MyShop)'
2025-01-27 14:09:31.785 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/product?name=Moreno%20 - 200 null text/html; charset=utf-8 54.6285ms
2025-01-27 14:09:31.793 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 14:09:31.793 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 14:09:31.798 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 14:09:31.799 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 14:09:31.800 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 7.2493ms
2025-01-27 14:09:31.803 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 9.4439ms
2025-01-27 14:09:31.818 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 14:09:31.822 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 14:09:31.805 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 6.7657ms
2025-01-27 14:09:31.831 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 32.6784ms
2025-01-27 14:09:31.837 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/reviews/Moreno  - application/json null
2025-01-27 14:09:31.860 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetReviews (MyShop)'
2025-01-27 14:09:31.868 +03:00 [INF] Route matched with {action = "GetReviews", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetReviews(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 14:09:31.927 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__productName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [u].[name] AS [UserName], [p].[ReviewText]
FROM [ProductReviews] AS [p]
INNER JOIN [Usesrs] AS [u] ON [p].[UserId] = [u].[id]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE [p0].[Name] = @__productName_0
2025-01-27 14:09:31.932 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MyShop.API.Controllers.ReviewResponseDto, MyShop, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 14:09:31.934 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetReviews (MyShop) in 63.0934ms
2025-01-27 14:09:31.935 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetReviews (MyShop)'
2025-01-27 14:09:31.936 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/reviews/Moreno  - 200 null application/json; charset=utf-8 101.2251ms
2025-01-27 14:09:31.939 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7298/api/Products/GetProductByName - application/json 18
2025-01-27 14:09:31.947 +03:00 [INF] CORS policy execution successful.
2025-01-27 14:09:31.950 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductByName (MyShop)'
2025-01-27 14:09:31.954 +03:00 [INF] Route matched with {action = "GetProductByName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductByName(GetProductByNameQuery) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 14:09:32.062 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ToLower_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity]
FROM [Products] AS [p]
WHERE LOWER([p].[Name]) = @__ToLower_0
2025-01-27 14:09:32.073 +03:00 [INF] Executing OkObjectResult, writing value of type 'ProductDto'.
2025-01-27 14:09:32.107 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductByName (MyShop) in 149.442ms
2025-01-27 14:09:32.110 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductByName (MyShop)'
2025-01-27 14:09:32.111 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7298/api/Products/GetProductByName - 200 null application/json; charset=utf-8 172.6594ms
2025-01-27 14:09:42.182 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 14:09:42.188 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 6.2852ms
2025-01-27 14:10:09.422 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/product?name=Revstar%20RS502T - null null
2025-01-27 14:10:09.439 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Product (MyShop)'
2025-01-27 14:10:09.442 +03:00 [INF] Route matched with {action = "Product", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Product(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 14:10:09.444 +03:00 [INF] Executing ViewResult, running view Product.
2025-01-27 14:10:09.453 +03:00 [INF] Executed ViewResult - view Product executed in 9.1505ms.
2025-01-27 14:10:09.459 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Product (MyShop) in 15.1158ms
2025-01-27 14:10:09.462 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Product (MyShop)'
2025-01-27 14:10:09.463 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/product?name=Revstar%20RS502T - 200 null text/html; charset=utf-8 41.506ms
2025-01-27 14:10:09.472 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 14:10:09.472 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 14:10:09.483 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 14:10:09.476 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 4.5465ms
2025-01-27 14:10:09.491 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 19.0737ms
2025-01-27 14:10:09.501 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 14:10:09.517 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 14:10:09.483 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 14:10:09.523 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 40.2614ms
2025-01-27 14:10:09.529 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 48.2938ms
2025-01-27 14:10:09.537 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/reviews/Revstar RS502T - application/json null
2025-01-27 14:10:09.544 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetReviews (MyShop)'
2025-01-27 14:10:09.546 +03:00 [INF] Route matched with {action = "GetReviews", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetReviews(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 14:10:09.562 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__productName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [u].[name] AS [UserName], [p].[ReviewText]
FROM [ProductReviews] AS [p]
INNER JOIN [Usesrs] AS [u] ON [p].[UserId] = [u].[id]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE [p0].[Name] = @__productName_0
2025-01-27 14:10:09.566 +03:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-01-27 14:10:09.571 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetReviews (MyShop) in 22.3715ms
2025-01-27 14:10:09.575 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetReviews (MyShop)'
2025-01-27 14:10:09.576 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7298/api/Products/GetProductByName - application/json 25
2025-01-27 14:10:09.577 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/reviews/Revstar RS502T - 404 null text/plain; charset=utf-8 40.7169ms
2025-01-27 14:10:09.580 +03:00 [INF] CORS policy execution successful.
2025-01-27 14:10:09.583 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductByName (MyShop)'
2025-01-27 14:10:09.585 +03:00 [INF] Route matched with {action = "GetProductByName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductByName(GetProductByNameQuery) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 14:10:09.595 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ToLower_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity]
FROM [Products] AS [p]
WHERE LOWER([p].[Name]) = @__ToLower_0
2025-01-27 14:10:09.597 +03:00 [INF] Executing OkObjectResult, writing value of type 'ProductDto'.
2025-01-27 14:10:09.610 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductByName (MyShop) in 21.6435ms
2025-01-27 14:10:09.613 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductByName (MyShop)'
2025-01-27 14:10:09.614 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7298/api/Products/GetProductByName - 200 null application/json; charset=utf-8 38.7302ms
2025-01-27 14:10:50.042 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 14:10:50.054 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 12.2646ms
2025-01-27 14:12:58.361 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-27 14:12:58.378 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 14:12:58.380 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 14:12:58.387 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 14:12:58.406 +03:00 [INF] Executed ViewResult - view Index executed in 20.5007ms.
2025-01-27 14:12:58.408 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 23.6131ms
2025-01-27 14:12:58.409 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 14:12:58.411 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 50.351ms
2025-01-27 14:12:58.436 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 14:12:58.438 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 14:12:58.440 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 4.2726ms
2025-01-27 14:12:58.443 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 14:12:58.441 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 4.0002ms
2025-01-27 14:12:58.447 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 14:12:58.444 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 14:12:58.452 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 8.3541ms
2025-01-27 14:12:58.512 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 14:12:58.523 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 11.026ms
2025-01-27 14:12:59.662 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/swagger/index.html - null null
2025-01-27 14:12:59.714 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/swagger/index.html - 200 null text/html;charset=utf-8 52.9487ms
2025-01-27 14:12:59.732 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 14:12:59.733 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 14:12:59.742 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 10.6909ms
2025-01-27 14:12:59.755 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 23.125ms
2025-01-27 14:12:59.815 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/swagger/v1/swagger.json - null null
2025-01-27 14:12:59.949 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 134.1907ms
2025-01-27 14:13:12.440 +03:00 [INF] Request starting HTTP/2 DELETE https://localhost:7298/api/Products/DeleteProduct - application/json 14
2025-01-27 14:13:12.447 +03:00 [INF] CORS policy execution successful.
2025-01-27 14:13:12.448 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.DeleteProduct (MyShop)'
2025-01-27 14:13:12.453 +03:00 [INF] Route matched with {action = "DeleteProduct", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteProduct(DeleteProductCommand) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 14:13:17.258 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2025-01-27 14:13:17.356 +03:00 [INF] Executed DbCommand (17ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Products]
OUTPUT 1
WHERE [Id] = @p0;
2025-01-27 14:13:17.373 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2025-01-27 14:13:17.376 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.DeleteProduct (MyShop) in 4921.1284ms
2025-01-27 14:13:17.378 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.DeleteProduct (MyShop)'
2025-01-27 14:13:17.380 +03:00 [INF] Request finished HTTP/2 DELETE https://localhost:7298/api/Products/DeleteProduct - 200 null text/plain; charset=utf-8 4939.8609ms
2025-01-27 14:13:25.840 +03:00 [INF] Request starting HTTP/2 DELETE https://localhost:7298/api/Products/DeleteProduct - application/json 14
2025-01-27 14:13:25.844 +03:00 [INF] CORS policy execution successful.
2025-01-27 14:13:25.845 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.DeleteProduct (MyShop)'
2025-01-27 14:13:25.847 +03:00 [INF] Route matched with {action = "DeleteProduct", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteProduct(DeleteProductCommand) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 14:13:25.853 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2025-01-27 14:13:25.865 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Products]
OUTPUT 1
WHERE [Id] = @p0;
2025-01-27 14:13:25.869 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2025-01-27 14:13:25.870 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.DeleteProduct (MyShop) in 21.4551ms
2025-01-27 14:13:25.872 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.DeleteProduct (MyShop)'
2025-01-27 14:13:25.874 +03:00 [INF] Request finished HTTP/2 DELETE https://localhost:7298/api/Products/DeleteProduct - 200 null text/plain; charset=utf-8 34.9126ms
2025-01-27 14:13:32.733 +03:00 [INF] Request starting HTTP/2 DELETE https://localhost:7298/api/Products/DeleteProduct - application/json 14
2025-01-27 14:13:32.739 +03:00 [INF] CORS policy execution successful.
2025-01-27 14:13:32.744 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.DeleteProduct (MyShop)'
2025-01-27 14:13:32.746 +03:00 [INF] Route matched with {action = "DeleteProduct", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteProduct(DeleteProductCommand) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 14:13:32.757 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2025-01-27 14:13:32.782 +03:00 [INF] Executed DbCommand (16ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Products]
OUTPUT 1
WHERE [Id] = @p0;
2025-01-27 14:13:32.786 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2025-01-27 14:13:32.787 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.DeleteProduct (MyShop) in 38.4809ms
2025-01-27 14:13:32.788 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.DeleteProduct (MyShop)'
2025-01-27 14:13:32.789 +03:00 [INF] Request finished HTTP/2 DELETE https://localhost:7298/api/Products/DeleteProduct - 200 null text/plain; charset=utf-8 56.0883ms
2025-01-27 14:13:37.938 +03:00 [INF] Request starting HTTP/2 DELETE https://localhost:7298/api/Products/DeleteProduct - application/json 14
2025-01-27 14:13:37.944 +03:00 [INF] CORS policy execution successful.
2025-01-27 14:13:37.946 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.DeleteProduct (MyShop)'
2025-01-27 14:13:37.948 +03:00 [INF] Route matched with {action = "DeleteProduct", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteProduct(DeleteProductCommand) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 14:13:37.953 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2025-01-27 14:13:37.961 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Products]
OUTPUT 1
WHERE [Id] = @p0;
2025-01-27 14:13:37.964 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2025-01-27 14:13:37.966 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.DeleteProduct (MyShop) in 16.26ms
2025-01-27 14:13:37.967 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.DeleteProduct (MyShop)'
2025-01-27 14:13:37.968 +03:00 [INF] Request finished HTTP/2 DELETE https://localhost:7298/api/Products/DeleteProduct - 200 null text/plain; charset=utf-8 30.098ms
2025-01-27 14:13:47.004 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-27 14:13:47.013 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 14:13:47.015 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 14:13:47.018 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 14:13:47.037 +03:00 [INF] Executed ViewResult - view Index executed in 18.864ms.
2025-01-27 14:13:47.039 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 21.1761ms
2025-01-27 14:13:47.041 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 14:13:47.044 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 39.8351ms
2025-01-27 14:13:47.070 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 14:13:47.071 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 14:13:47.073 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 4.0857ms
2025-01-27 14:13:47.077 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 6.6245ms
2025-01-27 14:13:47.078 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 14:13:47.081 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 14:13:47.085 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 14:13:47.088 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 10.5697ms
2025-01-27 14:13:47.154 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 14:13:47.171 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 17.1354ms
2025-01-27 14:13:50.496 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/products?category=Guitars - null null
2025-01-27 14:13:50.505 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 14:13:50.508 +03:00 [INF] Route matched with {action = "Products", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Products(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 14:13:50.513 +03:00 [INF] Executing ViewResult, running view Products.
2025-01-27 14:13:50.519 +03:00 [INF] Executed ViewResult - view Products executed in 6.2942ms.
2025-01-27 14:13:50.521 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Products (MyShop) in 9.0232ms
2025-01-27 14:13:50.523 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 14:13:50.524 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/products?category=Guitars - 200 null text/html; charset=utf-8 28.7018ms
2025-01-27 14:13:50.538 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 14:13:50.538 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 14:13:50.538 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 14:13:50.538 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 14:13:50.545 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 7.3474ms
2025-01-27 14:13:50.548 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 10.161ms
2025-01-27 14:13:50.551 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 12.8078ms
2025-01-27 14:13:50.570 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 14:13:50.576 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 14:13:50.560 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Guitars - null null
2025-01-27 14:13:50.578 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 39.5845ms
2025-01-27 14:13:50.583 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 14:13:50.589 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 14:13:50.602 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 14:13:50.607 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MyShop.API.Controllers.ProductDto, MyShop, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 14:13:50.611 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 17.5279ms
2025-01-27 14:13:50.613 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 14:13:50.614 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Guitars - 200 null application/json; charset=utf-8 54.2882ms
2025-01-27 14:14:02.063 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/product?name=Gibson%20Les%20Paul - null null
2025-01-27 14:14:02.073 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Product (MyShop)'
2025-01-27 14:14:02.076 +03:00 [INF] Route matched with {action = "Product", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Product(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 14:14:02.078 +03:00 [INF] Executing ViewResult, running view Product.
2025-01-27 14:14:02.083 +03:00 [INF] Executed ViewResult - view Product executed in 5.6315ms.
2025-01-27 14:14:02.085 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Product (MyShop) in 7.5064ms
2025-01-27 14:14:02.087 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Product (MyShop)'
2025-01-27 14:14:02.088 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/product?name=Gibson%20Les%20Paul - 200 null text/html; charset=utf-8 25.5796ms
2025-01-27 14:14:02.099 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 14:14:02.099 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 14:14:02.099 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 14:14:02.099 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 14:14:02.104 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 5.5281ms
2025-01-27 14:14:02.124 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/reviews/Gibson Les Paul - application/json null
2025-01-27 14:14:02.129 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 14:14:02.114 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 14.9921ms
2025-01-27 14:14:02.102 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 3.6869ms
2025-01-27 14:14:02.133 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 33.8918ms
2025-01-27 14:14:02.135 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetReviews (MyShop)'
2025-01-27 14:14:02.144 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 14:14:02.151 +03:00 [INF] Route matched with {action = "GetReviews", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetReviews(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 14:14:02.166 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__productName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [u].[name] AS [UserName], [p].[ReviewText]
FROM [ProductReviews] AS [p]
INNER JOIN [Usesrs] AS [u] ON [p].[UserId] = [u].[id]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE [p0].[Name] = @__productName_0
2025-01-27 14:14:02.169 +03:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-01-27 14:14:02.171 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetReviews (MyShop) in 16.4423ms
2025-01-27 14:14:02.172 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetReviews (MyShop)'
2025-01-27 14:14:02.175 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7298/api/Products/GetProductByName - application/json 26
2025-01-27 14:14:02.176 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/reviews/Gibson Les Paul - 404 null text/plain; charset=utf-8 54.3515ms
2025-01-27 14:14:02.181 +03:00 [INF] CORS policy execution successful.
2025-01-27 14:14:02.184 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductByName (MyShop)'
2025-01-27 14:14:02.185 +03:00 [INF] Route matched with {action = "GetProductByName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductByName(GetProductByNameQuery) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 14:14:02.196 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__ToLower_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity]
FROM [Products] AS [p]
WHERE LOWER([p].[Name]) = @__ToLower_0
2025-01-27 14:14:02.199 +03:00 [INF] Executing OkObjectResult, writing value of type 'ProductDto'.
2025-01-27 14:14:02.206 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductByName (MyShop) in 19.9542ms
2025-01-27 14:14:02.211 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductByName (MyShop)'
2025-01-27 14:14:02.212 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7298/api/Products/GetProductByName - 200 null application/json; charset=utf-8 37.3791ms
2025-01-27 14:14:07.586 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 14:14:07.594 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 8.9204ms
2025-01-27 14:31:49.258 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-27 14:31:49.548 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-27 14:31:49.552 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-27 14:31:49.642 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-27 14:31:49.644 +03:00 [INF] Hosting environment: Development
2025-01-27 14:31:49.645 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-27 14:31:50.009 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-27 14:31:50.274 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 14:31:50.301 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 14:31:50.341 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 14:31:50.433 +03:00 [INF] Executed ViewResult - view Index executed in 94.7456ms.
2025-01-27 14:31:50.446 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 136.643ms
2025-01-27 14:31:50.448 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 14:31:50.449 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 14:31:50.449 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 14:31:50.449 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 14:31:50.475 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 476.6123ms
2025-01-27 14:31:50.478 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 29.435ms
2025-01-27 14:31:50.478 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 28.7878ms
2025-01-27 14:31:50.450 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/egypt-3325133_1280.jpg - null null
2025-01-27 14:31:50.458 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 14:31:50.482 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 32.9905ms
2025-01-27 14:31:50.485 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 14:31:50.490 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 14:31:50.497 +03:00 [INF] The file /Images/egypt-3325133_1280.jpg was not modified
2025-01-27 14:31:50.525 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/egypt-3325133_1280.jpg - 304 null image/jpeg 74.8842ms
2025-01-27 14:31:50.606 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 148.1253ms
2025-01-27 14:31:52.698 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7298/api/ShoppingCart/view - application/json 12
2025-01-27 14:31:52.717 +03:00 [INF] CORS policy execution successful.
2025-01-27 14:31:52.726 +03:00 [INF] Executing endpoint 'apiProject.Controllers.ShoppingCartController.ViewCart (MyShop)'
2025-01-27 14:31:52.733 +03:00 [INF] Route matched with {action = "ViewCart", controller = "ShoppingCart"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ViewCart(ViewCartQuery) on controller apiProject.Controllers.ShoppingCartController (MyShop).
2025-01-27 14:31:54.101 +03:00 [INF] Executed DbCommand (51ms) [Parameters=[@__request_UserId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[Id], [s].[ProductId], [s].[ProductName], [s].[Quantity], [s].[UserId], [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity]
FROM [ShoppingCarts] AS [s]
INNER JOIN [Products] AS [p] ON [s].[ProductId] = [p].[Id]
WHERE [s].[UserId] = @__request_UserId_0
2025-01-27 14:31:54.146 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ShoppingDTO, MyShop.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 14:31:54.176 +03:00 [INF] Executed action apiProject.Controllers.ShoppingCartController.ViewCart (MyShop) in 1440.3461ms
2025-01-27 14:31:54.178 +03:00 [INF] Executed endpoint 'apiProject.Controllers.ShoppingCartController.ViewCart (MyShop)'
2025-01-27 14:31:54.185 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7298/api/ShoppingCart/view - 200 null application/json; charset=utf-8 1487.8532ms
2025-01-27 14:31:56.073 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Payment - null null
2025-01-27 14:31:56.084 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Payment (MyShop)'
2025-01-27 14:31:56.088 +03:00 [INF] Route matched with {action = "Payment", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Payment(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 14:31:56.137 +03:00 [INF] Executing ViewResult, running view Payment.
2025-01-27 14:31:56.175 +03:00 [INF] Executed ViewResult - view Payment executed in 39.5655ms.
2025-01-27 14:31:56.177 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Payment (MyShop) in 82.8792ms
2025-01-27 14:31:56.178 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Payment (MyShop)'
2025-01-27 14:31:56.180 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Payment - 200 null text/html; charset=utf-8 106.9684ms
2025-01-27 14:31:56.194 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 14:31:56.194 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 14:31:56.194 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 14:31:56.199 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 4.8269ms
2025-01-27 14:31:56.210 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 16.2094ms
2025-01-27 14:31:56.220 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 14:31:56.220 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 14:31:56.225 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 14:31:56.235 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 14.7238ms
2025-01-27 14:31:56.247 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 52.5478ms
2025-01-27 14:31:56.261 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7298/Payment/process-payment - application/json 12
2025-01-27 14:31:56.265 +03:00 [INF] CORS policy execution successful.
2025-01-27 14:31:56.269 +03:00 [INF] Executing endpoint 'MyShop.Controllers.PaymentController.ProcessPayment (MyShop)'
2025-01-27 14:31:56.279 +03:00 [INF] Route matched with {action = "ProcessPayment", controller = "Payment"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ProcessPayment(ProcessPaymentCommand) on controller MyShop.Controllers.PaymentController (MyShop).
2025-01-27 14:31:56.336 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__request_UserId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[id], [u].[RefreshToken], [u].[RefreshTokenExpiryTime], [u].[Role], [u].[address], [u].[email], [u].[name], [u].[number], [u].[password]
FROM [Usesrs] AS [u]
WHERE [u].[id] = @__request_UserId_0
2025-01-27 14:31:56.406 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__request_UserId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[Id], [s].[ProductId], [s].[ProductName], [s].[Quantity], [s].[UserId], [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity]
FROM [ShoppingCarts] AS [s]
INNER JOIN [Products] AS [p] ON [s].[ProductId] = [p].[Id]
WHERE [s].[UserId] = @__request_UserId_0
2025-01-27 14:31:56.453 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`1[[System.Single, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-01-27 14:31:56.462 +03:00 [INF] Executed action MyShop.Controllers.PaymentController.ProcessPayment (MyShop) in 180.6451ms
2025-01-27 14:31:56.463 +03:00 [INF] Executed endpoint 'MyShop.Controllers.PaymentController.ProcessPayment (MyShop)'
2025-01-27 14:31:56.465 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7298/Payment/process-payment - 200 null application/json; charset=utf-8 204.8956ms
2025-01-27 14:32:45.464 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-27 14:32:45.725 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-27 14:32:45.729 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-27 14:32:45.815 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-27 14:32:45.816 +03:00 [INF] Hosting environment: Development
2025-01-27 14:32:45.819 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-27 14:32:46.360 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-27 14:32:46.611 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 14:32:46.633 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 14:32:46.667 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 14:32:46.770 +03:00 [INF] Executed ViewResult - view Index executed in 106.8945ms.
2025-01-27 14:32:46.781 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 144.0753ms
2025-01-27 14:32:46.782 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 14:32:46.782 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 14:32:46.782 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 14:32:46.791 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 14:32:46.783 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 14:32:46.814 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 30.9333ms
2025-01-27 14:32:46.814 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 30.8636ms
2025-01-27 14:32:46.816 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 466.9808ms
2025-01-27 14:32:46.824 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 14:32:46.836 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 14:32:46.814 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 30.3596ms
2025-01-27 14:32:46.905 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 121.5037ms
2025-01-27 14:32:49.876 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7298/api/ShoppingCart/view - application/json 12
2025-01-27 14:32:49.893 +03:00 [INF] CORS policy execution successful.
2025-01-27 14:32:49.901 +03:00 [INF] Executing endpoint 'apiProject.Controllers.ShoppingCartController.ViewCart (MyShop)'
2025-01-27 14:32:49.914 +03:00 [INF] Route matched with {action = "ViewCart", controller = "ShoppingCart"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ViewCart(ViewCartQuery) on controller apiProject.Controllers.ShoppingCartController (MyShop).
2025-01-27 14:32:51.487 +03:00 [INF] Executed DbCommand (53ms) [Parameters=[@__request_UserId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[Id], [s].[ProductId], [s].[ProductName], [s].[Quantity], [s].[UserId], [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity]
FROM [ShoppingCarts] AS [s]
INNER JOIN [Products] AS [p] ON [s].[ProductId] = [p].[Id]
WHERE [s].[UserId] = @__request_UserId_0
2025-01-27 14:32:51.552 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ShoppingDTO, MyShop.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 14:32:51.595 +03:00 [INF] Executed action apiProject.Controllers.ShoppingCartController.ViewCart (MyShop) in 1677.6369ms
2025-01-27 14:32:51.598 +03:00 [INF] Executed endpoint 'apiProject.Controllers.ShoppingCartController.ViewCart (MyShop)'
2025-01-27 14:32:51.606 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7298/api/ShoppingCart/view - 200 null application/json; charset=utf-8 1730.7309ms
2025-01-27 14:33:00.402 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Payment - null null
2025-01-27 14:33:00.419 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Payment (MyShop)'
2025-01-27 14:33:00.423 +03:00 [INF] Route matched with {action = "Payment", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Payment(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 14:33:00.467 +03:00 [INF] Executing ViewResult, running view Payment.
2025-01-27 14:33:00.495 +03:00 [INF] Executed ViewResult - view Payment executed in 28.9418ms.
2025-01-27 14:33:00.499 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Payment (MyShop) in 75.1781ms
2025-01-27 14:33:00.501 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Payment (MyShop)'
2025-01-27 14:33:00.503 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Payment - 200 null text/html; charset=utf-8 101.1042ms
2025-01-27 14:33:00.526 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 14:33:00.526 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 14:33:00.528 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 14:33:00.529 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 14:33:00.534 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 7.3226ms
2025-01-27 14:33:00.537 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 10.5075ms
2025-01-27 14:33:00.540 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 11.2447ms
2025-01-27 14:33:00.551 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 14:33:00.556 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 14:33:00.576 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 46.7992ms
2025-01-27 14:33:00.595 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7298/Payment/process-payment - application/json 12
2025-01-27 14:33:00.602 +03:00 [INF] CORS policy execution successful.
2025-01-27 14:33:00.605 +03:00 [INF] Executing endpoint 'MyShop.Controllers.PaymentController.ProcessPayment (MyShop)'
2025-01-27 14:33:00.617 +03:00 [INF] Route matched with {action = "ProcessPayment", controller = "Payment"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ProcessPayment(ProcessPaymentCommand) on controller MyShop.Controllers.PaymentController (MyShop).
2025-01-27 14:33:00.677 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__request_UserId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[id], [u].[RefreshToken], [u].[RefreshTokenExpiryTime], [u].[Role], [u].[address], [u].[email], [u].[name], [u].[number], [u].[password]
FROM [Usesrs] AS [u]
WHERE [u].[id] = @__request_UserId_0
2025-01-27 14:33:00.754 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__request_UserId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[Id], [s].[ProductId], [s].[ProductName], [s].[Quantity], [s].[UserId], [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity]
FROM [ShoppingCarts] AS [s]
INNER JOIN [Products] AS [p] ON [s].[ProductId] = [p].[Id]
WHERE [s].[UserId] = @__request_UserId_0
2025-01-27 14:33:00.810 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`1[[System.Single, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-01-27 14:33:00.818 +03:00 [INF] Executed action MyShop.Controllers.PaymentController.ProcessPayment (MyShop) in 199.008ms
2025-01-27 14:33:00.820 +03:00 [INF] Executed endpoint 'MyShop.Controllers.PaymentController.ProcessPayment (MyShop)'
2025-01-27 14:33:00.822 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7298/Payment/process-payment - 200 null application/json; charset=utf-8 229.2136ms
2025-01-27 14:38:14.029 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-27 14:38:14.314 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-27 14:38:14.316 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-27 14:38:14.389 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-27 14:38:14.392 +03:00 [INF] Hosting environment: Development
2025-01-27 14:38:14.393 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-27 14:38:15.048 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-27 14:38:15.316 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 14:38:15.335 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 14:38:15.367 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 14:38:15.461 +03:00 [INF] Executed ViewResult - view Index executed in 93.4557ms.
2025-01-27 14:38:15.464 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 14:38:15.470 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 14:38:15.465 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 14:38:15.476 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 135.4891ms
2025-01-27 14:38:15.465 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 14:38:15.489 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 14:38:15.487 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 22.0716ms
2025-01-27 14:38:15.508 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 42.7843ms
2025-01-27 14:38:15.508 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 42.8124ms
2025-01-27 14:38:15.511 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 14:38:15.512 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 474.461ms
2025-01-27 14:38:15.512 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 14:38:15.568 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 102.2625ms
2025-01-27 14:38:23.784 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/swagger/index.html - null null
2025-01-27 14:38:23.845 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/swagger/index.html - 200 null text/html;charset=utf-8 60.6101ms
2025-01-27 14:38:23.863 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 14:38:23.863 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 14:38:23.867 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 5.5608ms
2025-01-27 14:38:23.896 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 33.2293ms
2025-01-27 14:38:23.942 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/swagger/v1/swagger.json - null null
2025-01-27 14:38:24.070 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 128.9206ms
2025-01-27 14:43:40.485 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-27 14:43:40.793 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-27 14:43:40.795 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-27 14:43:40.906 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-27 14:43:40.922 +03:00 [INF] Hosting environment: Development
2025-01-27 14:43:40.924 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-27 14:43:41.051 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-27 14:43:41.308 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 14:43:41.342 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 14:43:41.397 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 14:43:41.526 +03:00 [INF] Executed ViewResult - view Index executed in 108.1282ms.
2025-01-27 14:43:41.532 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 14:43:41.537 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 185.7175ms
2025-01-27 14:43:41.533 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/egypt-3325133_1280.jpg - null null
2025-01-27 14:43:41.532 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 14:43:41.554 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 14:43:41.533 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 14:43:41.532 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 14:43:41.566 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 33.8197ms
2025-01-27 14:43:41.570 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 529.459ms
2025-01-27 14:43:41.569 +03:00 [INF] The file /Images/egypt-3325133_1280.jpg was not modified
2025-01-27 14:43:41.581 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 14:43:41.591 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/egypt-3325133_1280.jpg - 304 null image/jpeg 58.0437ms
2025-01-27 14:43:41.567 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 33.6057ms
2025-01-27 14:43:41.574 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 41.5262ms
2025-01-27 14:43:41.609 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 14:43:41.688 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 156.1424ms
2025-01-27 14:43:46.281 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7298/api/ShoppingCart/view - application/json 12
2025-01-27 14:43:46.287 +03:00 [INF] CORS policy execution successful.
2025-01-27 14:43:46.291 +03:00 [INF] Executing endpoint 'apiProject.Controllers.ShoppingCartController.ViewCart (MyShop)'
2025-01-27 14:43:46.299 +03:00 [INF] Route matched with {action = "ViewCart", controller = "ShoppingCart"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ViewCart(ViewCartQuery) on controller apiProject.Controllers.ShoppingCartController (MyShop).
2025-01-27 14:43:47.943 +03:00 [INF] Executed DbCommand (48ms) [Parameters=[@__request_UserId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[Id], [s].[ProductId], [s].[ProductName], [s].[Quantity], [s].[UserId], [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity]
FROM [ShoppingCarts] AS [s]
INNER JOIN [Products] AS [p] ON [s].[ProductId] = [p].[Id]
WHERE [s].[UserId] = @__request_UserId_0
2025-01-27 14:43:47.986 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ShoppingDTO, MyShop.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 14:43:48.016 +03:00 [INF] Executed action apiProject.Controllers.ShoppingCartController.ViewCart (MyShop) in 1713.2541ms
2025-01-27 14:43:48.018 +03:00 [INF] Executed endpoint 'apiProject.Controllers.ShoppingCartController.ViewCart (MyShop)'
2025-01-27 14:43:48.025 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7298/api/ShoppingCart/view - 200 null application/json; charset=utf-8 1743.7485ms
2025-01-27 14:43:50.215 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Payment - null null
2025-01-27 14:43:50.227 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Payment (MyShop)'
2025-01-27 14:43:50.232 +03:00 [INF] Route matched with {action = "Payment", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Payment(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 14:43:50.272 +03:00 [INF] Executing ViewResult, running view Payment.
2025-01-27 14:43:50.302 +03:00 [INF] Executed ViewResult - view Payment executed in 30.3717ms.
2025-01-27 14:43:50.305 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Payment (MyShop) in 71.637ms
2025-01-27 14:43:50.306 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Payment (MyShop)'
2025-01-27 14:43:50.307 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Payment - 200 null text/html; charset=utf-8 92.1403ms
2025-01-27 14:43:50.317 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 14:43:50.319 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 14:43:50.319 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 14:43:50.324 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 6.649ms
2025-01-27 14:43:50.333 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 14.6525ms
2025-01-27 14:43:50.319 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 14:43:50.339 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 14:43:50.345 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 27.0738ms
2025-01-27 14:43:50.353 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 14:43:50.359 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 40.0925ms
2025-01-27 14:44:04.012 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Index - null null
2025-01-27 14:44:04.030 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 14:44:04.033 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 14:44:04.035 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 14:44:04.043 +03:00 [INF] Executed ViewResult - view Index executed in 7.3777ms.
2025-01-27 14:44:04.046 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 11.2025ms
2025-01-27 14:44:04.047 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 14:44:04.048 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Index - 200 null text/html; charset=utf-8 36.547ms
2025-01-27 14:44:04.061 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 14:44:04.066 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 14:44:04.066 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 14:44:04.066 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 14:44:04.071 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 5.3196ms
2025-01-27 14:44:04.067 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 7.2732ms
2025-01-27 14:44:04.086 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 14:44:04.081 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 15.5679ms
2025-01-27 14:44:04.090 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 24.1396ms
2025-01-27 14:44:04.092 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 14:44:37.101 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-27 14:44:37.411 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-27 14:44:37.413 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-27 14:44:37.516 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-27 14:44:37.520 +03:00 [INF] Hosting environment: Development
2025-01-27 14:44:37.521 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-27 14:44:37.753 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-27 14:44:37.987 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 14:44:38.008 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 14:44:38.037 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 14:44:38.131 +03:00 [INF] Executed ViewResult - view Index executed in 94.7134ms.
2025-01-27 14:44:38.139 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 128.0607ms
2025-01-27 14:44:38.146 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 14:44:38.151 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 14:44:38.146 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 14:44:38.174 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 14:44:38.174 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 14:44:38.181 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 435.6955ms
2025-01-27 14:44:38.175 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 23.7112ms
2025-01-27 14:44:38.225 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 50.5206ms
2025-01-27 14:44:38.185 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 38.7605ms
2025-01-27 14:44:38.251 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 14:44:38.258 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 14:44:38.294 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 119.9623ms
2025-01-27 14:44:41.449 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7298/api/ShoppingCart/view - application/json 12
2025-01-27 14:44:41.467 +03:00 [INF] CORS policy execution successful.
2025-01-27 14:44:41.475 +03:00 [INF] Executing endpoint 'apiProject.Controllers.ShoppingCartController.ViewCart (MyShop)'
2025-01-27 14:44:41.483 +03:00 [INF] Route matched with {action = "ViewCart", controller = "ShoppingCart"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ViewCart(ViewCartQuery) on controller apiProject.Controllers.ShoppingCartController (MyShop).
2025-01-27 14:44:42.970 +03:00 [INF] Executed DbCommand (50ms) [Parameters=[@__request_UserId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[Id], [s].[ProductId], [s].[ProductName], [s].[Quantity], [s].[UserId], [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity]
FROM [ShoppingCarts] AS [s]
INNER JOIN [Products] AS [p] ON [s].[ProductId] = [p].[Id]
WHERE [s].[UserId] = @__request_UserId_0
2025-01-27 14:44:43.012 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ShoppingDTO, MyShop.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 14:44:43.055 +03:00 [INF] Executed action apiProject.Controllers.ShoppingCartController.ViewCart (MyShop) in 1568.74ms
2025-01-27 14:44:43.057 +03:00 [INF] Executed endpoint 'apiProject.Controllers.ShoppingCartController.ViewCart (MyShop)'
2025-01-27 14:44:43.064 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7298/api/ShoppingCart/view - 200 null application/json; charset=utf-8 1616.5392ms
2025-01-27 14:44:45.225 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Payment - null null
2025-01-27 14:44:45.238 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Payment (MyShop)'
2025-01-27 14:44:45.242 +03:00 [INF] Route matched with {action = "Payment", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Payment(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 14:44:45.281 +03:00 [INF] Executing ViewResult, running view Payment.
2025-01-27 14:44:45.313 +03:00 [INF] Executed ViewResult - view Payment executed in 33.0892ms.
2025-01-27 14:44:45.315 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Payment (MyShop) in 71.1898ms
2025-01-27 14:44:45.317 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Payment (MyShop)'
2025-01-27 14:44:45.319 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Payment - 200 null text/html; charset=utf-8 93.9956ms
2025-01-27 14:44:45.331 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 14:44:45.332 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 14:44:45.332 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 14:44:45.332 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 14:44:45.342 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 10.2736ms
2025-01-27 14:44:45.350 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 18.5064ms
2025-01-27 14:44:45.357 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 14:44:45.338 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 7.1987ms
2025-01-27 14:44:45.388 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 14:44:45.396 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 64.233ms
2025-01-27 14:44:59.392 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Payment - null null
2025-01-27 14:44:59.399 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Payment (MyShop)'
2025-01-27 14:44:59.402 +03:00 [INF] Route matched with {action = "Payment", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Payment(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 14:44:59.407 +03:00 [INF] Executing ViewResult, running view Payment.
2025-01-27 14:44:59.418 +03:00 [INF] Executed ViewResult - view Payment executed in 11.6294ms.
2025-01-27 14:44:59.421 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Payment (MyShop) in 15.1543ms
2025-01-27 14:44:59.427 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Payment (MyShop)'
2025-01-27 14:44:59.429 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Payment - 200 null text/html; charset=utf-8 37.9478ms
2025-01-27 14:44:59.433 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 14:44:59.433 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 14:44:59.434 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 14:44:59.434 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 14:44:59.442 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 9.8715ms
2025-01-27 14:44:59.446 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 12.5827ms
2025-01-27 14:44:59.453 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 14:44:59.438 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 5.4365ms
2025-01-27 14:44:59.472 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 14:44:59.476 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 42.0489ms
2025-01-27 14:45:07.926 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Payment - null null
2025-01-27 14:45:07.932 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Payment (MyShop)'
2025-01-27 14:45:07.933 +03:00 [INF] Route matched with {action = "Payment", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Payment(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 14:45:07.937 +03:00 [INF] Executing ViewResult, running view Payment.
2025-01-27 14:45:07.947 +03:00 [INF] Executed ViewResult - view Payment executed in 10.4695ms.
2025-01-27 14:45:07.948 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Payment (MyShop) in 11.8567ms
2025-01-27 14:45:07.949 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Payment (MyShop)'
2025-01-27 14:45:07.951 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Payment - 200 null text/html; charset=utf-8 24.861ms
2025-01-27 14:45:07.970 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 14:45:07.974 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 14:45:07.974 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 14:45:07.974 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 14:45:07.978 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 4.4457ms
2025-01-27 14:45:07.975 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 5.1489ms
2025-01-27 14:45:07.994 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 14:45:08.004 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 14:45:07.981 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 6.8983ms
2025-01-27 14:45:08.008 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 34.5239ms
2025-01-27 14:45:11.487 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Index - null null
2025-01-27 14:45:11.501 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 14:45:11.505 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 14:45:11.507 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 14:45:11.511 +03:00 [INF] Executed ViewResult - view Index executed in 4.8835ms.
2025-01-27 14:45:11.512 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 6.1416ms
2025-01-27 14:45:11.513 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 14:45:11.514 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Index - 200 null text/html; charset=utf-8 27.4296ms
2025-01-27 14:45:11.547 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 14:45:11.549 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 14:45:11.553 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 14:45:11.548 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 14:45:11.556 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 9.3413ms
2025-01-27 14:45:11.562 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 12.808ms
2025-01-27 14:45:11.587 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 40.0938ms
2025-01-27 14:45:11.622 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 14:45:11.623 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 70.8946ms
2025-01-27 14:45:11.626 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 14:45:15.622 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7298/api/Authentication/register - application/json 48
2025-01-27 14:45:15.627 +03:00 [INF] CORS policy execution successful.
2025-01-27 14:45:15.629 +03:00 [INF] Executing endpoint 'MyShop.Controllers.Authentication.Register (MyShop)'
2025-01-27 14:45:15.637 +03:00 [INF] Route matched with {action = "Register", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterUserCommand) on controller MyShop.Controllers.Authentication (MyShop).
2025-01-27 14:45:15.702 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-01-27 14:45:15.882 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-01-27 14:45:15.933 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__username_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[id], [u].[RefreshToken], [u].[RefreshTokenExpiryTime], [u].[Role], [u].[address], [u].[email], [u].[name], [u].[number], [u].[password]
FROM [Usesrs] AS [u]
WHERE [u].[name] = @__username_0
2025-01-27 14:45:16.034 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Usesrs] SET [RefreshToken] = @p0
OUTPUT 1
WHERE [id] = @p1;
2025-01-27 14:45:16.052 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`2[[MyShop.Domain.Entities.User, MyShop.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-01-27 14:45:16.063 +03:00 [INF] Executed action MyShop.Controllers.Authentication.Register (MyShop) in 422.9845ms
2025-01-27 14:45:16.067 +03:00 [INF] Executed endpoint 'MyShop.Controllers.Authentication.Register (MyShop)'
2025-01-27 14:45:16.069 +03:00 [INF] Session started; Key:a9f1f513-4635-7f7e-c621-2e9a342513f1, Id:f3b0c119-62f9-a08e-8518-769909a6498b
2025-01-27 14:45:16.071 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7298/api/Authentication/register - 200 null application/json; charset=utf-8 449.0467ms
2025-01-27 14:45:23.597 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7298/api/ShoppingCart/view - application/json 12
2025-01-27 14:45:23.608 +03:00 [INF] CORS policy execution successful.
2025-01-27 14:45:23.610 +03:00 [INF] Executing endpoint 'apiProject.Controllers.ShoppingCartController.ViewCart (MyShop)'
2025-01-27 14:45:23.611 +03:00 [INF] Route matched with {action = "ViewCart", controller = "ShoppingCart"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ViewCart(ViewCartQuery) on controller apiProject.Controllers.ShoppingCartController (MyShop).
2025-01-27 14:45:23.671 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__request_UserId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[Id], [s].[ProductId], [s].[ProductName], [s].[Quantity], [s].[UserId], [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity]
FROM [ShoppingCarts] AS [s]
INNER JOIN [Products] AS [p] ON [s].[ProductId] = [p].[Id]
WHERE [s].[UserId] = @__request_UserId_0
2025-01-27 14:45:23.687 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ShoppingDTO, MyShop.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 14:45:23.699 +03:00 [INF] Executed action apiProject.Controllers.ShoppingCartController.ViewCart (MyShop) in 86.662ms
2025-01-27 14:45:23.702 +03:00 [INF] Executed endpoint 'apiProject.Controllers.ShoppingCartController.ViewCart (MyShop)'
2025-01-27 14:45:23.704 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7298/api/ShoppingCart/view - 200 null application/json; charset=utf-8 107.0569ms
2025-01-27 14:45:26.053 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Payment - null null
2025-01-27 14:45:26.060 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Payment (MyShop)'
2025-01-27 14:45:26.061 +03:00 [INF] Route matched with {action = "Payment", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Payment(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 14:45:26.063 +03:00 [INF] Executing ViewResult, running view Payment.
2025-01-27 14:45:26.071 +03:00 [INF] Executed ViewResult - view Payment executed in 8.1475ms.
2025-01-27 14:45:26.073 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Payment (MyShop) in 10.4663ms
2025-01-27 14:45:26.075 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Payment (MyShop)'
2025-01-27 14:45:26.076 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Payment - 200 null text/html; charset=utf-8 23.8906ms
2025-01-27 14:45:26.082 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 14:45:26.082 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 14:45:26.087 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 14:45:26.087 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 14:45:26.091 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 10.2622ms
2025-01-27 14:45:26.094 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 7.7274ms
2025-01-27 14:45:26.105 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 14:45:26.088 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 7.1247ms
2025-01-27 14:45:26.117 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 29.8644ms
2025-01-27 14:45:26.118 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 14:45:39.109 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Search - null null
2025-01-27 14:45:39.117 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Search (MyShop)'
2025-01-27 14:45:39.121 +03:00 [INF] Route matched with {action = "Search", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Search(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 14:45:39.124 +03:00 [INF] Executing ViewResult, running view Search.
2025-01-27 14:45:39.137 +03:00 [INF] Executed ViewResult - view Search executed in 14.0458ms.
2025-01-27 14:45:39.140 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Search (MyShop) in 17.3141ms
2025-01-27 14:45:39.142 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Search (MyShop)'
2025-01-27 14:45:39.143 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Search - 200 null text/html; charset=utf-8 34.3066ms
2025-01-27 14:45:39.149 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 14:45:39.149 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 14:45:39.153 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 14:45:39.154 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 14:45:39.154 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 7.0172ms
2025-01-27 14:45:39.158 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 8.9561ms
2025-01-27 14:45:39.169 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 14:45:39.169 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/search?searchTerm=gibson - null null
2025-01-27 14:45:39.174 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 14:45:39.177 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 23.4989ms
2025-01-27 14:45:39.161 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 7.5333ms
2025-01-27 14:45:39.182 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.SearchProducts (MyShop)'
2025-01-27 14:45:39.206 +03:00 [INF] Route matched with {action = "SearchProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[MyShop.Domain.Entities.Product]]] SearchProducts(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 14:45:39.248 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__request_SearchTerm_0_contains='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity]
FROM [Products] AS [p]
WHERE [p].[Name] LIKE @__request_SearchTerm_0_contains ESCAPE N'\' OR [p].[Description] LIKE @__request_SearchTerm_0_contains ESCAPE N'\'
2025-01-27 14:45:39.256 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ProductDTO, MyShop.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 14:45:39.269 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.SearchProducts (MyShop) in 59.6123ms
2025-01-27 14:45:39.271 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.SearchProducts (MyShop)'
2025-01-27 14:45:39.273 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/search?searchTerm=gibson - 200 null application/json; charset=utf-8 103.77ms
2025-01-27 14:45:41.196 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7298/api/ShoppingCart/view - application/json 12
2025-01-27 14:45:41.200 +03:00 [INF] CORS policy execution successful.
2025-01-27 14:45:41.201 +03:00 [INF] Executing endpoint 'apiProject.Controllers.ShoppingCartController.ViewCart (MyShop)'
2025-01-27 14:45:41.201 +03:00 [INF] Route matched with {action = "ViewCart", controller = "ShoppingCart"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ViewCart(ViewCartQuery) on controller apiProject.Controllers.ShoppingCartController (MyShop).
2025-01-27 14:45:41.208 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__request_UserId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[Id], [s].[ProductId], [s].[ProductName], [s].[Quantity], [s].[UserId], [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity]
FROM [ShoppingCarts] AS [s]
INNER JOIN [Products] AS [p] ON [s].[ProductId] = [p].[Id]
WHERE [s].[UserId] = @__request_UserId_0
2025-01-27 14:45:41.211 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ShoppingDTO, MyShop.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 14:45:41.223 +03:00 [INF] Executed action apiProject.Controllers.ShoppingCartController.ViewCart (MyShop) in 19.8539ms
2025-01-27 14:45:41.225 +03:00 [INF] Executed endpoint 'apiProject.Controllers.ShoppingCartController.ViewCart (MyShop)'
2025-01-27 14:45:41.226 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7298/api/ShoppingCart/view - 200 null application/json; charset=utf-8 29.8218ms
2025-01-27 14:45:42.956 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Payment - null null
2025-01-27 14:45:42.969 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Payment (MyShop)'
2025-01-27 14:45:42.972 +03:00 [INF] Route matched with {action = "Payment", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Payment(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 14:45:42.975 +03:00 [INF] Executing ViewResult, running view Payment.
2025-01-27 14:45:42.982 +03:00 [INF] Executed ViewResult - view Payment executed in 6.7474ms.
2025-01-27 14:45:42.984 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Payment (MyShop) in 9.4781ms
2025-01-27 14:45:42.985 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Payment (MyShop)'
2025-01-27 14:45:42.986 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Payment - 200 null text/html; charset=utf-8 30.0696ms
2025-01-27 14:45:43.007 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 14:45:43.008 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 14:45:43.008 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 14:45:43.008 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 14:45:43.012 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 5.6084ms
2025-01-27 14:45:43.016 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 8.1519ms
2025-01-27 14:45:43.019 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 11.0848ms
2025-01-27 14:45:43.043 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 34.7801ms
2025-01-27 14:45:43.044 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 14:45:43.050 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 14:46:29.254 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-27 14:46:29.606 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-27 14:46:29.610 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-27 14:46:29.696 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-27 14:46:29.698 +03:00 [INF] Hosting environment: Development
2025-01-27 14:46:29.700 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-27 14:46:30.233 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-27 14:46:30.484 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 14:46:30.516 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 14:46:30.554 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 14:46:30.680 +03:00 [INF] Executed ViewResult - view Index executed in 123.3055ms.
2025-01-27 14:46:30.686 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 14:46:30.692 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 14:46:30.686 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 14:46:30.714 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 194.2279ms
2025-01-27 14:46:30.701 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 14:46:30.723 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 14:46:30.725 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 38.8618ms
2025-01-27 14:46:30.726 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 35.146ms
2025-01-27 14:46:30.734 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 14:46:30.735 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 512.8ms
2025-01-27 14:46:30.726 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 40.8394ms
2025-01-27 14:46:30.755 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 14:46:30.779 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 79.1606ms
2025-01-27 14:46:37.042 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7298/api/ShoppingCart/view - application/json 12
2025-01-27 14:46:37.050 +03:00 [INF] CORS policy execution successful.
2025-01-27 14:46:37.054 +03:00 [INF] Executing endpoint 'apiProject.Controllers.ShoppingCartController.ViewCart (MyShop)'
2025-01-27 14:46:37.062 +03:00 [INF] Route matched with {action = "ViewCart", controller = "ShoppingCart"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ViewCart(ViewCartQuery) on controller apiProject.Controllers.ShoppingCartController (MyShop).
2025-01-27 14:46:38.358 +03:00 [INF] Executed DbCommand (43ms) [Parameters=[@__request_UserId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[Id], [s].[ProductId], [s].[ProductName], [s].[Quantity], [s].[UserId], [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity]
FROM [ShoppingCarts] AS [s]
INNER JOIN [Products] AS [p] ON [s].[ProductId] = [p].[Id]
WHERE [s].[UserId] = @__request_UserId_0
2025-01-27 14:46:38.403 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ShoppingDTO, MyShop.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 14:46:38.433 +03:00 [INF] Executed action apiProject.Controllers.ShoppingCartController.ViewCart (MyShop) in 1368.4565ms
2025-01-27 14:46:38.437 +03:00 [INF] Executed endpoint 'apiProject.Controllers.ShoppingCartController.ViewCart (MyShop)'
2025-01-27 14:46:38.445 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7298/api/ShoppingCart/view - 200 null application/json; charset=utf-8 1402.4417ms
2025-01-27 14:48:27.012 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Payment - null null
2025-01-27 14:48:27.034 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Payment (MyShop)'
2025-01-27 14:48:27.037 +03:00 [INF] Route matched with {action = "Payment", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Payment(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 14:48:27.080 +03:00 [INF] Executing ViewResult, running view Payment.
2025-01-27 14:48:27.123 +03:00 [INF] Executed ViewResult - view Payment executed in 45.2333ms.
2025-01-27 14:48:27.127 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Payment (MyShop) in 88.8879ms
2025-01-27 14:48:27.131 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Payment (MyShop)'
2025-01-27 14:48:27.133 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Payment - 200 null text/html; charset=utf-8 121.8579ms
2025-01-27 14:48:27.140 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 14:48:27.140 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 14:48:27.152 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 12.0548ms
2025-01-27 14:48:27.141 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 14:48:27.140 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 14:48:27.165 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 14:48:27.173 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 32.8486ms
2025-01-27 14:48:27.159 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 19.4202ms
2025-01-27 14:48:27.191 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 14:48:27.206 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 65.221ms
2025-01-27 14:48:27.222 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7298/api/ShoppingCart/view - application/json 2
2025-01-27 14:48:27.230 +03:00 [INF] CORS policy execution successful.
2025-01-27 14:48:27.234 +03:00 [INF] Executing endpoint 'apiProject.Controllers.ShoppingCartController.ViewCart (MyShop)'
2025-01-27 14:48:27.237 +03:00 [INF] Route matched with {action = "ViewCart", controller = "ShoppingCart"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ViewCart(ViewCartQuery) on controller apiProject.Controllers.ShoppingCartController (MyShop).
2025-01-27 14:48:27.269 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__request_UserId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[Id], [s].[ProductId], [s].[ProductName], [s].[Quantity], [s].[UserId], [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity]
FROM [ShoppingCarts] AS [s]
INNER JOIN [Products] AS [p] ON [s].[ProductId] = [p].[Id]
WHERE [s].[UserId] = @__request_UserId_0
2025-01-27 14:48:27.273 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ShoppingDTO, MyShop.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 14:48:27.290 +03:00 [INF] Executed action apiProject.Controllers.ShoppingCartController.ViewCart (MyShop) in 51.9438ms
2025-01-27 14:48:27.295 +03:00 [INF] Executed endpoint 'apiProject.Controllers.ShoppingCartController.ViewCart (MyShop)'
2025-01-27 14:48:27.299 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7298/api/ShoppingCart/view - 200 null application/json; charset=utf-8 76.818ms
2025-01-27 14:48:39.371 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7298/api/ShoppingCart/view - application/json 12
2025-01-27 14:48:39.386 +03:00 [INF] CORS policy execution successful.
2025-01-27 14:48:39.387 +03:00 [INF] Executing endpoint 'apiProject.Controllers.ShoppingCartController.ViewCart (MyShop)'
2025-01-27 14:48:39.388 +03:00 [INF] Route matched with {action = "ViewCart", controller = "ShoppingCart"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ViewCart(ViewCartQuery) on controller apiProject.Controllers.ShoppingCartController (MyShop).
2025-01-27 14:48:39.442 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__request_UserId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[Id], [s].[ProductId], [s].[ProductName], [s].[Quantity], [s].[UserId], [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity]
FROM [ShoppingCarts] AS [s]
INNER JOIN [Products] AS [p] ON [s].[ProductId] = [p].[Id]
WHERE [s].[UserId] = @__request_UserId_0
2025-01-27 14:48:39.446 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ShoppingDTO, MyShop.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 14:48:39.461 +03:00 [INF] Executed action apiProject.Controllers.ShoppingCartController.ViewCart (MyShop) in 71.0367ms
2025-01-27 14:48:39.463 +03:00 [INF] Executed endpoint 'apiProject.Controllers.ShoppingCartController.ViewCart (MyShop)'
2025-01-27 14:48:39.464 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7298/api/ShoppingCart/view - 200 null application/json; charset=utf-8 93.5731ms
2025-01-27 14:54:19.181 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-27 14:54:19.480 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-27 14:54:19.482 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-27 14:54:19.640 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-27 14:54:19.642 +03:00 [INF] Hosting environment: Development
2025-01-27 14:54:19.648 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-27 14:54:19.789 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-27 14:54:20.026 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 14:54:20.042 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 14:54:20.080 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 14:54:20.188 +03:00 [INF] Executed ViewResult - view Index executed in 106.3549ms.
2025-01-27 14:54:20.190 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 14:54:20.190 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 14:54:20.190 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 14:54:20.201 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 153.0012ms
2025-01-27 14:54:20.195 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/egypt-3325133_1280.jpg - null null
2025-01-27 14:54:20.218 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 14:54:20.205 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 14:54:20.228 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 38.207ms
2025-01-27 14:54:20.228 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 37.715ms
2025-01-27 14:54:20.239 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 461.474ms
2025-01-27 14:54:20.236 +03:00 [INF] The file /Images/egypt-3325133_1280.jpg was not modified
2025-01-27 14:54:20.228 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 38.2516ms
2025-01-27 14:54:20.241 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 14:54:20.255 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/egypt-3325133_1280.jpg - 304 null image/jpeg 59.7897ms
2025-01-27 14:54:20.257 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 14:54:20.283 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 78.1576ms
2025-01-27 14:54:23.568 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7298/api/ShoppingCart/view - application/json 12
2025-01-27 14:54:23.574 +03:00 [INF] CORS policy execution successful.
2025-01-27 14:54:23.577 +03:00 [INF] Executing endpoint 'apiProject.Controllers.ShoppingCartController.ViewCart (MyShop)'
2025-01-27 14:54:23.586 +03:00 [INF] Route matched with {action = "ViewCart", controller = "ShoppingCart"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ViewCart(ViewCartQuery) on controller apiProject.Controllers.ShoppingCartController (MyShop).
2025-01-27 14:54:25.004 +03:00 [INF] Executed DbCommand (62ms) [Parameters=[@__request_UserId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[Id], [s].[ProductId], [s].[ProductName], [s].[Quantity], [s].[UserId], [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity]
FROM [ShoppingCarts] AS [s]
INNER JOIN [Products] AS [p] ON [s].[ProductId] = [p].[Id]
WHERE [s].[UserId] = @__request_UserId_0
2025-01-27 14:54:25.052 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ShoppingDTO, MyShop.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 14:54:25.084 +03:00 [INF] Executed action apiProject.Controllers.ShoppingCartController.ViewCart (MyShop) in 1495.5112ms
2025-01-27 14:54:25.088 +03:00 [INF] Executed endpoint 'apiProject.Controllers.ShoppingCartController.ViewCart (MyShop)'
2025-01-27 14:54:25.097 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7298/api/ShoppingCart/view - 200 null application/json; charset=utf-8 1529.3832ms
2025-01-27 14:54:26.817 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Payment - null null
2025-01-27 14:54:26.837 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Payment (MyShop)'
2025-01-27 14:54:26.841 +03:00 [INF] Route matched with {action = "Payment", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Payment(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 14:54:26.887 +03:00 [INF] Executing ViewResult, running view Payment.
2025-01-27 14:54:26.917 +03:00 [INF] Executed ViewResult - view Payment executed in 30.7287ms.
2025-01-27 14:54:26.919 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Payment (MyShop) in 74.6291ms
2025-01-27 14:54:26.921 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Payment (MyShop)'
2025-01-27 14:54:26.922 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Payment - 200 null text/html; charset=utf-8 105.5609ms
2025-01-27 14:54:26.936 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 14:54:26.937 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 14:54:26.937 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 14:54:26.938 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 14:54:26.941 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 5.1011ms
2025-01-27 14:54:26.944 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 7.7203ms
2025-01-27 14:54:26.949 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 12.434ms
2025-01-27 14:54:26.961 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 14:54:26.964 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 14:54:26.977 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 39.2554ms
2025-01-27 14:54:26.994 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7298/api/ShoppingCart/view - application/json 12
2025-01-27 14:54:27.000 +03:00 [INF] CORS policy execution successful.
2025-01-27 14:54:27.004 +03:00 [INF] Executing endpoint 'apiProject.Controllers.ShoppingCartController.ViewCart (MyShop)'
2025-01-27 14:54:27.007 +03:00 [INF] Route matched with {action = "ViewCart", controller = "ShoppingCart"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ViewCart(ViewCartQuery) on controller apiProject.Controllers.ShoppingCartController (MyShop).
2025-01-27 14:54:27.042 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__request_UserId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[Id], [s].[ProductId], [s].[ProductName], [s].[Quantity], [s].[UserId], [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity]
FROM [ShoppingCarts] AS [s]
INNER JOIN [Products] AS [p] ON [s].[ProductId] = [p].[Id]
WHERE [s].[UserId] = @__request_UserId_0
2025-01-27 14:54:27.047 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ShoppingDTO, MyShop.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 14:54:27.073 +03:00 [INF] Executed action apiProject.Controllers.ShoppingCartController.ViewCart (MyShop) in 60.2652ms
2025-01-27 14:54:27.075 +03:00 [INF] Executed endpoint 'apiProject.Controllers.ShoppingCartController.ViewCart (MyShop)'
2025-01-27 14:54:27.077 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7298/api/ShoppingCart/view - 200 null application/json; charset=utf-8 83.4394ms
2025-01-27 14:54:29.851 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/default-image.png - null null
2025-01-27 14:54:29.857 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/default-image.png - 404 0 null 6.2717ms
2025-01-27 14:54:29.860 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/images/default-image.png, Response status code: 404
2025-01-27 14:55:26.477 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-27 14:55:26.736 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-27 14:55:26.738 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-27 14:55:26.813 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-27 14:55:26.817 +03:00 [INF] Hosting environment: Development
2025-01-27 14:55:26.818 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-27 14:55:27.482 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-27 14:55:27.744 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 14:55:27.764 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 14:55:27.796 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 14:55:27.897 +03:00 [INF] Executed ViewResult - view Index executed in 102.1606ms.
2025-01-27 14:55:27.907 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 140.5549ms
2025-01-27 14:55:27.911 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 14:55:27.914 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 14:55:27.915 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 14:55:27.915 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 14:55:27.916 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 14:55:27.934 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 21.0806ms
2025-01-27 14:55:27.946 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 30.9087ms
2025-01-27 14:55:27.946 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 30.7451ms
2025-01-27 14:55:27.933 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 465.3633ms
2025-01-27 14:55:27.967 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 14:55:27.970 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 14:55:27.999 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 83.1681ms
2025-01-27 14:55:30.207 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7298/api/ShoppingCart/view - application/json 12
2025-01-27 14:55:30.217 +03:00 [INF] CORS policy execution successful.
2025-01-27 14:55:30.222 +03:00 [INF] Executing endpoint 'apiProject.Controllers.ShoppingCartController.ViewCart (MyShop)'
2025-01-27 14:55:30.230 +03:00 [INF] Route matched with {action = "ViewCart", controller = "ShoppingCart"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ViewCart(ViewCartQuery) on controller apiProject.Controllers.ShoppingCartController (MyShop).
2025-01-27 14:55:31.849 +03:00 [INF] Executed DbCommand (60ms) [Parameters=[@__request_UserId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[Id], [s].[ProductId], [s].[ProductName], [s].[Quantity], [s].[UserId], [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity]
FROM [ShoppingCarts] AS [s]
INNER JOIN [Products] AS [p] ON [s].[ProductId] = [p].[Id]
WHERE [s].[UserId] = @__request_UserId_0
2025-01-27 14:55:31.903 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ShoppingDTO, MyShop.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 14:55:31.939 +03:00 [INF] Executed action apiProject.Controllers.ShoppingCartController.ViewCart (MyShop) in 1703.6075ms
2025-01-27 14:55:31.942 +03:00 [INF] Executed endpoint 'apiProject.Controllers.ShoppingCartController.ViewCart (MyShop)'
2025-01-27 14:55:31.954 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7298/api/ShoppingCart/view - 200 null application/json; charset=utf-8 1746.6534ms
2025-01-27 14:55:33.862 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Payment - null null
2025-01-27 14:55:33.879 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Payment (MyShop)'
2025-01-27 14:55:33.883 +03:00 [INF] Route matched with {action = "Payment", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Payment(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 14:55:33.950 +03:00 [INF] Executing ViewResult, running view Payment.
2025-01-27 14:55:33.991 +03:00 [INF] Executed ViewResult - view Payment executed in 42.2167ms.
2025-01-27 14:55:33.995 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Payment (MyShop) in 108.4818ms
2025-01-27 14:55:33.997 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Payment (MyShop)'
2025-01-27 14:55:33.999 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Payment - 200 null text/html; charset=utf-8 137.7082ms
2025-01-27 14:55:34.012 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 14:55:34.014 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 14:55:34.014 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 14:55:34.014 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 14:55:34.020 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 6.5752ms
2025-01-27 14:55:34.038 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 14:55:34.033 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 19.0614ms
2025-01-27 14:55:34.018 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 6.0911ms
2025-01-27 14:55:34.046 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 32.3616ms
2025-01-27 14:55:34.056 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 14:55:34.069 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7298/api/ShoppingCart/view - application/json 12
2025-01-27 14:55:34.075 +03:00 [INF] CORS policy execution successful.
2025-01-27 14:55:34.080 +03:00 [INF] Executing endpoint 'apiProject.Controllers.ShoppingCartController.ViewCart (MyShop)'
2025-01-27 14:55:34.083 +03:00 [INF] Route matched with {action = "ViewCart", controller = "ShoppingCart"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ViewCart(ViewCartQuery) on controller apiProject.Controllers.ShoppingCartController (MyShop).
2025-01-27 14:55:34.118 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__request_UserId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[Id], [s].[ProductId], [s].[ProductName], [s].[Quantity], [s].[UserId], [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity]
FROM [ShoppingCarts] AS [s]
INNER JOIN [Products] AS [p] ON [s].[ProductId] = [p].[Id]
WHERE [s].[UserId] = @__request_UserId_0
2025-01-27 14:55:34.125 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ShoppingDTO, MyShop.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 14:55:34.149 +03:00 [INF] Executed action apiProject.Controllers.ShoppingCartController.ViewCart (MyShop) in 59.5281ms
2025-01-27 14:55:34.152 +03:00 [INF] Executed endpoint 'apiProject.Controllers.ShoppingCartController.ViewCart (MyShop)'
2025-01-27 14:55:34.156 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7298/api/ShoppingCart/view - 200 null application/json; charset=utf-8 87.1817ms
2025-01-27 14:55:34.167 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/default-image.png - null null
2025-01-27 14:55:34.175 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/default-image.png - 404 0 null 8.2404ms
2025-01-27 14:55:34.182 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/images/default-image.png, Response status code: 404
2025-01-27 14:58:27.146 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-27 14:58:27.432 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-27 14:58:27.436 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-27 14:58:27.521 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-27 14:58:27.523 +03:00 [INF] Hosting environment: Development
2025-01-27 14:58:27.525 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-27 14:58:27.866 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-27 14:58:28.107 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 14:58:28.125 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 14:58:28.162 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 14:58:28.268 +03:00 [INF] Executed ViewResult - view Index executed in 104.7887ms.
2025-01-27 14:58:28.276 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 147.6333ms
2025-01-27 14:58:28.279 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 14:58:28.297 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 437.8897ms
2025-01-27 14:58:28.318 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 14:58:28.318 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 14:58:28.318 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 14:58:28.318 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 14:58:28.335 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 16.8814ms
2025-01-27 14:58:28.337 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 19.3744ms
2025-01-27 14:58:28.337 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 18.8526ms
2025-01-27 14:58:28.380 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 14:58:28.385 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 14:58:28.437 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 118.6197ms
2025-01-27 14:58:30.471 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7298/api/ShoppingCart/view - application/json 12
2025-01-27 14:58:30.481 +03:00 [INF] CORS policy execution successful.
2025-01-27 14:58:30.486 +03:00 [INF] Executing endpoint 'apiProject.Controllers.ShoppingCartController.ViewCart (MyShop)'
2025-01-27 14:58:30.493 +03:00 [INF] Route matched with {action = "ViewCart", controller = "ShoppingCart"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ViewCart(ViewCartQuery) on controller apiProject.Controllers.ShoppingCartController (MyShop).
2025-01-27 14:58:31.837 +03:00 [INF] Executed DbCommand (50ms) [Parameters=[@__request_UserId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[Id], [s].[ProductId], [s].[ProductName], [s].[Quantity], [s].[UserId], [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity]
FROM [ShoppingCarts] AS [s]
INNER JOIN [Products] AS [p] ON [s].[ProductId] = [p].[Id]
WHERE [s].[UserId] = @__request_UserId_0
2025-01-27 14:58:31.877 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ShoppingDTO, MyShop.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 14:58:31.908 +03:00 [INF] Executed action apiProject.Controllers.ShoppingCartController.ViewCart (MyShop) in 1410.3305ms
2025-01-27 14:58:31.910 +03:00 [INF] Executed endpoint 'apiProject.Controllers.ShoppingCartController.ViewCart (MyShop)'
2025-01-27 14:58:31.917 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7298/api/ShoppingCart/view - 200 null application/json; charset=utf-8 1446.6108ms
2025-01-27 14:58:33.486 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Payment - null null
2025-01-27 14:58:33.506 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Payment (MyShop)'
2025-01-27 14:58:33.512 +03:00 [INF] Route matched with {action = "Payment", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Payment(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 14:58:33.571 +03:00 [INF] Executing ViewResult, running view Payment.
2025-01-27 14:58:33.601 +03:00 [INF] Executed ViewResult - view Payment executed in 31.1645ms.
2025-01-27 14:58:33.604 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Payment (MyShop) in 89.2783ms
2025-01-27 14:58:33.606 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Payment (MyShop)'
2025-01-27 14:58:33.608 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Payment - 200 null text/html; charset=utf-8 122.1884ms
2025-01-27 14:58:33.627 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 14:58:33.628 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 14:58:33.628 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 14:58:33.633 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 6.1986ms
2025-01-27 14:58:33.642 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 14.8137ms
2025-01-27 14:58:33.628 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 14:58:33.648 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 14:58:33.652 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 24.2478ms
2025-01-27 14:58:33.656 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 14:58:33.671 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 43.3518ms
2025-01-27 14:58:33.685 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7298/api/ShoppingCart/view - application/json 12
2025-01-27 14:58:33.690 +03:00 [INF] CORS policy execution successful.
2025-01-27 14:58:33.694 +03:00 [INF] Executing endpoint 'apiProject.Controllers.ShoppingCartController.ViewCart (MyShop)'
2025-01-27 14:58:33.697 +03:00 [INF] Route matched with {action = "ViewCart", controller = "ShoppingCart"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ViewCart(ViewCartQuery) on controller apiProject.Controllers.ShoppingCartController (MyShop).
2025-01-27 14:58:33.741 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__request_UserId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[Id], [s].[ProductId], [s].[ProductName], [s].[Quantity], [s].[UserId], [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity]
FROM [ShoppingCarts] AS [s]
INNER JOIN [Products] AS [p] ON [s].[ProductId] = [p].[Id]
WHERE [s].[UserId] = @__request_UserId_0
2025-01-27 14:58:33.753 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ShoppingDTO, MyShop.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 14:58:33.774 +03:00 [INF] Executed action apiProject.Controllers.ShoppingCartController.ViewCart (MyShop) in 73.5127ms
2025-01-27 14:58:33.775 +03:00 [INF] Executed endpoint 'apiProject.Controllers.ShoppingCartController.ViewCart (MyShop)'
2025-01-27 14:58:33.777 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7298/api/ShoppingCart/view - 200 null application/json; charset=utf-8 91.5685ms
2025-01-27 14:59:27.277 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-27 14:59:27.559 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-27 14:59:27.562 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-27 14:59:27.645 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-27 14:59:27.648 +03:00 [INF] Hosting environment: Development
2025-01-27 14:59:27.651 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-27 14:59:28.382 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-27 14:59:28.624 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 14:59:28.644 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 14:59:28.681 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 14:59:28.782 +03:00 [INF] Executed ViewResult - view Index executed in 106.0946ms.
2025-01-27 14:59:28.793 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 144.9168ms
2025-01-27 14:59:28.796 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 14:59:28.800 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 14:59:28.800 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 14:59:28.800 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 14:59:28.801 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 14:59:28.822 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 445.022ms
2025-01-27 14:59:28.829 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 28.9319ms
2025-01-27 14:59:28.829 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 28.9195ms
2025-01-27 14:59:28.842 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 14:59:28.822 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 22.1546ms
2025-01-27 14:59:28.845 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 14:59:28.876 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 75.24ms
2025-01-27 14:59:31.461 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7298/api/ShoppingCart/view - application/json 12
2025-01-27 14:59:31.467 +03:00 [INF] CORS policy execution successful.
2025-01-27 14:59:31.470 +03:00 [INF] Executing endpoint 'apiProject.Controllers.ShoppingCartController.ViewCart (MyShop)'
2025-01-27 14:59:31.477 +03:00 [INF] Route matched with {action = "ViewCart", controller = "ShoppingCart"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ViewCart(ViewCartQuery) on controller apiProject.Controllers.ShoppingCartController (MyShop).
2025-01-27 14:59:32.872 +03:00 [INF] Executed DbCommand (65ms) [Parameters=[@__request_UserId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[Id], [s].[ProductId], [s].[ProductName], [s].[Quantity], [s].[UserId], [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity]
FROM [ShoppingCarts] AS [s]
INNER JOIN [Products] AS [p] ON [s].[ProductId] = [p].[Id]
WHERE [s].[UserId] = @__request_UserId_0
2025-01-27 14:59:32.928 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ShoppingDTO, MyShop.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 14:59:32.969 +03:00 [INF] Executed action apiProject.Controllers.ShoppingCartController.ViewCart (MyShop) in 1489.0038ms
2025-01-27 14:59:32.973 +03:00 [INF] Executed endpoint 'apiProject.Controllers.ShoppingCartController.ViewCart (MyShop)'
2025-01-27 14:59:32.982 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7298/api/ShoppingCart/view - 200 null application/json; charset=utf-8 1521.04ms
2025-01-27 14:59:34.530 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Payment - null null
2025-01-27 14:59:34.544 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Payment (MyShop)'
2025-01-27 14:59:34.547 +03:00 [INF] Route matched with {action = "Payment", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Payment(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 14:59:34.600 +03:00 [INF] Executing ViewResult, running view Payment.
2025-01-27 14:59:34.636 +03:00 [INF] Executed ViewResult - view Payment executed in 37.1128ms.
2025-01-27 14:59:34.639 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Payment (MyShop) in 89.7047ms
2025-01-27 14:59:34.644 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Payment (MyShop)'
2025-01-27 14:59:34.647 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Payment - 200 null text/html; charset=utf-8 117.1133ms
2025-01-27 14:59:34.663 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 14:59:34.664 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 14:59:34.664 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 14:59:34.664 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 14:59:34.668 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 4.7223ms
2025-01-27 14:59:34.671 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 6.7126ms
2025-01-27 14:59:34.673 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 9.3959ms
2025-01-27 14:59:34.699 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 14:59:34.702 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 14:59:34.719 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 55.3065ms
2025-01-27 14:59:34.735 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7298/api/ShoppingCart/view - application/json 12
2025-01-27 14:59:34.743 +03:00 [INF] CORS policy execution successful.
2025-01-27 14:59:34.747 +03:00 [INF] Executing endpoint 'apiProject.Controllers.ShoppingCartController.ViewCart (MyShop)'
2025-01-27 14:59:34.749 +03:00 [INF] Route matched with {action = "ViewCart", controller = "ShoppingCart"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ViewCart(ViewCartQuery) on controller apiProject.Controllers.ShoppingCartController (MyShop).
2025-01-27 14:59:34.782 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__request_UserId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[Id], [s].[ProductId], [s].[ProductName], [s].[Quantity], [s].[UserId], [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity]
FROM [ShoppingCarts] AS [s]
INNER JOIN [Products] AS [p] ON [s].[ProductId] = [p].[Id]
WHERE [s].[UserId] = @__request_UserId_0
2025-01-27 14:59:34.785 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ShoppingDTO, MyShop.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 14:59:34.802 +03:00 [INF] Executed action apiProject.Controllers.ShoppingCartController.ViewCart (MyShop) in 49.7525ms
2025-01-27 14:59:34.804 +03:00 [INF] Executed endpoint 'apiProject.Controllers.ShoppingCartController.ViewCart (MyShop)'
2025-01-27 14:59:34.806 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7298/api/ShoppingCart/view - 200 null application/json; charset=utf-8 71.6156ms
2025-01-27 14:59:51.341 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-27 14:59:51.627 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-27 14:59:51.628 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-27 14:59:51.711 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-27 14:59:51.713 +03:00 [INF] Hosting environment: Development
2025-01-27 14:59:51.715 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-27 14:59:52.349 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-27 14:59:52.587 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 14:59:52.607 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 14:59:52.642 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 14:59:52.746 +03:00 [INF] Executed ViewResult - view Index executed in 110.0106ms.
2025-01-27 14:59:52.755 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 144.3431ms
2025-01-27 14:59:52.758 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 14:59:52.765 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 14:59:52.769 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 14:59:52.776 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 436.2939ms
2025-01-27 14:59:52.773 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 14:59:52.790 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 26.3318ms
2025-01-27 14:59:52.790 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 25.4581ms
2025-01-27 14:59:52.765 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 14:59:52.801 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 14:59:52.804 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 14:59:52.815 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 51.3795ms
2025-01-27 14:59:52.859 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 86.9256ms
2025-01-27 14:59:54.832 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7298/api/ShoppingCart/view - application/json 12
2025-01-27 14:59:54.843 +03:00 [INF] CORS policy execution successful.
2025-01-27 14:59:54.847 +03:00 [INF] Executing endpoint 'apiProject.Controllers.ShoppingCartController.ViewCart (MyShop)'
2025-01-27 14:59:54.855 +03:00 [INF] Route matched with {action = "ViewCart", controller = "ShoppingCart"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ViewCart(ViewCartQuery) on controller apiProject.Controllers.ShoppingCartController (MyShop).
2025-01-27 14:59:56.115 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7298/api/ShoppingCart/view - application/json 12
2025-01-27 14:59:56.118 +03:00 [INF] CORS policy execution successful.
2025-01-27 14:59:56.121 +03:00 [INF] Executing endpoint 'apiProject.Controllers.ShoppingCartController.ViewCart (MyShop)'
2025-01-27 14:59:56.124 +03:00 [INF] Route matched with {action = "ViewCart", controller = "ShoppingCart"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ViewCart(ViewCartQuery) on controller apiProject.Controllers.ShoppingCartController (MyShop).
2025-01-27 14:59:56.190 +03:00 [INF] Executed DbCommand (56ms) [Parameters=[@__request_UserId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[Id], [s].[ProductId], [s].[ProductName], [s].[Quantity], [s].[UserId], [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity]
FROM [ShoppingCarts] AS [s]
INNER JOIN [Products] AS [p] ON [s].[ProductId] = [p].[Id]
WHERE [s].[UserId] = @__request_UserId_0
2025-01-27 14:59:56.190 +03:00 [INF] Executed DbCommand (29ms) [Parameters=[@__request_UserId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[Id], [s].[ProductId], [s].[ProductName], [s].[Quantity], [s].[UserId], [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity]
FROM [ShoppingCarts] AS [s]
INNER JOIN [Products] AS [p] ON [s].[ProductId] = [p].[Id]
WHERE [s].[UserId] = @__request_UserId_0
2025-01-27 14:59:56.235 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ShoppingDTO, MyShop.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 14:59:56.235 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ShoppingDTO, MyShop.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 14:59:56.269 +03:00 [INF] Executed action apiProject.Controllers.ShoppingCartController.ViewCart (MyShop) in 1409.0117ms
2025-01-27 14:59:56.272 +03:00 [INF] Executed endpoint 'apiProject.Controllers.ShoppingCartController.ViewCart (MyShop)'
2025-01-27 14:59:56.278 +03:00 [INF] Executed action apiProject.Controllers.ShoppingCartController.ViewCart (MyShop) in 152.4319ms
2025-01-27 14:59:56.280 +03:00 [INF] Executed endpoint 'apiProject.Controllers.ShoppingCartController.ViewCart (MyShop)'
2025-01-27 14:59:56.282 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7298/api/ShoppingCart/view - 200 null application/json; charset=utf-8 1449.914ms
2025-01-27 14:59:56.283 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7298/api/ShoppingCart/view - 200 null application/json; charset=utf-8 167.592ms
2025-01-27 15:00:03.422 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Payment - null null
2025-01-27 15:00:03.435 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Payment (MyShop)'
2025-01-27 15:00:03.438 +03:00 [INF] Route matched with {action = "Payment", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Payment(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 15:00:03.479 +03:00 [INF] Executing ViewResult, running view Payment.
2025-01-27 15:00:03.511 +03:00 [INF] Executed ViewResult - view Payment executed in 32.3573ms.
2025-01-27 15:00:03.513 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Payment (MyShop) in 71.8785ms
2025-01-27 15:00:03.515 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Payment (MyShop)'
2025-01-27 15:00:03.517 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Payment - 200 null text/html; charset=utf-8 95.9373ms
2025-01-27 15:00:03.531 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 15:00:03.531 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 15:00:03.531 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 15:00:03.532 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 15:00:03.541 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 9.8036ms
2025-01-27 15:00:03.537 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 5.7354ms
2025-01-27 15:00:03.552 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 15:00:03.549 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 17.5727ms
2025-01-27 15:00:03.564 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 15:00:03.578 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 46.6771ms
2025-01-27 15:00:03.594 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7298/api/ShoppingCart/view - application/json 12
2025-01-27 15:00:03.598 +03:00 [INF] CORS policy execution successful.
2025-01-27 15:00:03.599 +03:00 [INF] Executing endpoint 'apiProject.Controllers.ShoppingCartController.ViewCart (MyShop)'
2025-01-27 15:00:03.601 +03:00 [INF] Route matched with {action = "ViewCart", controller = "ShoppingCart"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ViewCart(ViewCartQuery) on controller apiProject.Controllers.ShoppingCartController (MyShop).
2025-01-27 15:00:03.672 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__request_UserId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[Id], [s].[ProductId], [s].[ProductName], [s].[Quantity], [s].[UserId], [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity]
FROM [ShoppingCarts] AS [s]
INNER JOIN [Products] AS [p] ON [s].[ProductId] = [p].[Id]
WHERE [s].[UserId] = @__request_UserId_0
2025-01-27 15:00:03.677 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ShoppingDTO, MyShop.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 15:00:03.694 +03:00 [INF] Executed action apiProject.Controllers.ShoppingCartController.ViewCart (MyShop) in 89.91ms
2025-01-27 15:00:03.696 +03:00 [INF] Executed endpoint 'apiProject.Controllers.ShoppingCartController.ViewCart (MyShop)'
2025-01-27 15:00:03.698 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7298/api/ShoppingCart/view - 200 null application/json; charset=utf-8 104.3324ms
2025-01-27 15:04:56.595 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-27 15:04:56.920 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-27 15:04:56.924 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-27 15:04:57.054 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-27 15:04:57.059 +03:00 [INF] Hosting environment: Development
2025-01-27 15:04:57.062 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-27 15:04:57.275 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-27 15:04:57.528 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 15:04:57.544 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 15:04:57.575 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 15:04:57.666 +03:00 [INF] Executed ViewResult - view Index executed in 95.8063ms.
2025-01-27 15:04:57.674 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 127.6994ms
2025-01-27 15:04:57.677 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 15:04:57.681 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 15:04:57.681 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 15:04:57.681 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 15:04:57.703 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 15:04:57.694 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 428.0599ms
2025-01-27 15:04:57.718 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 36.6736ms
2025-01-27 15:04:57.713 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 31.7695ms
2025-01-27 15:04:57.718 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 36.6736ms
2025-01-27 15:04:57.693 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Images/egypt-3325133_1280.jpg - null null
2025-01-27 15:04:57.742 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 15:04:57.747 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 15:04:57.760 +03:00 [INF] The file /Images/egypt-3325133_1280.jpg was not modified
2025-01-27 15:04:57.763 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Images/egypt-3325133_1280.jpg - 304 null image/jpeg 69.4558ms
2025-01-27 15:04:57.787 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 84.1563ms
2025-01-27 15:05:07.127 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/products?category=Traditional - null null
2025-01-27 15:05:07.143 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 15:05:07.146 +03:00 [INF] Route matched with {action = "Products", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Products(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 15:05:07.196 +03:00 [INF] Executing ViewResult, running view Products.
2025-01-27 15:05:07.220 +03:00 [INF] Executed ViewResult - view Products executed in 24.1968ms.
2025-01-27 15:05:07.222 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Products (MyShop) in 74.9085ms
2025-01-27 15:05:07.223 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 15:05:07.225 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/products?category=Traditional - 200 null text/html; charset=utf-8 99.1238ms
2025-01-27 15:05:07.229 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 15:05:07.229 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 15:05:07.229 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 15:05:07.229 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 15:05:07.233 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 4.033ms
2025-01-27 15:05:07.254 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Traditional - null null
2025-01-27 15:05:07.262 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 15:05:07.266 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 15:05:07.237 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 8.1839ms
2025-01-27 15:05:07.243 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 12.8579ms
2025-01-27 15:05:07.274 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 15:05:07.292 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 15:05:07.294 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 65.3492ms
2025-01-27 15:05:08.759 +03:00 [INF] Executed DbCommand (53ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 15:05:08.872 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MyShop.API.Controllers.ProductDto, MyShop, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 15:05:08.886 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 1590.073ms
2025-01-27 15:05:08.889 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 15:05:08.894 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/e9338666-97b0-472a-a30e-3c3fe895e638_Finding-an-Oud-for-sale.jpg - null null
2025-01-27 15:05:08.894 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/f724be1f-bd68-43ed-bf92-b66cadb4cbf0_1_1A5UXriLI_fIjMxI_L4dPw.png - null null
2025-01-27 15:05:08.894 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/images/08fa6ed7-82ad-460b-95e7-c86673c43a63_IMG_5608a_easyHDR_eb4f805c-69fe-4f50-957f-ddb6f34df00e.jpg - null null
2025-01-27 15:05:08.896 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Traditional - 200 null application/json; charset=utf-8 1642.5342ms
2025-01-27 15:05:08.901 +03:00 [INF] The file /images/08fa6ed7-82ad-460b-95e7-c86673c43a63_IMG_5608a_easyHDR_eb4f805c-69fe-4f50-957f-ddb6f34df00e.jpg was not modified
2025-01-27 15:05:08.898 +03:00 [INF] The file /images/f724be1f-bd68-43ed-bf92-b66cadb4cbf0_1_1A5UXriLI_fIjMxI_L4dPw.png was not modified
2025-01-27 15:05:08.896 +03:00 [INF] The file /images/e9338666-97b0-472a-a30e-3c3fe895e638_Finding-an-Oud-for-sale.jpg was not modified
2025-01-27 15:05:08.907 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/08fa6ed7-82ad-460b-95e7-c86673c43a63_IMG_5608a_easyHDR_eb4f805c-69fe-4f50-957f-ddb6f34df00e.jpg - 304 null image/jpeg 13.2546ms
2025-01-27 15:05:08.908 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/f724be1f-bd68-43ed-bf92-b66cadb4cbf0_1_1A5UXriLI_fIjMxI_L4dPw.png - 304 null image/png 14.891ms
2025-01-27 15:05:08.910 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/images/e9338666-97b0-472a-a30e-3c3fe895e638_Finding-an-Oud-for-sale.jpg - 304 null image/jpeg 16.1344ms
2025-01-27 15:05:12.618 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 15:05:12.627 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 9.4653ms
2025-01-27 15:05:14.785 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/products?category=Guitars - null null
2025-01-27 15:05:14.793 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 15:05:14.795 +03:00 [INF] Route matched with {action = "Products", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Products(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 15:05:14.797 +03:00 [INF] Executing ViewResult, running view Products.
2025-01-27 15:05:14.802 +03:00 [INF] Executed ViewResult - view Products executed in 5.984ms.
2025-01-27 15:05:14.804 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Products (MyShop) in 7.7383ms
2025-01-27 15:05:14.805 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 15:05:14.807 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/products?category=Guitars - 200 null text/html; charset=utf-8 21.5692ms
2025-01-27 15:05:14.822 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 15:05:14.826 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 15:05:14.827 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 15:05:14.826 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 15:05:14.833 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 6.5029ms
2025-01-27 15:05:14.843 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 16.5351ms
2025-01-27 15:05:14.828 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 7.0366ms
2025-01-27 15:05:14.851 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Guitars - null null
2025-01-27 15:05:14.851 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 23.6673ms
2025-01-27 15:05:14.853 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 15:05:14.856 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 15:05:14.862 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 15:05:14.871 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 15:05:14.907 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 15:05:14.911 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MyShop.API.Controllers.ProductDto, MyShop, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 15:05:14.913 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 36.3558ms
2025-01-27 15:05:14.915 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 15:05:14.916 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Guitars - 200 null application/json; charset=utf-8 65.7288ms
2025-01-27 15:05:17.539 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/product?name=Moreno%20 - null null
2025-01-27 15:05:17.546 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Product (MyShop)'
2025-01-27 15:05:17.549 +03:00 [INF] Route matched with {action = "Product", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Product(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 15:05:17.555 +03:00 [INF] Executing ViewResult, running view Product.
2025-01-27 15:05:17.565 +03:00 [INF] Executed ViewResult - view Product executed in 9.6729ms.
2025-01-27 15:05:17.566 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Product (MyShop) in 14.4691ms
2025-01-27 15:05:17.568 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Product (MyShop)'
2025-01-27 15:05:17.571 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/product?name=Moreno%20 - 200 null text/html; charset=utf-8 31.6281ms
2025-01-27 15:05:17.580 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 15:05:17.580 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 15:05:17.580 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 15:05:17.584 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 4.0754ms
2025-01-27 15:05:17.580 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 15:05:17.588 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 8.6234ms
2025-01-27 15:05:17.591 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 11.2298ms
2025-01-27 15:05:17.610 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 15:05:17.612 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/reviews/Moreno  - application/json null
2025-01-27 15:05:17.594 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 15:05:17.615 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 35.1046ms
2025-01-27 15:05:17.626 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetReviews (MyShop)'
2025-01-27 15:05:17.640 +03:00 [INF] Route matched with {action = "GetReviews", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetReviews(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 15:05:17.737 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__productName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [u].[name] AS [UserName], [p].[ReviewText]
FROM [ProductReviews] AS [p]
INNER JOIN [Usesrs] AS [u] ON [p].[UserId] = [u].[id]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE [p0].[Name] = @__productName_0
2025-01-27 15:05:17.741 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MyShop.API.Controllers.ReviewResponseDto, MyShop, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 15:05:17.744 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetReviews (MyShop) in 100.8955ms
2025-01-27 15:05:17.745 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetReviews (MyShop)'
2025-01-27 15:05:17.746 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/reviews/Moreno  - 200 null application/json; charset=utf-8 135.7397ms
2025-01-27 15:05:17.750 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7298/api/Products/GetProductByName - application/json 18
2025-01-27 15:05:17.757 +03:00 [INF] CORS policy execution successful.
2025-01-27 15:05:17.758 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductByName (MyShop)'
2025-01-27 15:05:17.762 +03:00 [INF] Route matched with {action = "GetProductByName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductByName(GetProductByNameQuery) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 15:05:17.821 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__ToLower_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity]
FROM [Products] AS [p]
WHERE LOWER([p].[Name]) = @__ToLower_0
2025-01-27 15:05:17.832 +03:00 [INF] Executing OkObjectResult, writing value of type 'ProductDto'.
2025-01-27 15:05:17.858 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductByName (MyShop) in 94.7335ms
2025-01-27 15:05:17.860 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductByName (MyShop)'
2025-01-27 15:05:17.861 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7298/api/Products/GetProductByName - 200 null application/json; charset=utf-8 111.189ms
2025-01-27 15:05:25.996 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 15:05:26.002 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 6.0713ms
2025-01-27 15:05:29.472 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7298/api/ShoppingCart/view - application/json 12
2025-01-27 15:05:29.476 +03:00 [INF] CORS policy execution successful.
2025-01-27 15:05:29.477 +03:00 [INF] Executing endpoint 'apiProject.Controllers.ShoppingCartController.ViewCart (MyShop)'
2025-01-27 15:05:29.480 +03:00 [INF] Route matched with {action = "ViewCart", controller = "ShoppingCart"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ViewCart(ViewCartQuery) on controller apiProject.Controllers.ShoppingCartController (MyShop).
2025-01-27 15:05:29.500 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__request_UserId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[Id], [s].[ProductId], [s].[ProductName], [s].[Quantity], [s].[UserId], [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity]
FROM [ShoppingCarts] AS [s]
INNER JOIN [Products] AS [p] ON [s].[ProductId] = [p].[Id]
WHERE [s].[UserId] = @__request_UserId_0
2025-01-27 15:05:29.506 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ShoppingDTO, MyShop.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 15:05:29.521 +03:00 [INF] Executed action apiProject.Controllers.ShoppingCartController.ViewCart (MyShop) in 36.7228ms
2025-01-27 15:05:29.523 +03:00 [INF] Executed endpoint 'apiProject.Controllers.ShoppingCartController.ViewCart (MyShop)'
2025-01-27 15:05:29.524 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7298/api/ShoppingCart/view - 200 null application/json; charset=utf-8 53.7402ms
2025-01-27 15:05:30.986 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/Payment - null null
2025-01-27 15:05:30.996 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Payment (MyShop)'
2025-01-27 15:05:30.999 +03:00 [INF] Route matched with {action = "Payment", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Payment(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 15:05:31.004 +03:00 [INF] Executing ViewResult, running view Payment.
2025-01-27 15:05:31.025 +03:00 [INF] Executed ViewResult - view Payment executed in 22.0095ms.
2025-01-27 15:05:31.026 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Payment (MyShop) in 25.2687ms
2025-01-27 15:05:31.027 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Payment (MyShop)'
2025-01-27 15:05:31.028 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/Payment - 200 null text/html; charset=utf-8 42.2752ms
2025-01-27 15:05:31.048 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 15:05:31.049 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 15:05:31.049 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 15:05:31.050 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 15:05:31.054 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 6.5803ms
2025-01-27 15:05:31.057 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 7.9676ms
2025-01-27 15:05:31.059 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 10.3262ms
2025-01-27 15:05:31.073 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 15:05:31.079 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 15:05:31.082 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 32.9555ms
2025-01-27 15:05:31.109 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7298/api/ShoppingCart/view - application/json 12
2025-01-27 15:05:31.114 +03:00 [INF] CORS policy execution successful.
2025-01-27 15:05:31.120 +03:00 [INF] Executing endpoint 'apiProject.Controllers.ShoppingCartController.ViewCart (MyShop)'
2025-01-27 15:05:31.121 +03:00 [INF] Route matched with {action = "ViewCart", controller = "ShoppingCart"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ViewCart(ViewCartQuery) on controller apiProject.Controllers.ShoppingCartController (MyShop).
2025-01-27 15:05:31.129 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__request_UserId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[Id], [s].[ProductId], [s].[ProductName], [s].[Quantity], [s].[UserId], [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity]
FROM [ShoppingCarts] AS [s]
INNER JOIN [Products] AS [p] ON [s].[ProductId] = [p].[Id]
WHERE [s].[UserId] = @__request_UserId_0
2025-01-27 15:05:31.136 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ShoppingDTO, MyShop.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 15:05:31.156 +03:00 [INF] Executed action apiProject.Controllers.ShoppingCartController.ViewCart (MyShop) in 32.3131ms
2025-01-27 15:05:31.158 +03:00 [INF] Executed endpoint 'apiProject.Controllers.ShoppingCartController.ViewCart (MyShop)'
2025-01-27 15:05:31.159 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7298/api/ShoppingCart/view - 200 null application/json; charset=utf-8 49.4348ms
2025-01-27 15:13:42.231 +03:00 [INF] User profile is available. Using 'C:\Users\user\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-27 15:13:42.470 +03:00 [INF] Now listening on: https://localhost:7298
2025-01-27 15:13:42.472 +03:00 [INF] Now listening on: http://localhost:5087
2025-01-27 15:13:42.543 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-27 15:13:42.546 +03:00 [INF] Hosting environment: Development
2025-01-27 15:13:42.547 +03:00 [INF] Content root path: C:\Users\user\Downloads\MyShop\MyShop
2025-01-27 15:13:43.162 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/ - null null
2025-01-27 15:13:43.402 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 15:13:43.422 +03:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 15:13:43.462 +03:00 [INF] Executing ViewResult, running view Index.
2025-01-27 15:13:43.550 +03:00 [INF] Executed ViewResult - view Index executed in 94.8721ms.
2025-01-27 15:13:43.556 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Index (MyShop) in 131.1873ms
2025-01-27 15:13:43.559 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Index (MyShop)'
2025-01-27 15:13:43.570 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/ - 200 null text/html; charset=utf-8 420.6794ms
2025-01-27 15:13:43.574 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 15:13:43.574 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 15:13:43.574 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 15:13:43.589 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 14.9912ms
2025-01-27 15:13:43.590 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 15:13:43.603 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 28.5322ms
2025-01-27 15:13:43.603 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 28.5336ms
2025-01-27 15:13:43.607 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 15:13:43.610 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 15:13:43.695 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 105.0231ms
2025-01-27 15:13:46.321 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/products?category=Guitars - null null
2025-01-27 15:13:46.335 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 15:13:46.340 +03:00 [INF] Route matched with {action = "Products", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Products(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 15:13:46.383 +03:00 [INF] Executing ViewResult, running view Products.
2025-01-27 15:13:46.406 +03:00 [INF] Executed ViewResult - view Products executed in 23.876ms.
2025-01-27 15:13:46.408 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Products (MyShop) in 65.5273ms
2025-01-27 15:13:46.409 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Products (MyShop)'
2025-01-27 15:13:46.410 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/products?category=Guitars - 200 null text/html; charset=utf-8 89.8041ms
2025-01-27 15:13:46.415 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 15:13:46.415 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 15:13:46.417 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 15:13:46.417 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 15:13:46.423 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 8.7406ms
2025-01-27 15:13:46.429 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 12.0525ms
2025-01-27 15:13:46.443 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 15:13:46.441 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/by-category/Guitars - null null
2025-01-27 15:13:46.419 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 5.1416ms
2025-01-27 15:13:46.452 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 15:13:46.464 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 15:13:46.488 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 70.9877ms
2025-01-27 15:13:46.498 +03:00 [INF] Route matched with {action = "GetProductsByCategoryName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductsByCategoryName(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 15:13:48.093 +03:00 [INF] Executed DbCommand (54ms) [Parameters=[@__categoryName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity], [c].[Id], [c].[Name]
FROM [Products] AS [p]
INNER JOIN [category] AS [c] ON [p].[CtegoryId] = [c].[Id]
WHERE [c].[Name] = @__categoryName_0
2025-01-27 15:13:48.240 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MyShop.API.Controllers.ProductDto, MyShop, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 15:13:48.256 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop) in 1755.8756ms
2025-01-27 15:13:48.259 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductsByCategoryName (MyShop)'
2025-01-27 15:13:48.272 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/by-category/Guitars - 200 null application/json; charset=utf-8 1831.7288ms
2025-01-27 15:13:50.728 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/product?name=Moreno%20 - null null
2025-01-27 15:13:50.746 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Product (MyShop)'
2025-01-27 15:13:50.750 +03:00 [INF] Route matched with {action = "Product", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Product(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 15:13:50.760 +03:00 [INF] Executing ViewResult, running view Product.
2025-01-27 15:13:50.774 +03:00 [INF] Executed ViewResult - view Product executed in 14.6063ms.
2025-01-27 15:13:50.776 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Product (MyShop) in 23.3924ms
2025-01-27 15:13:50.778 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Product (MyShop)'
2025-01-27 15:13:50.780 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/product?name=Moreno%20 - 200 null text/html; charset=utf-8 52.9093ms
2025-01-27 15:13:50.787 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 15:13:50.790 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 15:13:50.787 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 15:13:50.791 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 5.5951ms
2025-01-27 15:13:50.791 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 15:13:50.795 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 4.4599ms
2025-01-27 15:13:50.799 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 15:13:50.797 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 11.04ms
2025-01-27 15:13:50.806 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/reviews/Moreno  - application/json null
2025-01-27 15:13:50.820 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 15:13:50.820 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 29.93ms
2025-01-27 15:13:50.826 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetReviews (MyShop)'
2025-01-27 15:13:50.842 +03:00 [INF] Route matched with {action = "GetReviews", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetReviews(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 15:13:50.897 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__productName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [u].[name] AS [UserName], [p].[ReviewText]
FROM [ProductReviews] AS [p]
INNER JOIN [Usesrs] AS [u] ON [p].[UserId] = [u].[id]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE [p0].[Name] = @__productName_0
2025-01-27 15:13:50.901 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MyShop.API.Controllers.ReviewResponseDto, MyShop, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 15:13:50.904 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetReviews (MyShop) in 60.3146ms
2025-01-27 15:13:50.905 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetReviews (MyShop)'
2025-01-27 15:13:50.906 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/reviews/Moreno  - 200 null application/json; charset=utf-8 103.1656ms
2025-01-27 15:13:50.908 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7298/api/Products/GetProductByName - application/json 18
2025-01-27 15:13:50.913 +03:00 [INF] CORS policy execution successful.
2025-01-27 15:13:50.915 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductByName (MyShop)'
2025-01-27 15:13:50.920 +03:00 [INF] Route matched with {action = "GetProductByName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductByName(GetProductByNameQuery) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 15:13:51.025 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ToLower_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity]
FROM [Products] AS [p]
WHERE LOWER([p].[Name]) = @__ToLower_0
2025-01-27 15:13:51.037 +03:00 [INF] Executing OkObjectResult, writing value of type 'ProductDto'.
2025-01-27 15:13:51.063 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductByName (MyShop) in 141.534ms
2025-01-27 15:13:51.064 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductByName (MyShop)'
2025-01-27 15:13:51.065 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7298/api/Products/GetProductByName - 200 null application/json; charset=utf-8 156.7722ms
2025-01-27 15:13:53.368 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 15:13:53.372 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 4.7285ms
2025-01-27 15:13:55.222 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/product?name=Moreno%20 - null null
2025-01-27 15:13:55.231 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Product (MyShop)'
2025-01-27 15:13:55.232 +03:00 [INF] Route matched with {action = "Product", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Product(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 15:13:55.236 +03:00 [INF] Executing ViewResult, running view Product.
2025-01-27 15:13:55.243 +03:00 [INF] Executed ViewResult - view Product executed in 7.4055ms.
2025-01-27 15:13:55.244 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Product (MyShop) in 10.1244ms
2025-01-27 15:13:55.245 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Product (MyShop)'
2025-01-27 15:13:55.247 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/product?name=Moreno%20 - 200 null text/html; charset=utf-8 24.627ms
2025-01-27 15:13:55.265 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 15:13:55.265 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 15:13:55.266 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 15:13:55.266 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 15:13:55.273 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 8.0789ms
2025-01-27 15:13:55.276 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 11.1965ms
2025-01-27 15:13:55.290 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 24.4497ms
2025-01-27 15:13:55.295 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 15:13:55.292 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 26.745ms
2025-01-27 15:13:55.295 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/reviews/Moreno  - application/json null
2025-01-27 15:13:55.299 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 15:13:55.310 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetReviews (MyShop)'
2025-01-27 15:13:55.312 +03:00 [INF] Route matched with {action = "GetReviews", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetReviews(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 15:13:55.327 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__productName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [u].[name] AS [UserName], [p].[ReviewText]
FROM [ProductReviews] AS [p]
INNER JOIN [Usesrs] AS [u] ON [p].[UserId] = [u].[id]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE [p0].[Name] = @__productName_0
2025-01-27 15:13:55.329 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MyShop.API.Controllers.ReviewResponseDto, MyShop, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 15:13:55.330 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetReviews (MyShop) in 16.189ms
2025-01-27 15:13:55.331 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetReviews (MyShop)'
2025-01-27 15:13:55.332 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/reviews/Moreno  - 200 null application/json; charset=utf-8 37.4228ms
2025-01-27 15:13:55.338 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7298/api/Products/GetProductByName - application/json 18
2025-01-27 15:13:55.344 +03:00 [INF] CORS policy execution successful.
2025-01-27 15:13:55.344 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductByName (MyShop)'
2025-01-27 15:13:55.345 +03:00 [INF] Route matched with {action = "GetProductByName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductByName(GetProductByNameQuery) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 15:13:55.355 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__ToLower_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity]
FROM [Products] AS [p]
WHERE LOWER([p].[Name]) = @__ToLower_0
2025-01-27 15:13:55.360 +03:00 [INF] Executing OkObjectResult, writing value of type 'ProductDto'.
2025-01-27 15:13:55.377 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductByName (MyShop) in 31.0166ms
2025-01-27 15:13:55.379 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductByName (MyShop)'
2025-01-27 15:13:55.380 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7298/api/Products/GetProductByName - 200 null application/json; charset=utf-8 42.2458ms
2025-01-27 15:13:58.083 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 15:13:58.103 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 20.0613ms
2025-01-27 15:14:00.357 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/product?name=Moreno%20 - null null
2025-01-27 15:14:00.366 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Product (MyShop)'
2025-01-27 15:14:00.370 +03:00 [INF] Route matched with {action = "Product", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Product(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 15:14:00.374 +03:00 [INF] Executing ViewResult, running view Product.
2025-01-27 15:14:00.380 +03:00 [INF] Executed ViewResult - view Product executed in 5.4678ms.
2025-01-27 15:14:00.381 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Product (MyShop) in 6.8736ms
2025-01-27 15:14:00.381 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Product (MyShop)'
2025-01-27 15:14:00.383 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/product?name=Moreno%20 - 200 null text/html; charset=utf-8 27.1524ms
2025-01-27 15:14:00.405 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 15:14:00.408 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 15:14:00.408 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 15:14:00.408 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 15:14:00.413 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 5.1803ms
2025-01-27 15:14:00.424 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 15.6968ms
2025-01-27 15:14:00.410 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 5.6478ms
2025-01-27 15:14:00.431 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/reviews/Moreno  - application/json null
2025-01-27 15:14:00.430 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 15:14:00.433 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 25.2226ms
2025-01-27 15:14:00.434 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 15:14:00.437 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetReviews (MyShop)'
2025-01-27 15:14:00.447 +03:00 [INF] Route matched with {action = "GetReviews", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetReviews(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 15:14:00.458 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__productName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [u].[name] AS [UserName], [p].[ReviewText]
FROM [ProductReviews] AS [p]
INNER JOIN [Usesrs] AS [u] ON [p].[UserId] = [u].[id]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE [p0].[Name] = @__productName_0
2025-01-27 15:14:00.460 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MyShop.API.Controllers.ReviewResponseDto, MyShop, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 15:14:00.462 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetReviews (MyShop) in 12.3045ms
2025-01-27 15:14:00.463 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetReviews (MyShop)'
2025-01-27 15:14:00.464 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/reviews/Moreno  - 200 null application/json; charset=utf-8 33.8912ms
2025-01-27 15:14:00.470 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7298/api/Products/GetProductByName - application/json 18
2025-01-27 15:14:00.475 +03:00 [INF] CORS policy execution successful.
2025-01-27 15:14:00.476 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductByName (MyShop)'
2025-01-27 15:14:00.477 +03:00 [INF] Route matched with {action = "GetProductByName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductByName(GetProductByNameQuery) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 15:14:00.481 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__ToLower_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity]
FROM [Products] AS [p]
WHERE LOWER([p].[Name]) = @__ToLower_0
2025-01-27 15:14:00.493 +03:00 [INF] Executing OkObjectResult, writing value of type 'ProductDto'.
2025-01-27 15:14:00.510 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductByName (MyShop) in 32.6534ms
2025-01-27 15:14:00.512 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductByName (MyShop)'
2025-01-27 15:14:00.513 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7298/api/Products/GetProductByName - 200 null application/json; charset=utf-8 43.0044ms
2025-01-27 15:14:02.457 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 15:14:02.462 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 5.8686ms
2025-01-27 15:14:03.971 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/Home/product?name=Moreno%20 - null null
2025-01-27 15:14:03.976 +03:00 [INF] Executing endpoint 'MyShop.Controllers.HomeController.Product (MyShop)'
2025-01-27 15:14:03.978 +03:00 [INF] Route matched with {action = "Product", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Product(System.String) on controller MyShop.Controllers.HomeController (MyShop).
2025-01-27 15:14:03.981 +03:00 [INF] Executing ViewResult, running view Product.
2025-01-27 15:14:03.989 +03:00 [INF] Executed ViewResult - view Product executed in 8.0905ms.
2025-01-27 15:14:03.990 +03:00 [INF] Executed action MyShop.Controllers.HomeController.Product (MyShop) in 10.0021ms
2025-01-27 15:14:03.992 +03:00 [INF] Executed endpoint 'MyShop.Controllers.HomeController.Product (MyShop)'
2025-01-27 15:14:03.993 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/Home/product?name=Moreno%20 - 200 null text/html; charset=utf-8 21.2246ms
2025-01-27 15:14:04.003 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - null null
2025-01-27 15:14:04.005 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - null null
2025-01-27 15:14:04.006 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/jquery/dist/jquery.js - 404 0 null 4.0156ms
2025-01-27 15:14:04.005 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 15:14:04.005 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_vs/browserLink - null null
2025-01-27 15:14:04.009 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js - 404 0 null 3.1917ms
2025-01-27 15:14:04.018 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/api/Products/reviews/Moreno  - application/json null
2025-01-27 15:14:04.024 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/bootstrap/dist/js/bootstrap.js, Response status code: 404
2025-01-27 15:14:04.029 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetReviews (MyShop)'
2025-01-27 15:14:04.010 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7298/lib/jquery/dist/jquery.js, Response status code: 404
2025-01-27 15:14:04.012 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 6.9891ms
2025-01-27 15:14:04.031 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_vs/browserLink - 200 null text/javascript; charset=UTF-8 25.7236ms
2025-01-27 15:14:04.034 +03:00 [INF] Route matched with {action = "GetReviews", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetReviews(System.String) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 15:14:04.057 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__productName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [u].[name] AS [UserName], [p].[ReviewText]
FROM [ProductReviews] AS [p]
INNER JOIN [Usesrs] AS [u] ON [p].[UserId] = [u].[id]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE [p0].[Name] = @__productName_0
2025-01-27 15:14:04.060 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MyShop.API.Controllers.ReviewResponseDto, MyShop, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-27 15:14:04.061 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetReviews (MyShop) in 14.4882ms
2025-01-27 15:14:04.063 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetReviews (MyShop)'
2025-01-27 15:14:04.066 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/api/Products/reviews/Moreno  - 200 null application/json; charset=utf-8 48.6143ms
2025-01-27 15:14:04.074 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7298/api/Products/GetProductByName - application/json 18
2025-01-27 15:14:04.078 +03:00 [INF] CORS policy execution successful.
2025-01-27 15:14:04.079 +03:00 [INF] Executing endpoint 'MyShop.API.Controllers.ProductsController.GetProductByName (MyShop)'
2025-01-27 15:14:04.080 +03:00 [INF] Route matched with {action = "GetProductByName", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductByName(GetProductByNameQuery) on controller MyShop.API.Controllers.ProductsController (MyShop).
2025-01-27 15:14:04.091 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__ToLower_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[BrandId], [p].[CtegoryId], [p].[Description], [p].[ImagePath], [p].[IsPaid], [p].[Name], [p].[Price], [p].[StockQuantity]
FROM [Products] AS [p]
WHERE LOWER([p].[Name]) = @__ToLower_0
2025-01-27 15:14:04.095 +03:00 [INF] Executing OkObjectResult, writing value of type 'ProductDto'.
2025-01-27 15:14:04.121 +03:00 [INF] Executed action MyShop.API.Controllers.ProductsController.GetProductByName (MyShop) in 39.9514ms
2025-01-27 15:14:04.123 +03:00 [INF] Executed endpoint 'MyShop.API.Controllers.ProductsController.GetProductByName (MyShop)'
2025-01-27 15:14:04.123 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7298/api/Products/GetProductByName - 200 null application/json; charset=utf-8 49.8581ms
2025-01-27 15:14:06.360 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - null null
2025-01-27 15:14:06.364 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7298/_framework/aspnetcore-browser-refresh.js - 200 13748 application/javascript; charset=utf-8 4.2509ms
